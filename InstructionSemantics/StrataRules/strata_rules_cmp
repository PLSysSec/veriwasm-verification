(cmp rh, imm8) -> (CF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[8:8] == 0x1_1) ; PF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:0] == 0x0_8 ; SF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:7] == 0x1_1 ; OF := (!OP2[7:7] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[7:7] == 0x1_1 bool_iff (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:7] == 0x1_1))
(cmp rh, rh) -> (CF := !((0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[15:8])[8:8] == 0x1_1) ; PF := !((0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[15:8])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[15:8])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[15:8])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[15:8])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[15:8])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[15:8])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[15:8])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[15:8])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[15:8])[7:0] == 0x0_8 ; SF := (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[15:8])[7:7] == 0x1_1 ; OF := (!OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[15:15] == 0x1_1 bool_iff (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[15:8])[7:7] == 0x1_1))
(cmp rh, r8) -> (CF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[8:8] == 0x1_1) ; PF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:0] == 0x0_8 ; SF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:7] == 0x1_1 ; OF := (!OP2[7:7] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[7:7] == 0x1_1 bool_iff (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:7] == 0x1_1))
(cmp rh, m8) -> (CF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[8:8] == 0x1_1) ; PF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:0] == 0x0_8 ; SF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:7] == 0x1_1 ; OF := (!OP2[7:7] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[7:7] == 0x1_1 bool_iff (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:7] == 0x1_1))
(cmp al, imm8) -> (CF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[8:8] == 0x1_1) ; PF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (!OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(!OP2[7:7] == 0x1_1 bool_iff (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(cmp r8, imm8) -> (CF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[8:8] == 0x1_1) ; PF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (!OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(!OP2[7:7] == 0x1_1 bool_iff (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(cmp r8, rh) -> (CF := !((0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[8:8] == 0x1_1) ; PF := !((0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (!OP2[15:15] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(!OP2[15:15] == 0x1_1 bool_iff (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(cmp r8, r8) -> (CF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[8:8] == 0x1_1) ; PF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (!OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(!OP2[7:7] == 0x1_1 bool_iff (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(cmp r8, m8) -> (CF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[8:8] == 0x1_1) ; PF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (!OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(!OP2[7:7] == 0x1_1 bool_iff (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(cmp m8, imm8) -> (CF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[8:8] == 0x1_1) ; PF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (!OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(!OP2[7:7] == 0x1_1 bool_iff (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(cmp m8, rh) -> (CF := !((0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[8:8] == 0x1_1) ; PF := !((0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (!OP2[15:15] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(!OP2[15:15] == 0x1_1 bool_iff (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(cmp m8, r8) -> (CF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[8:8] == 0x1_1) ; PF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (!OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(!OP2[7:7] == 0x1_1 bool_iff (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(cmp eax, imm32) -> (CF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[32:32] == 0x1_1) ; PF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (!OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(!OP2[31:31] == 0x1_1 bool_iff (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(cmp r32, imm8) -> (CF := !((0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[32:32] == 0x1_1) ; PF := !((0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (!(sign-extend-32(OP2))[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(!(sign-extend-32(OP2))[31:31] == 0x1_1 bool_iff (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(cmp r32, imm32) -> (CF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[32:32] == 0x1_1) ; PF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (!OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(!OP2[31:31] == 0x1_1 bool_iff (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(cmp r32, r32) -> (CF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[32:32] == 0x1_1) ; PF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (!OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(!OP2[31:31] == 0x1_1 bool_iff (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(cmp r32, m32) -> (CF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[32:32] == 0x1_1) ; PF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (!OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(!OP2[31:31] == 0x1_1 bool_iff (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(cmp m32, imm8) -> (CF := !((0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[32:32] == 0x1_1) ; PF := !((0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (!(sign-extend-32(OP2))[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(!(sign-extend-32(OP2))[31:31] == 0x1_1 bool_iff (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(cmp m32, imm32) -> (CF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[32:32] == 0x1_1) ; PF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (!OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(!OP2[31:31] == 0x1_1 bool_iff (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(cmp m32, r32) -> (CF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[32:32] == 0x1_1) ; PF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (!OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(!OP2[31:31] == 0x1_1 bool_iff (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(cmp rax, imm32) -> (CF := !((0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[64:64] == 0x1_1) ; PF := !((0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1))
(cmp r64, imm8) -> (CF := !((0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[64:64] == 0x1_1) ; PF := !((0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1))
(cmp r64, imm32) -> (CF := !((0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[64:64] == 0x1_1) ; PF := !((0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1))
(cmp r64, r64) -> (CF := !((0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[64:64] == 0x1_1) ; PF := !((0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (!OP2[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(!OP2[63:63] == 0x1_1 bool_iff (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1))
(cmp r64, m64) -> (CF := !((0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[64:64] == 0x1_1) ; PF := !((0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (!OP2[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(!OP2[63:63] == 0x1_1 bool_iff (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1))
(cmp m64, imm8) -> (CF := !((0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[64:64] == 0x1_1) ; PF := !((0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1))
(cmp m64, imm32) -> (CF := !((0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[64:64] == 0x1_1) ; PF := !((0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1))
(cmp m64, r64) -> (CF := !((0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[64:64] == 0x1_1) ; PF := !((0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (!OP2[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(!OP2[63:63] == 0x1_1 bool_iff (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1))
(cmp ax, imm16) -> (CF := !((0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[16:16] == 0x1_1) ; PF := !((0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (!OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[15:15] == 0x1_1 bool_iff (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(cmp r16, imm8) -> (CF := !((0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[16:16] == 0x1_1) ; PF := !((0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (!(sign-extend-16(OP2))[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!(sign-extend-16(OP2))[15:15] == 0x1_1 bool_iff (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(cmp r16, imm16) -> (CF := !((0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[16:16] == 0x1_1) ; PF := !((0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (!OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[15:15] == 0x1_1 bool_iff (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(cmp r16, r16) -> (CF := !((0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[16:16] == 0x1_1) ; PF := !((0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (!OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[15:15] == 0x1_1 bool_iff (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(cmp r16, m16) -> (CF := !((0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[16:16] == 0x1_1) ; PF := !((0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (!OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[15:15] == 0x1_1 bool_iff (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(cmp m16, imm8) -> (CF := !((0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[16:16] == 0x1_1) ; PF := !((0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (!(sign-extend-16(OP2))[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!(sign-extend-16(OP2))[15:15] == 0x1_1 bool_iff (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(cmp m16, imm16) -> (CF := !((0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[16:16] == 0x1_1) ; PF := !((0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (!OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[15:15] == 0x1_1 bool_iff (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(cmp m16, r16) -> (CF := !((0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[16:16] == 0x1_1) ; PF := !((0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (!OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[15:15] == 0x1_1 bool_iff (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
