(adc rh, imm8) -> (OP1 = OP1[63:16] o ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[7:0] o OP1[7:0] ; CF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[8:8] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[7:0] == 0x0_8 ; SF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[7:7] == 0x1_1 ; OF := (OP2[7:7] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(OP2[7:7] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[7:7] == 0x1_1))
(adc rh, rh) -> (OP1 = OP1[63:16] o ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[15:8])[7:0] o OP1[7:0] ; CF := ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[15:8])[8:8] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[15:8])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[15:8])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[15:8])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[15:8])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[15:8])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[15:8])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[15:8])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[15:8])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[15:8])[7:0] == 0x0_8 ; SF := ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[15:8])[7:7] == 0x1_1 ; OF := (OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(OP2[15:15] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[15:8])[7:7] == 0x1_1))
(adc rh, r8) -> (OP1 = OP1[63:16] o ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[7:0] o OP1[7:0] ; CF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[8:8] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[7:0] == 0x0_8 ; SF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[7:7] == 0x1_1 ; OF := (OP2[7:7] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(OP2[7:7] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[7:7] == 0x1_1))
(adc rh, m8) -> (OP1 = OP1[63:16] o ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[7:0] o OP1[7:0] ; CF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[8:8] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[7:0] == 0x0_8 ; SF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[7:7] == 0x1_1 ; OF := (OP2[7:7] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(OP2[7:7] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[7:7] == 0x1_1))
(adc al, imm8) -> (OP1 = OP1[63:8] o ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:0] ; CF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[8:8] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(OP2[7:7] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(adc r8, imm8) -> (OP1 = OP1[63:8] o ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:0] ; CF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[8:8] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(OP2[7:7] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(adc r8, rh) -> (OP1 = OP1[63:8] o ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[7:0] ; CF := ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[8:8] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (OP2[15:15] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(OP2[15:15] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(adc r8, r8) -> (OP1 = OP1[63:8] o ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:0] ; CF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[8:8] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(OP2[7:7] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(adc r8, m8) -> (OP1 = OP1[63:8] o ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:0] ; CF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[8:8] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(OP2[7:7] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(adc m8, imm8) -> (OP1 = (OP1[63:8] o ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:0])[7:0] ; CF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[8:8] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(OP2[7:7] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(adc m8, rh) -> (OP1 = (OP1[63:8] o ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[7:0])[7:0] ; CF := ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[8:8] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (OP2[15:15] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(OP2[15:15] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(adc m8, r8) -> (OP1 = (OP1[63:8] o ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:0])[7:0] ; CF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[8:8] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(OP2[7:7] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(adc eax, imm32) -> (OP1 = 0x0_32 o ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:0] ; CF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[32:32] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(OP2[31:31] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(adc r32, imm8) -> (OP1 = 0x0_32 o ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[31:0] ; CF := ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[32:32] == 0x1_1 ; PF := !(((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := ((sign-extend-32(OP2))[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !((sign-extend-32(OP2))[31:31] == 0x1_1 bool_iff ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(adc r32, imm32) -> (OP1 = 0x0_32 o ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:0] ; CF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[32:32] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(OP2[31:31] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(adc r32, r32) -> (OP1 = 0x0_32 o ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:0] ; CF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[32:32] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(OP2[31:31] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(adc r32, m32) -> (OP1 = 0x0_32 o ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:0] ; CF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[32:32] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(OP2[31:31] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(adc m32, imm8) -> (OP1 = 0x0_32 o ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[31:0] ; CF := ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[32:32] == 0x1_1 ; PF := !(((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := ((sign-extend-32(OP2))[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !((sign-extend-32(OP2))[31:31] == 0x1_1 bool_iff ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(adc m32, imm32) -> (OP1 = (0x0_32 o ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:0])[31:0] ; CF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[32:32] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(OP2[31:31] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(adc m32, r32) -> (OP1 = (0x0_32 o ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:0])[31:0] ; CF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[32:32] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(OP2[31:31] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(adc rax, imm32) -> (OP1 = ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:0] ; CF := ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[64:64] == 0x1_1 ; PF := !(((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := ((sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !((sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:63] == 0x1_1))
(adc r64, imm8) -> (OP1 = ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:0] ; CF := ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[64:64] == 0x1_1 ; PF := !(((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := ((sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !((sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:63] == 0x1_1))
(adc r64, imm32) -> (OP1 = ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:0] ; CF := ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[64:64] == 0x1_1 ; PF := !(((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := ((sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !((sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:63] == 0x1_1))
(adc r64, r64) -> (OP1 = ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[63:0] ; CF := ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[64:64] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (OP2[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(OP2[63:63] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[63:63] == 0x1_1))
(adc r64, m64) -> (OP1 = ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[63:0] ; CF := ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[64:64] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (OP2[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(OP2[63:63] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[63:63] == 0x1_1))
(adc m64, imm8) -> (OP1 = ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:0] ; CF := ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[64:64] == 0x1_1 ; PF := !(((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := ((sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !((sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:63] == 0x1_1))
(adc m64, imm32) -> (OP1 = ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:0] ; CF := ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[64:64] == 0x1_1 ; PF := !(((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := ((sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !((sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:63] == 0x1_1))
(adc m64, r64) -> (OP1 = (((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[63:0])[63:0] ; CF := ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[64:64] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (OP2[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(OP2[63:63] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[63:63] == 0x1_1))
(adc ax, imm16) -> (OP1 = OP1[63:16] o ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:0] ; CF := ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[16:16] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(OP2[15:15] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(adc r16, imm8) -> (OP1 = OP1[63:16] o ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[15:0] ; CF := ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[16:16] == 0x1_1 ; PF := !(((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := ((sign-extend-16(OP2))[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !((sign-extend-16(OP2))[15:15] == 0x1_1 bool_iff ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(adc r16, imm16) -> (OP1 = OP1[63:16] o ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:0] ; CF := ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[16:16] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(OP2[15:15] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(adc r16, r16) -> (OP1 = OP1[63:16] o ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:0] ; CF := ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[16:16] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(OP2[15:15] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(adc r16, m16) -> (OP1 = OP1[63:16] o ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:0] ; CF := ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[16:16] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(OP2[15:15] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(adc m16, imm8) -> (OP1 = OP1[63:16] o ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[15:0] ; CF := ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[16:16] == 0x1_1 ; PF := !(((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := ((sign-extend-16(OP2))[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !((sign-extend-16(OP2))[15:15] == 0x1_1 bool_iff ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(adc m16, imm16) -> (OP1 = (OP1[63:16] o ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:0])[15:0] ; CF := ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[16:16] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(OP2[15:15] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(adc m16, r16) -> (OP1 = (OP1[63:16] o ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:0])[15:0] ; CF := ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[16:16] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(OP2[15:15] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(add rh, imm8) -> (OP1 = OP1[63:16] o (0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[7:0] o OP1[7:0] ; CF := (0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[8:8] == 0x1_1 ; PF := !((0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[0:0] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[1:1] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[2:2] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[3:3] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[4:4] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[5:5] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[6:6] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[7:7] == 0x1_1) ; ZF := (0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[7:0] == 0x0_8 ; SF := (0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[7:7] == 0x1_1 ; OF := (OP2[7:7] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(OP2[7:7] == 0x1_1 bool_iff (0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[7:7] == 0x1_1))
(add rh, rh) -> (OP1 = OP1[63:16] o (0x0_1 o OP2[15:8] + 0x0_1 o OP1[15:8])[7:0] o OP1[7:0] ; CF := (0x0_1 o OP2[15:8] + 0x0_1 o OP1[15:8])[8:8] == 0x1_1 ; PF := !((0x0_1 o OP2[15:8] + 0x0_1 o OP1[15:8])[0:0] == 0x1_1 bool_xor (0x0_1 o OP2[15:8] + 0x0_1 o OP1[15:8])[1:1] == 0x1_1 bool_xor (0x0_1 o OP2[15:8] + 0x0_1 o OP1[15:8])[2:2] == 0x1_1 bool_xor (0x0_1 o OP2[15:8] + 0x0_1 o OP1[15:8])[3:3] == 0x1_1 bool_xor (0x0_1 o OP2[15:8] + 0x0_1 o OP1[15:8])[4:4] == 0x1_1 bool_xor (0x0_1 o OP2[15:8] + 0x0_1 o OP1[15:8])[5:5] == 0x1_1 bool_xor (0x0_1 o OP2[15:8] + 0x0_1 o OP1[15:8])[6:6] == 0x1_1 bool_xor (0x0_1 o OP2[15:8] + 0x0_1 o OP1[15:8])[7:7] == 0x1_1) ; ZF := (0x0_1 o OP2[15:8] + 0x0_1 o OP1[15:8])[7:0] == 0x0_8 ; SF := (0x0_1 o OP2[15:8] + 0x0_1 o OP1[15:8])[7:7] == 0x1_1 ; OF := (OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(OP2[15:15] == 0x1_1 bool_iff (0x0_1 o OP2[15:8] + 0x0_1 o OP1[15:8])[7:7] == 0x1_1))
(add rh, r8) -> (OP1 = OP1[63:16] o (0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[7:0] o OP1[7:0] ; CF := (0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[8:8] == 0x1_1 ; PF := !((0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[0:0] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[1:1] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[2:2] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[3:3] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[4:4] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[5:5] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[6:6] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[7:7] == 0x1_1) ; ZF := (0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[7:0] == 0x0_8 ; SF := (0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[7:7] == 0x1_1 ; OF := (OP2[7:7] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(OP2[7:7] == 0x1_1 bool_iff (0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[7:7] == 0x1_1))
(add rh, m8) -> (OP1 = OP1[63:16] o (0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[7:0] o OP1[7:0] ; CF := (0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[8:8] == 0x1_1 ; PF := !((0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[0:0] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[1:1] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[2:2] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[3:3] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[4:4] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[5:5] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[6:6] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[7:7] == 0x1_1) ; ZF := (0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[7:0] == 0x0_8 ; SF := (0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[7:7] == 0x1_1 ; OF := (OP2[7:7] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(OP2[7:7] == 0x1_1 bool_iff (0x0_1 o OP2[7:0] + 0x0_1 o OP1[15:8])[7:7] == 0x1_1))
(add al, imm8) -> (OP1 = OP1[63:8] o (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[7:0] ; CF := (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[8:8] == 0x1_1 ; PF := !((0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(OP2[7:7] == 0x1_1 bool_iff (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(add r8, imm8) -> (OP1 = OP1[63:8] o (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[7:0] ; CF := (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[8:8] == 0x1_1 ; PF := !((0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(OP2[7:7] == 0x1_1 bool_iff (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(add r8, rh) -> (OP1 = OP1[63:8] o (0x0_1 o OP2[15:8] + 0x0_1 o OP1[7:0])[7:0] ; CF := (0x0_1 o OP2[15:8] + 0x0_1 o OP1[7:0])[8:8] == 0x1_1 ; PF := !((0x0_1 o OP2[15:8] + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor (0x0_1 o OP2[15:8] + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor (0x0_1 o OP2[15:8] + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor (0x0_1 o OP2[15:8] + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor (0x0_1 o OP2[15:8] + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor (0x0_1 o OP2[15:8] + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor (0x0_1 o OP2[15:8] + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor (0x0_1 o OP2[15:8] + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o OP2[15:8] + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := (0x0_1 o OP2[15:8] + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (OP2[15:15] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(OP2[15:15] == 0x1_1 bool_iff (0x0_1 o OP2[15:8] + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(add r8, r8) -> (OP1 = OP1[63:8] o (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[7:0] ; CF := (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[8:8] == 0x1_1 ; PF := !((0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(OP2[7:7] == 0x1_1 bool_iff (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(add r8, m8) -> (OP1 = OP1[63:8] o (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[7:0] ; CF := (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[8:8] == 0x1_1 ; PF := !((0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(OP2[7:7] == 0x1_1 bool_iff (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(add m8, imm8) -> (OP1 = (OP1[63:8] o (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[7:0])[7:0] ; CF := (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[8:8] == 0x1_1 ; PF := !((0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(OP2[7:7] == 0x1_1 bool_iff (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(add m8, rh) -> (OP1 = (OP1[63:8] o (0x0_1 o OP2[15:8] + 0x0_1 o OP1[7:0])[7:0])[7:0] ; CF := (0x0_1 o OP2[15:8] + 0x0_1 o OP1[7:0])[8:8] == 0x1_1 ; PF := !((0x0_1 o OP2[15:8] + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor (0x0_1 o OP2[15:8] + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor (0x0_1 o OP2[15:8] + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor (0x0_1 o OP2[15:8] + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor (0x0_1 o OP2[15:8] + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor (0x0_1 o OP2[15:8] + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor (0x0_1 o OP2[15:8] + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor (0x0_1 o OP2[15:8] + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o OP2[15:8] + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := (0x0_1 o OP2[15:8] + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (OP2[15:15] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(OP2[15:15] == 0x1_1 bool_iff (0x0_1 o OP2[15:8] + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(add m8, r8) -> (OP1 = (OP1[63:8] o (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[7:0])[7:0] ; CF := (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[8:8] == 0x1_1 ; PF := !((0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(OP2[7:7] == 0x1_1 bool_iff (0x0_1 o OP2[7:0] + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(add eax, imm32) -> (OP1 = 0x0_32 o (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[31:0] ; CF := (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[32:32] == 0x1_1 ; PF := !((0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(OP2[31:31] == 0x1_1 bool_iff (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(add r32, imm8) -> (OP1 = 0x0_32 o (0x0_1 o (sign-extend-32(OP2))[31:0] + 0x0_1 o OP1[31:0])[31:0] ; CF := (0x0_1 o (sign-extend-32(OP2))[31:0] + 0x0_1 o OP1[31:0])[32:32] == 0x1_1 ; PF := !((0x0_1 o (sign-extend-32(OP2))[31:0] + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o (sign-extend-32(OP2))[31:0] + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o (sign-extend-32(OP2))[31:0] + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o (sign-extend-32(OP2))[31:0] + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o (sign-extend-32(OP2))[31:0] + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o (sign-extend-32(OP2))[31:0] + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o (sign-extend-32(OP2))[31:0] + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o (sign-extend-32(OP2))[31:0] + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o (sign-extend-32(OP2))[31:0] + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o (sign-extend-32(OP2))[31:0] + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := ((sign-extend-32(OP2))[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !((sign-extend-32(OP2))[31:31] == 0x1_1 bool_iff (0x0_1 o (sign-extend-32(OP2))[31:0] + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(add r32, imm32) -> (OP1 = 0x0_32 o (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[31:0] ; CF := (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[32:32] == 0x1_1 ; PF := !((0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(OP2[31:31] == 0x1_1 bool_iff (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(add r32, r32) -> (OP1 = 0x0_32 o (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[31:0] ; CF := (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[32:32] == 0x1_1 ; PF := !((0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(OP2[31:31] == 0x1_1 bool_iff (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(add r32, m32) -> (OP1 = 0x0_32 o (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[31:0] ; CF := (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[32:32] == 0x1_1 ; PF := !((0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(OP2[31:31] == 0x1_1 bool_iff (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(add m32, imm8) -> (OP1 = 0x0_32 o (0x0_1 o (sign-extend-32(OP2))[31:0] + 0x0_1 o OP1[31:0])[31:0] ; CF := (0x0_1 o (sign-extend-32(OP2))[31:0] + 0x0_1 o OP1[31:0])[32:32] == 0x1_1 ; PF := !((0x0_1 o (sign-extend-32(OP2))[31:0] + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o (sign-extend-32(OP2))[31:0] + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o (sign-extend-32(OP2))[31:0] + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o (sign-extend-32(OP2))[31:0] + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o (sign-extend-32(OP2))[31:0] + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o (sign-extend-32(OP2))[31:0] + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o (sign-extend-32(OP2))[31:0] + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o (sign-extend-32(OP2))[31:0] + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o (sign-extend-32(OP2))[31:0] + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o (sign-extend-32(OP2))[31:0] + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := ((sign-extend-32(OP2))[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !((sign-extend-32(OP2))[31:31] == 0x1_1 bool_iff (0x0_1 o (sign-extend-32(OP2))[31:0] + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(add m32, imm32) -> (OP1 = (0x0_32 o (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[31:0])[31:0] ; CF := (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[32:32] == 0x1_1 ; PF := !((0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(OP2[31:31] == 0x1_1 bool_iff (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(add m32, r32) -> (OP1 = (0x0_32 o (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[31:0])[31:0] ; CF := (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[32:32] == 0x1_1 ; PF := !((0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(OP2[31:31] == 0x1_1 bool_iff (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(add rax, imm32) -> (OP1 = (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[63:0] ; CF := (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[64:64] == 0x1_1 ; PF := !((0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := ((sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !((sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[63:63] == 0x1_1))
(add r64, imm8) -> (OP1 = (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[63:0] ; CF := (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[64:64] == 0x1_1 ; PF := !((0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := ((sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !((sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[63:63] == 0x1_1))
(add r64, imm32) -> (OP1 = (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[63:0] ; CF := (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[64:64] == 0x1_1 ; PF := !((0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := ((sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !((sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[63:63] == 0x1_1))
(add r64, r64) -> (OP1 = (0x0_1 o OP2 + 0x0_1 o OP1)[63:0] ; CF := (0x0_1 o OP2 + 0x0_1 o OP1)[64:64] == 0x1_1 ; PF := !((0x0_1 o OP2 + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor (0x0_1 o OP2 + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor (0x0_1 o OP2 + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor (0x0_1 o OP2 + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor (0x0_1 o OP2 + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor (0x0_1 o OP2 + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor (0x0_1 o OP2 + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor (0x0_1 o OP2 + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := (0x0_1 o OP2 + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := (0x0_1 o OP2 + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (OP2[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(OP2[63:63] == 0x1_1 bool_iff (0x0_1 o OP2 + 0x0_1 o OP1)[63:63] == 0x1_1))
(add r64, m64) -> (OP1 = (0x0_1 o OP2 + 0x0_1 o OP1)[63:0] ; CF := (0x0_1 o OP2 + 0x0_1 o OP1)[64:64] == 0x1_1 ; PF := !((0x0_1 o OP2 + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor (0x0_1 o OP2 + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor (0x0_1 o OP2 + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor (0x0_1 o OP2 + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor (0x0_1 o OP2 + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor (0x0_1 o OP2 + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor (0x0_1 o OP2 + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor (0x0_1 o OP2 + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := (0x0_1 o OP2 + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := (0x0_1 o OP2 + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (OP2[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(OP2[63:63] == 0x1_1 bool_iff (0x0_1 o OP2 + 0x0_1 o OP1)[63:63] == 0x1_1))
(add m64, imm8) -> (OP1 = (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[63:0] ; CF := (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[64:64] == 0x1_1 ; PF := !((0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := ((sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !((sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[63:63] == 0x1_1))
(add m64, imm32) -> (OP1 = (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[63:0] ; CF := (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[64:64] == 0x1_1 ; PF := !((0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := ((sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !((sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff (0x0_1 o (sign-extend-64(OP2)) + 0x0_1 o OP1)[63:63] == 0x1_1))
(add m64, r64) -> (OP1 = ((0x0_1 o OP2 + 0x0_1 o OP1)[63:0])[63:0] ; CF := (0x0_1 o OP2 + 0x0_1 o OP1)[64:64] == 0x1_1 ; PF := !((0x0_1 o OP2 + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor (0x0_1 o OP2 + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor (0x0_1 o OP2 + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor (0x0_1 o OP2 + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor (0x0_1 o OP2 + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor (0x0_1 o OP2 + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor (0x0_1 o OP2 + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor (0x0_1 o OP2 + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := (0x0_1 o OP2 + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := (0x0_1 o OP2 + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (OP2[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(OP2[63:63] == 0x1_1 bool_iff (0x0_1 o OP2 + 0x0_1 o OP1)[63:63] == 0x1_1))
(add ax, imm16) -> (OP1 = OP1[63:16] o (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[15:0] ; CF := (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[16:16] == 0x1_1 ; PF := !((0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(OP2[15:15] == 0x1_1 bool_iff (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(add r16, imm8) -> (OP1 = OP1[63:16] o (0x0_1 o (sign-extend-16(OP2))[15:0] + 0x0_1 o OP1[15:0])[15:0] ; CF := (0x0_1 o (sign-extend-16(OP2))[15:0] + 0x0_1 o OP1[15:0])[16:16] == 0x1_1 ; PF := !((0x0_1 o (sign-extend-16(OP2))[15:0] + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor (0x0_1 o (sign-extend-16(OP2))[15:0] + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor (0x0_1 o (sign-extend-16(OP2))[15:0] + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor (0x0_1 o (sign-extend-16(OP2))[15:0] + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor (0x0_1 o (sign-extend-16(OP2))[15:0] + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor (0x0_1 o (sign-extend-16(OP2))[15:0] + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor (0x0_1 o (sign-extend-16(OP2))[15:0] + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor (0x0_1 o (sign-extend-16(OP2))[15:0] + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o (sign-extend-16(OP2))[15:0] + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := (0x0_1 o (sign-extend-16(OP2))[15:0] + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := ((sign-extend-16(OP2))[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !((sign-extend-16(OP2))[15:15] == 0x1_1 bool_iff (0x0_1 o (sign-extend-16(OP2))[15:0] + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(add r16, imm16) -> (OP1 = OP1[63:16] o (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[15:0] ; CF := (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[16:16] == 0x1_1 ; PF := !((0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(OP2[15:15] == 0x1_1 bool_iff (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(add r16, r16) -> (OP1 = OP1[63:16] o (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[15:0] ; CF := (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[16:16] == 0x1_1 ; PF := !((0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(OP2[15:15] == 0x1_1 bool_iff (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(add r16, m16) -> (OP1 = OP1[63:16] o (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[15:0] ; CF := (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[16:16] == 0x1_1 ; PF := !((0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(OP2[15:15] == 0x1_1 bool_iff (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(add m16, imm8) -> (OP1 = OP1[63:16] o (0x0_1 o (sign-extend-16(OP2))[15:0] + 0x0_1 o OP1[15:0])[15:0] ; CF := (0x0_1 o (sign-extend-16(OP2))[15:0] + 0x0_1 o OP1[15:0])[16:16] == 0x1_1 ; PF := !((0x0_1 o (sign-extend-16(OP2))[15:0] + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor (0x0_1 o (sign-extend-16(OP2))[15:0] + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor (0x0_1 o (sign-extend-16(OP2))[15:0] + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor (0x0_1 o (sign-extend-16(OP2))[15:0] + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor (0x0_1 o (sign-extend-16(OP2))[15:0] + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor (0x0_1 o (sign-extend-16(OP2))[15:0] + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor (0x0_1 o (sign-extend-16(OP2))[15:0] + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor (0x0_1 o (sign-extend-16(OP2))[15:0] + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o (sign-extend-16(OP2))[15:0] + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := (0x0_1 o (sign-extend-16(OP2))[15:0] + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := ((sign-extend-16(OP2))[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !((sign-extend-16(OP2))[15:15] == 0x1_1 bool_iff (0x0_1 o (sign-extend-16(OP2))[15:0] + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(add m16, imm16) -> (OP1 = (OP1[63:16] o (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[15:0])[15:0] ; CF := (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[16:16] == 0x1_1 ; PF := !((0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(OP2[15:15] == 0x1_1 bool_iff (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(add m16, r16) -> (OP1 = (OP1[63:16] o (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[15:0])[15:0] ; CF := (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[16:16] == 0x1_1 ; PF := !((0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(OP2[15:15] == 0x1_1 bool_iff (0x0_1 o OP2[15:0] + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(addpd xmm, m128) -> (OP1 = OP1[255:128] o (add_double(OP1[127:64], OP2[127:64]) o add_double(OP1[63:0], OP2[63:0])))
(addpd xmm, xmm) -> (OP1 = OP1[255:128] o (add_double(OP1[127:64], OP2[127:64]) o add_double(OP1[63:0], OP2[63:0])))
(addps xmm, m128) -> (OP1 = OP1[255:128] o (add_single(OP1[127:96], OP2[127:96]) o (add_single(OP1[95:64], OP2[95:64]) o (add_single(OP1[63:32], OP2[63:32]) o add_single(OP1[31:0], OP2[31:0])))))
(addps xmm, xmm) -> (OP1 = OP1[255:128] o (add_single(OP1[127:96], OP2[127:96]) o (add_single(OP1[95:64], OP2[95:64]) o (add_single(OP1[63:32], OP2[63:32]) o add_single(OP1[31:0], OP2[31:0])))))
(addsd xmm, m64) -> (OP1 = OP1[255:128] o (OP1[127:64] o add_double(OP1[63:0], OP2[63:0])))
(addsd xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:64] o add_double(OP1[63:0], OP2[63:0])))
(addss xmm, m32) -> (OP1 = OP1[255:128] o (OP1[127:32] o add_single(OP1[31:0], OP2[31:0])))
(addss xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:32] o add_single(OP1[31:0], OP2[31:0])))
(addsubpd xmm, m128) -> (OP1 = OP1[255:128] o (sub_double(OP1[63:0], OP2[63:0]) o add_double(OP1[127:64], OP2[127:64])))
(addsubpd xmm, xmm) -> (OP1 = OP1[255:128] o (sub_double(OP1[63:0], OP2[63:0]) o add_double(OP1[127:64], OP2[127:64])))
(addsubps xmm, m128) -> (OP1 = OP1[255:128] o (sub_single(OP1[95:64], OP2[95:64]) o add_single(OP1[127:96], OP2[127:96]) o (sub_single(OP1[31:0], OP2[31:0]) o add_single(OP1[63:32], OP2[63:32]))))
(addsubps xmm, xmm) -> (OP1 = OP1[255:128] o (sub_single(OP1[95:64], OP2[95:64]) o add_single(OP1[127:96], OP2[127:96]) o (sub_single(OP1[31:0], OP2[31:0]) o add_single(OP1[63:32], OP2[63:32]))))
(and rh, imm8) -> (OP1 = OP1[63:16] o (OP1[15:8] & OP2[7:0]) o OP1[7:0] ; CF := false ; PF := !((OP1[8:8] & OP2[0:0]) == 0x1_1 bool_xor (OP1[9:9] & OP2[1:1]) == 0x1_1 bool_xor (OP1[10:10] & OP2[2:2]) == 0x1_1 bool_xor (OP1[11:11] & OP2[3:3]) == 0x1_1 bool_xor (OP1[12:12] & OP2[4:4]) == 0x1_1 bool_xor (OP1[13:13] & OP2[5:5]) == 0x1_1 bool_xor (OP1[14:14] & OP2[6:6]) == 0x1_1 bool_xor (OP1[15:15] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:8] & OP2[7:0]) == 0x0_8 ; SF := (OP1[15:15] & OP2[7:7]) == 0x1_1 ; OF := false)
(and rh, rh) -> (OP1 = OP1[63:16] o (OP1[15:8] & OP2[15:8]) o OP1[7:0] ; CF := false ; PF := !((OP1[8:8] & OP2[8:8]) == 0x1_1 bool_xor (OP1[9:9] & OP2[9:9]) == 0x1_1 bool_xor (OP1[10:10] & OP2[10:10]) == 0x1_1 bool_xor (OP1[11:11] & OP2[11:11]) == 0x1_1 bool_xor (OP1[12:12] & OP2[12:12]) == 0x1_1 bool_xor (OP1[13:13] & OP2[13:13]) == 0x1_1 bool_xor (OP1[14:14] & OP2[14:14]) == 0x1_1 bool_xor (OP1[15:15] & OP2[15:15]) == 0x1_1) ; ZF := (OP1[15:8] & OP2[15:8]) == 0x0_8 ; SF := (OP1[15:15] & OP2[15:15]) == 0x1_1 ; OF := false)
(and rh, r8) -> (OP1 = OP1[63:16] o (OP1[15:8] & OP2[7:0]) o OP1[7:0] ; CF := false ; PF := !((OP1[8:8] & OP2[0:0]) == 0x1_1 bool_xor (OP1[9:9] & OP2[1:1]) == 0x1_1 bool_xor (OP1[10:10] & OP2[2:2]) == 0x1_1 bool_xor (OP1[11:11] & OP2[3:3]) == 0x1_1 bool_xor (OP1[12:12] & OP2[4:4]) == 0x1_1 bool_xor (OP1[13:13] & OP2[5:5]) == 0x1_1 bool_xor (OP1[14:14] & OP2[6:6]) == 0x1_1 bool_xor (OP1[15:15] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:8] & OP2[7:0]) == 0x0_8 ; SF := (OP1[15:15] & OP2[7:7]) == 0x1_1 ; OF := false)
(and rh, m8) -> (OP1 = OP1[63:16] o (OP1[15:8] & OP2[7:0]) o OP1[7:0] ; CF := false ; PF := !((OP1[8:8] & OP2[0:0]) == 0x1_1 bool_xor (OP1[9:9] & OP2[1:1]) == 0x1_1 bool_xor (OP1[10:10] & OP2[2:2]) == 0x1_1 bool_xor (OP1[11:11] & OP2[3:3]) == 0x1_1 bool_xor (OP1[12:12] & OP2[4:4]) == 0x1_1 bool_xor (OP1[13:13] & OP2[5:5]) == 0x1_1 bool_xor (OP1[14:14] & OP2[6:6]) == 0x1_1 bool_xor (OP1[15:15] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:8] & OP2[7:0]) == 0x0_8 ; SF := (OP1[15:15] & OP2[7:7]) == 0x1_1 ; OF := false)
(and al, imm8) -> (OP1 = OP1[63:8] o (OP1[7:0] & OP2[7:0]) ; CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[7:0] & OP2[7:0]) == 0x0_8 ; SF := (OP1[7:7] & OP2[7:7]) == 0x1_1 ; OF := false)
(and r8, imm8) -> (OP1 = OP1[63:8] o (OP1[7:0] & OP2[7:0]) ; CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[7:0] & OP2[7:0]) == 0x0_8 ; SF := (OP1[7:7] & OP2[7:7]) == 0x1_1 ; OF := false)
(and r8, rh) -> (OP1 = OP1[63:8] o (OP1[7:0] & OP2[15:8]) ; CF := false ; PF := !((OP1[0:0] & OP2[8:8]) == 0x1_1 bool_xor (OP1[1:1] & OP2[9:9]) == 0x1_1 bool_xor (OP1[2:2] & OP2[10:10]) == 0x1_1 bool_xor (OP1[3:3] & OP2[11:11]) == 0x1_1 bool_xor (OP1[4:4] & OP2[12:12]) == 0x1_1 bool_xor (OP1[5:5] & OP2[13:13]) == 0x1_1 bool_xor (OP1[6:6] & OP2[14:14]) == 0x1_1 bool_xor (OP1[7:7] & OP2[15:15]) == 0x1_1) ; ZF := (OP1[7:0] & OP2[15:8]) == 0x0_8 ; SF := (OP1[7:7] & OP2[15:15]) == 0x1_1 ; OF := false)
(and r8, r8) -> (OP1 = OP1[63:8] o (OP1[7:0] & OP2[7:0]) ; CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[7:0] & OP2[7:0]) == 0x0_8 ; SF := (OP1[7:7] & OP2[7:7]) == 0x1_1 ; OF := false)
(and r8, m8) -> (OP1 = OP1[63:8] o (OP1[7:0] & OP2[7:0]) ; CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[7:0] & OP2[7:0]) == 0x0_8 ; SF := (OP1[7:7] & OP2[7:7]) == 0x1_1 ; OF := false)
(and m8, imm8) -> (OP1 = (OP1[63:8] o (OP1[7:0] & OP2[7:0]))[7:0] ; CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[7:0] & OP2[7:0]) == 0x0_8 ; SF := (OP1[7:7] & OP2[7:7]) == 0x1_1 ; OF := false)
(and m8, rh) -> (OP1 = (OP1[63:8] o (OP1[7:0] & OP2[15:8]))[7:0] ; CF := false ; PF := !((OP1[0:0] & OP2[8:8]) == 0x1_1 bool_xor (OP1[1:1] & OP2[9:9]) == 0x1_1 bool_xor (OP1[2:2] & OP2[10:10]) == 0x1_1 bool_xor (OP1[3:3] & OP2[11:11]) == 0x1_1 bool_xor (OP1[4:4] & OP2[12:12]) == 0x1_1 bool_xor (OP1[5:5] & OP2[13:13]) == 0x1_1 bool_xor (OP1[6:6] & OP2[14:14]) == 0x1_1 bool_xor (OP1[7:7] & OP2[15:15]) == 0x1_1) ; ZF := (OP1[7:0] & OP2[15:8]) == 0x0_8 ; SF := (OP1[7:7] & OP2[15:15]) == 0x1_1 ; OF := false)
(and m8, r8) -> (OP1 = (OP1[63:8] o (OP1[7:0] & OP2[7:0]))[7:0] ; CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[7:0] & OP2[7:0]) == 0x0_8 ; SF := (OP1[7:7] & OP2[7:7]) == 0x1_1 ; OF := false)
(and eax, imm32) -> (OP1 = 0x0_32 o (OP1[31:0] & OP2[31:0]) ; CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[31:0] & OP2[31:0]) == 0x0_32 ; SF := (OP1[31:31] & OP2[31:31]) == 0x1_1 ; OF := false)
(and r32, imm8) -> (OP1 = 0x0_32 o (OP1[31:0] & (sign-extend-32(OP2))[31:0]) ; CF := false ; PF := !((OP1[0:0] & (sign-extend-32(OP2))[0:0]) == 0x1_1 bool_xor (OP1[1:1] & (sign-extend-32(OP2))[1:1]) == 0x1_1 bool_xor (OP1[2:2] & (sign-extend-32(OP2))[2:2]) == 0x1_1 bool_xor (OP1[3:3] & (sign-extend-32(OP2))[3:3]) == 0x1_1 bool_xor (OP1[4:4] & (sign-extend-32(OP2))[4:4]) == 0x1_1 bool_xor (OP1[5:5] & (sign-extend-32(OP2))[5:5]) == 0x1_1 bool_xor (OP1[6:6] & (sign-extend-32(OP2))[6:6]) == 0x1_1 bool_xor (OP1[7:7] & (sign-extend-32(OP2))[7:7]) == 0x1_1) ; ZF := (OP1[31:0] & (sign-extend-32(OP2))[31:0]) == 0x0_32 ; SF := (OP1[31:31] & (sign-extend-32(OP2))[31:31]) == 0x1_1 ; OF := false)
(and r32, imm32) -> (OP1 = 0x0_32 o (OP1[31:0] & OP2[31:0]) ; CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[31:0] & OP2[31:0]) == 0x0_32 ; SF := (OP1[31:31] & OP2[31:31]) == 0x1_1 ; OF := false)
(and r32, r32) -> (OP1 = 0x0_32 o (OP1[31:0] & OP2[31:0]) ; CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[31:0] & OP2[31:0]) == 0x0_32 ; SF := (OP1[31:31] & OP2[31:31]) == 0x1_1 ; OF := false)
(and r32, m32) -> (OP1 = 0x0_32 o (OP1[31:0] & OP2[31:0]) ; CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[31:0] & OP2[31:0]) == 0x0_32 ; SF := (OP1[31:31] & OP2[31:31]) == 0x1_1 ; OF := false)
(and m32, imm8) -> (OP1 = 0x0_32 o (OP1[31:0] & (sign-extend-32(OP2))[31:0]) ; CF := false ; PF := !((OP1[0:0] & (sign-extend-32(OP2))[0:0]) == 0x1_1 bool_xor (OP1[1:1] & (sign-extend-32(OP2))[1:1]) == 0x1_1 bool_xor (OP1[2:2] & (sign-extend-32(OP2))[2:2]) == 0x1_1 bool_xor (OP1[3:3] & (sign-extend-32(OP2))[3:3]) == 0x1_1 bool_xor (OP1[4:4] & (sign-extend-32(OP2))[4:4]) == 0x1_1 bool_xor (OP1[5:5] & (sign-extend-32(OP2))[5:5]) == 0x1_1 bool_xor (OP1[6:6] & (sign-extend-32(OP2))[6:6]) == 0x1_1 bool_xor (OP1[7:7] & (sign-extend-32(OP2))[7:7]) == 0x1_1) ; ZF := (OP1[31:0] & (sign-extend-32(OP2))[31:0]) == 0x0_32 ; SF := (OP1[31:31] & (sign-extend-32(OP2))[31:31]) == 0x1_1 ; OF := false)
(and m32, imm32) -> (OP1 = (0x0_32 o (OP1[31:0] & OP2[31:0]))[31:0] ; CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[31:0] & OP2[31:0]) == 0x0_32 ; SF := (OP1[31:31] & OP2[31:31]) == 0x1_1 ; OF := false)
(and m32, r32) -> (OP1 = (0x0_32 o (OP1[31:0] & OP2[31:0]))[31:0] ; CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[31:0] & OP2[31:0]) == 0x0_32 ; SF := (OP1[31:31] & OP2[31:31]) == 0x1_1 ; OF := false)
(and rax, imm32) -> (OP1 = OP1 & (sign-extend-64(OP2)) ; CF := false ; PF := !((OP1[0:0] & (sign-extend-64(OP2))[0:0]) == 0x1_1 bool_xor (OP1[1:1] & (sign-extend-64(OP2))[1:1]) == 0x1_1 bool_xor (OP1[2:2] & (sign-extend-64(OP2))[2:2]) == 0x1_1 bool_xor (OP1[3:3] & (sign-extend-64(OP2))[3:3]) == 0x1_1 bool_xor (OP1[4:4] & (sign-extend-64(OP2))[4:4]) == 0x1_1 bool_xor (OP1[5:5] & (sign-extend-64(OP2))[5:5]) == 0x1_1 bool_xor (OP1[6:6] & (sign-extend-64(OP2))[6:6]) == 0x1_1 bool_xor (OP1[7:7] & (sign-extend-64(OP2))[7:7]) == 0x1_1) ; ZF := (OP1 & (sign-extend-64(OP2))) == 0x0_64 ; SF := (OP1[63:63] & (sign-extend-64(OP2))[63:63]) == 0x1_1 ; OF := false)
(and r64, imm8) -> (OP1 = OP1 & (sign-extend-64(OP2)) ; CF := false ; PF := !((OP1[0:0] & (sign-extend-64(OP2))[0:0]) == 0x1_1 bool_xor (OP1[1:1] & (sign-extend-64(OP2))[1:1]) == 0x1_1 bool_xor (OP1[2:2] & (sign-extend-64(OP2))[2:2]) == 0x1_1 bool_xor (OP1[3:3] & (sign-extend-64(OP2))[3:3]) == 0x1_1 bool_xor (OP1[4:4] & (sign-extend-64(OP2))[4:4]) == 0x1_1 bool_xor (OP1[5:5] & (sign-extend-64(OP2))[5:5]) == 0x1_1 bool_xor (OP1[6:6] & (sign-extend-64(OP2))[6:6]) == 0x1_1 bool_xor (OP1[7:7] & (sign-extend-64(OP2))[7:7]) == 0x1_1) ; ZF := (OP1 & (sign-extend-64(OP2))) == 0x0_64 ; SF := (OP1[63:63] & (sign-extend-64(OP2))[63:63]) == 0x1_1 ; OF := false)
(and r64, imm32) -> (OP1 = OP1 & (sign-extend-64(OP2)) ; CF := false ; PF := !((OP1[0:0] & (sign-extend-64(OP2))[0:0]) == 0x1_1 bool_xor (OP1[1:1] & (sign-extend-64(OP2))[1:1]) == 0x1_1 bool_xor (OP1[2:2] & (sign-extend-64(OP2))[2:2]) == 0x1_1 bool_xor (OP1[3:3] & (sign-extend-64(OP2))[3:3]) == 0x1_1 bool_xor (OP1[4:4] & (sign-extend-64(OP2))[4:4]) == 0x1_1 bool_xor (OP1[5:5] & (sign-extend-64(OP2))[5:5]) == 0x1_1 bool_xor (OP1[6:6] & (sign-extend-64(OP2))[6:6]) == 0x1_1 bool_xor (OP1[7:7] & (sign-extend-64(OP2))[7:7]) == 0x1_1) ; ZF := (OP1 & (sign-extend-64(OP2))) == 0x0_64 ; SF := (OP1[63:63] & (sign-extend-64(OP2))[63:63]) == 0x1_1 ; OF := false)
(and r64, r64) -> (OP1 = OP1 & OP2 ; CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1 & OP2) == 0x0_64 ; SF := (OP1[63:63] & OP2[63:63]) == 0x1_1 ; OF := false)
(and r64, m64) -> (OP1 = OP1 & OP2 ; CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1 & OP2) == 0x0_64 ; SF := (OP1[63:63] & OP2[63:63]) == 0x1_1 ; OF := false)
(and m64, imm8) -> (OP1 = OP1 & (sign-extend-64(OP2)) ; CF := false ; PF := !((OP1[0:0] & (sign-extend-64(OP2))[0:0]) == 0x1_1 bool_xor (OP1[1:1] & (sign-extend-64(OP2))[1:1]) == 0x1_1 bool_xor (OP1[2:2] & (sign-extend-64(OP2))[2:2]) == 0x1_1 bool_xor (OP1[3:3] & (sign-extend-64(OP2))[3:3]) == 0x1_1 bool_xor (OP1[4:4] & (sign-extend-64(OP2))[4:4]) == 0x1_1 bool_xor (OP1[5:5] & (sign-extend-64(OP2))[5:5]) == 0x1_1 bool_xor (OP1[6:6] & (sign-extend-64(OP2))[6:6]) == 0x1_1 bool_xor (OP1[7:7] & (sign-extend-64(OP2))[7:7]) == 0x1_1) ; ZF := (OP1 & (sign-extend-64(OP2))) == 0x0_64 ; SF := (OP1[63:63] & (sign-extend-64(OP2))[63:63]) == 0x1_1 ; OF := false)
(and m64, imm32) -> (OP1 = OP1 & (sign-extend-64(OP2)) ; CF := false ; PF := !((OP1[0:0] & (sign-extend-64(OP2))[0:0]) == 0x1_1 bool_xor (OP1[1:1] & (sign-extend-64(OP2))[1:1]) == 0x1_1 bool_xor (OP1[2:2] & (sign-extend-64(OP2))[2:2]) == 0x1_1 bool_xor (OP1[3:3] & (sign-extend-64(OP2))[3:3]) == 0x1_1 bool_xor (OP1[4:4] & (sign-extend-64(OP2))[4:4]) == 0x1_1 bool_xor (OP1[5:5] & (sign-extend-64(OP2))[5:5]) == 0x1_1 bool_xor (OP1[6:6] & (sign-extend-64(OP2))[6:6]) == 0x1_1 bool_xor (OP1[7:7] & (sign-extend-64(OP2))[7:7]) == 0x1_1) ; ZF := (OP1 & (sign-extend-64(OP2))) == 0x0_64 ; SF := (OP1[63:63] & (sign-extend-64(OP2))[63:63]) == 0x1_1 ; OF := false)
(and m64, r64) -> (OP1 = (OP1 & OP2)[63:0] ; CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1 & OP2) == 0x0_64 ; SF := (OP1[63:63] & OP2[63:63]) == 0x1_1 ; OF := false)
(and ax, imm16) -> (OP1 = OP1[63:16] o (OP1[15:0] & OP2[15:0]) ; CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:0] & OP2[15:0]) == 0x0_16 ; SF := (OP1[15:15] & OP2[15:15]) == 0x1_1 ; OF := false)
(and r16, imm8) -> (OP1 = OP1[63:16] o (OP1[15:0] & (sign-extend-16(OP2))[15:0]) ; CF := false ; PF := !((OP1[0:0] & (sign-extend-16(OP2))[0:0]) == 0x1_1 bool_xor (OP1[1:1] & (sign-extend-16(OP2))[1:1]) == 0x1_1 bool_xor (OP1[2:2] & (sign-extend-16(OP2))[2:2]) == 0x1_1 bool_xor (OP1[3:3] & (sign-extend-16(OP2))[3:3]) == 0x1_1 bool_xor (OP1[4:4] & (sign-extend-16(OP2))[4:4]) == 0x1_1 bool_xor (OP1[5:5] & (sign-extend-16(OP2))[5:5]) == 0x1_1 bool_xor (OP1[6:6] & (sign-extend-16(OP2))[6:6]) == 0x1_1 bool_xor (OP1[7:7] & (sign-extend-16(OP2))[7:7]) == 0x1_1) ; ZF := (OP1[15:0] & (sign-extend-16(OP2))[15:0]) == 0x0_16 ; SF := (OP1[15:15] & (sign-extend-16(OP2))[15:15]) == 0x1_1 ; OF := false)
(and r16, imm16) -> (OP1 = OP1[63:16] o (OP1[15:0] & OP2[15:0]) ; CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:0] & OP2[15:0]) == 0x0_16 ; SF := (OP1[15:15] & OP2[15:15]) == 0x1_1 ; OF := false)
(and r16, r16) -> (OP1 = OP1[63:16] o (OP1[15:0] & OP2[15:0]) ; CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:0] & OP2[15:0]) == 0x0_16 ; SF := (OP1[15:15] & OP2[15:15]) == 0x1_1 ; OF := false)
(and r16, m16) -> (OP1 = OP1[63:16] o (OP1[15:0] & OP2[15:0]) ; CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:0] & OP2[15:0]) == 0x0_16 ; SF := (OP1[15:15] & OP2[15:15]) == 0x1_1 ; OF := false)
(and m16, imm8) -> (OP1 = OP1[63:16] o (OP1[15:0] & (sign-extend-16(OP2))[15:0]) ; CF := false ; PF := !((OP1[0:0] & (sign-extend-16(OP2))[0:0]) == 0x1_1 bool_xor (OP1[1:1] & (sign-extend-16(OP2))[1:1]) == 0x1_1 bool_xor (OP1[2:2] & (sign-extend-16(OP2))[2:2]) == 0x1_1 bool_xor (OP1[3:3] & (sign-extend-16(OP2))[3:3]) == 0x1_1 bool_xor (OP1[4:4] & (sign-extend-16(OP2))[4:4]) == 0x1_1 bool_xor (OP1[5:5] & (sign-extend-16(OP2))[5:5]) == 0x1_1 bool_xor (OP1[6:6] & (sign-extend-16(OP2))[6:6]) == 0x1_1 bool_xor (OP1[7:7] & (sign-extend-16(OP2))[7:7]) == 0x1_1) ; ZF := (OP1[15:0] & (sign-extend-16(OP2))[15:0]) == 0x0_16 ; SF := (OP1[15:15] & (sign-extend-16(OP2))[15:15]) == 0x1_1 ; OF := false)
(and m16, imm16) -> (OP1 = (OP1[63:16] o (OP1[15:0] & OP2[15:0]))[15:0] ; CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:0] & OP2[15:0]) == 0x0_16 ; SF := (OP1[15:15] & OP2[15:15]) == 0x1_1 ; OF := false)
(and m16, r16) -> (OP1 = (OP1[63:16] o (OP1[15:0] & OP2[15:0]))[15:0] ; CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:0] & OP2[15:0]) == 0x0_16 ; SF := (OP1[15:15] & OP2[15:15]) == 0x1_1 ; OF := false)
(andn r32, r32, r32) -> (OP1 = 0x0_32 o (!OP2[31:0] & OP3[31:0]) ; CF := false ; ZF := (!OP2[31:0] & OP3[31:0]) == 0x0_32 ; SF := (!OP2[31:31] & OP3[31:31]) == 0x1_1 ; OF := false)
(andn r32, r32, m32) -> (OP1 = 0x0_32 o (!OP2[31:0] & OP3[31:0]) ; CF := false ; ZF := (!OP2[31:0] & OP3[31:0]) == 0x0_32 ; SF := (!OP2[31:31] & OP3[31:31]) == 0x1_1 ; OF := false)
(andn r64, r64, r64) -> (OP1 = !OP2 & OP3 ; CF := false ; ZF := (!OP2 & OP3) == 0x0_64 ; SF := (!OP2[63:63] & OP3[63:63]) == 0x1_1 ; OF := false)
(andn r64, r64, m64) -> (OP1 = !OP2 & OP3 ; CF := false ; ZF := (!OP2 & OP3) == 0x0_64 ; SF := (!OP2[63:63] & OP3[63:63]) == 0x1_1 ; OF := false)
(andnpd xmm, m128) -> (OP1 = OP1[255:128] o (!OP1[127:0] & OP2[127:0]))
(andnpd xmm, xmm) -> (OP1 = OP1[255:128] o (!OP1[127:0] & OP2[127:0]))
(andnps xmm, m128) -> (OP1 = OP1[255:128] o (!OP1[127:0] & OP2[127:0]))
(andnps xmm, xmm) -> (OP1 = OP1[255:128] o (!OP1[127:0] & OP2[127:0]))
(andpd xmm, m128) -> (OP1 = OP1[255:128] o (OP1[127:0] & OP2[127:0]))
(andpd xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:0] & OP2[127:0]))
(andps xmm, m128) -> (OP1 = OP1[255:128] o (OP1[127:0] & OP2[127:0]))
(andps xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:0] & OP2[127:0]))
(blsi r32, r32) -> (OP1 = 0x0_32 o OP2[31:0] ^ 0x0_32 o ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0]) ; CF := (0x0_1 o (sign-extend-64((((((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9) + (((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9))[7:0] == 0x0_8 ? OP2[7:0] ^ ((OP2[7:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0] ^ OP2[7:0]) : 0xf9_8) o (((((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9) + (((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9))[7:0] == 0x0_8 ? OP2[7:0] ^ ((OP2[7:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0] ^ OP2[7:0]) : 0xf9_8)) o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[8:1] + 0x0_1 o (sign-extend-64((((((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9) + (((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9))[7:0] == 0x0_8 ? OP2[7:0] ^ ((OP2[7:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0] ^ OP2[7:0]) : 0xf9_8) o (((((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9) + (((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9))[7:0] == 0x0_8 ? OP2[7:0] ^ ((OP2[7:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0] ^ OP2[7:0]) : 0xf9_8)) o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[8:1])[8:8] == 0x1_1 ; ZF := (OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ; SF := (OP2[31:31] ^ ((OP2[31:31] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:31]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:31] ^ OP2[31:31])) == 0x1_1 ; OF := ((sign-extend-64((((((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9) + (((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9))[7:0] == 0x0_8 ? OP2[7:0] ^ ((OP2[7:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0] ^ OP2[7:0]) : 0xf9_8) o (((((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9) + (((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9))[7:0] == 0x0_8 ? OP2[7:0] ^ ((OP2[7:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0] ^ OP2[7:0]) : 0xf9_8)) o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[8:8] == 0x1_1 bool_iff (sign-extend-64((((((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9) + (((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9))[7:0] == 0x0_8 ? OP2[7:0] ^ ((OP2[7:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0] ^ OP2[7:0]) : 0xf9_8) o (((((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9) + (((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9))[7:0] == 0x0_8 ? OP2[7:0] ^ ((OP2[7:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0] ^ OP2[7:0]) : 0xf9_8)) o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[8:8] == 0x1_1) bool_and !((sign-extend-64((((((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9) + (((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9))[7:0] == 0x0_8 ? OP2[7:0] ^ ((OP2[7:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0] ^ OP2[7:0]) : 0xf9_8) o (((((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9) + (((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9))[7:0] == 0x0_8 ? OP2[7:0] ^ ((OP2[7:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0] ^ OP2[7:0]) : 0xf9_8)) o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[8:8] == 0x1_1 bool_iff (0x0_1 o (sign-extend-64((((((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9) + (((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9))[7:0] == 0x0_8 ? OP2[7:0] ^ ((OP2[7:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0] ^ OP2[7:0]) : 0xf9_8) o (((((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9) + (((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9))[7:0] == 0x0_8 ? OP2[7:0] ^ ((OP2[7:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0] ^ OP2[7:0]) : 0xf9_8)) o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[8:1] + 0x0_1 o (sign-extend-64((((((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9) + (((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9))[7:0] == 0x0_8 ? OP2[7:0] ^ ((OP2[7:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0] ^ OP2[7:0]) : 0xf9_8) o (((((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9) + (((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9))[7:0] == 0x0_8 ? OP2[7:0] ^ ((OP2[7:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0] ^ OP2[7:0]) : 0xf9_8)) o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[8:1])[7:7] == 0x1_1))
(blsi r32, m32) -> (OP1 = 0x0_32 o OP2[31:0] ^ 0x0_32 o ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0]) ; CF := (0x0_1 o (sign-extend-64((((((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9) + (((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9))[7:0] == 0x0_8 ? OP2[7:0] ^ ((OP2[7:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0] ^ OP2[7:0]) : 0xf9_8) o (((((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9) + (((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9))[7:0] == 0x0_8 ? OP2[7:0] ^ ((OP2[7:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0] ^ OP2[7:0]) : 0xf9_8)) o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[8:1] + 0x0_1 o (sign-extend-64((((((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9) + (((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9))[7:0] == 0x0_8 ? OP2[7:0] ^ ((OP2[7:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0] ^ OP2[7:0]) : 0xf9_8) o (((((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9) + (((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9))[7:0] == 0x0_8 ? OP2[7:0] ^ ((OP2[7:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0] ^ OP2[7:0]) : 0xf9_8)) o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[8:1])[8:8] == 0x1_1 ; ZF := (OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ; SF := (OP2[31:31] ^ ((OP2[31:31] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:31]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:31] ^ OP2[31:31])) == 0x1_1 ; OF := ((sign-extend-64((((((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9) + (((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9))[7:0] == 0x0_8 ? OP2[7:0] ^ ((OP2[7:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0] ^ OP2[7:0]) : 0xf9_8) o (((((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9) + (((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9))[7:0] == 0x0_8 ? OP2[7:0] ^ ((OP2[7:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0] ^ OP2[7:0]) : 0xf9_8)) o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[8:8] == 0x1_1 bool_iff (sign-extend-64((((((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9) + (((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9))[7:0] == 0x0_8 ? OP2[7:0] ^ ((OP2[7:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0] ^ OP2[7:0]) : 0xf9_8) o (((((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9) + (((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9))[7:0] == 0x0_8 ? OP2[7:0] ^ ((OP2[7:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0] ^ OP2[7:0]) : 0xf9_8)) o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[8:8] == 0x1_1) bool_and !((sign-extend-64((((((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9) + (((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9))[7:0] == 0x0_8 ? OP2[7:0] ^ ((OP2[7:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0] ^ OP2[7:0]) : 0xf9_8) o (((((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9) + (((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9))[7:0] == 0x0_8 ? OP2[7:0] ^ ((OP2[7:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0] ^ OP2[7:0]) : 0xf9_8)) o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[8:8] == 0x1_1 bool_iff (0x0_1 o (sign-extend-64((((((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9) + (((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9))[7:0] == 0x0_8 ? OP2[7:0] ^ ((OP2[7:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0] ^ OP2[7:0]) : 0xf9_8) o (((((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9) + (((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9))[7:0] == 0x0_8 ? OP2[7:0] ^ ((OP2[7:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0] ^ OP2[7:0]) : 0xf9_8)) o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[8:1] + 0x0_1 o (sign-extend-64((((((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9) + (((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9))[7:0] == 0x0_8 ? OP2[7:0] ^ ((OP2[7:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0] ^ OP2[7:0]) : 0xf9_8) o (((((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9) + (((OP2[31:0] ^ ((OP2[31:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ^ OP2[31:0])) == 0x0_32 ? 0x1_32 : 0x0_32) == 0x0_32 ? 0x1_9 : 0x0_9))[7:0] == 0x0_8 ? OP2[7:0] ^ ((OP2[7:0] | (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0]) ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[7:0] ^ OP2[7:0]) : 0xf9_8)) o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[8:1])[7:7] == 0x1_1))
(blsmsk r32, r32) -> (OP1 = 0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ; CF := (0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ; ZF := (OP2[31:0] ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) == 0x0_32 ; SF := (OP2[31:31] ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:31]) == 0x1_1 ; OF := ((0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:47] == 0x1_1 bool_iff (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:47] == 0x1_1) bool_and !((0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:47] == 0x1_1 bool_iff (0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[7:7] == 0x1_1) ; PF := undefined)
(blsmsk r32, m32) -> (OP1 = 0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0] ; CF := (0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ; ZF := (OP2[31:0] ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) == 0x0_32 ; SF := (OP2[31:31] ^ (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:31]) == 0x1_1 ; OF := ((0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:47] == 0x1_1 bool_iff (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:47] == 0x1_1) bool_and !((0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:47] == 0x1_1 bool_iff (0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[7:7] == 0x1_1) ; PF := undefined)
(blsr r32, r32) -> (OP1 = 0x0_32 o (OP2[31:0] - 0x1_32 & OP2[31:0]) ; CF := OP2[31:0] == 0x0_32 ; ZF := (OP2[31:0] - 0x1_32 & OP2[31:0]) == 0x0_32 ; SF := ((OP2[31:0] - 0x1_32)[31:31] & OP2[31:31]) == 0x1_1 ; OF := false ; PF := undefined)
(blsr r32, m32) -> (OP1 = 0x0_32 o (OP2[31:0] - 0x1_32 & OP2[31:0]) ; CF := OP2[31:0] == 0x0_32 ; ZF := (OP2[31:0] - 0x1_32 & OP2[31:0]) == 0x0_32 ; SF := ((OP2[31:0] - 0x1_32)[31:31] & OP2[31:31]) == 0x1_1 ; OF := false ; PF := undefined)
(bswap r32) -> (OP1 = 0x0_32 o OP1[7:0] o OP1[15:8] o (OP1[23:16] o OP1[31:24]))
(bswap r64) -> (OP1 = OP1[7:0] o OP1[15:8] o (OP1[23:16] o OP1[31:24]) o (OP1[39:32] o OP1[47:40] o (OP1[55:48] o OP1[63:56])))
(bt r32, imm8) -> (CF := true bool_and ((0x0_32 o OP1[31:0] o 0x0_1 >> 0x0_57 o ((((sign-extend-32(OP2))[7:0] | (0x0_1 o (0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[63:63] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[62:62]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[61:61] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[60:60])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[59:59] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[58:58]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[57:57] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[56:56]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[55:55] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[54:54]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[53:53] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[52:52])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[51:51] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[50:50]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[49:49] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[48:48])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[47:47] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[46:46]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[45:45] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[44:44])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[43:43] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[42:42]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[41:41] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[40:40]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[39:39] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[38:38]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[37:37] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[36:36])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[35:35] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[34:34]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[33:33] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[32:32]))))) + 0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[31:31] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[30:30]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[29:29] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[28:28])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[27:27] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[26:26]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[25:25] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[24:24]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[23:23] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[22:22]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[21:21] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[20:20])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[19:19] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[18:18]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[17:17] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[16:16])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[15:15] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[14:14]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[13:13] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[12:12])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[11:11] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[10:10]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[9:9] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[8:8]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[7:7] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[6:6]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[5:5] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[4:4])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[3:3] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[2:2]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[1:1] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[0:0]))))))[31:0] + 0xffffffff_33)[7:0]) ^ (0x0_1 o (0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[63:63] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[62:62]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[61:61] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[60:60])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[59:59] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[58:58]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[57:57] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[56:56]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[55:55] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[54:54]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[53:53] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[52:52])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[51:51] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[50:50]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[49:49] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[48:48])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[47:47] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[46:46]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[45:45] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[44:44])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[43:43] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[42:42]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[41:41] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[40:40]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[39:39] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[38:38]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[37:37] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[36:36])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[35:35] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[34:34]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[33:33] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[32:32]))))) + 0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[31:31] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[30:30]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[29:29] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[28:28])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[27:27] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[26:26]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[25:25] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[24:24]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[23:23] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[22:22]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[21:21] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[20:20])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[19:19] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[18:18]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[17:17] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[16:16])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[15:15] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[14:14]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[13:13] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[12:12])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[11:11] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[10:10]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[9:9] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[8:8]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[7:7] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[6:6]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[5:5] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[4:4])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[3:3] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[2:2]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[1:1] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[0:0]))))))[31:0] + 0xffffffff_33)[7:0]) & 0x3f_8))[64:1] o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[0:0] == 0x1_1 bool_or false)
(bt r32, r32) -> (CF := true bool_and ((0x0_32 o OP1[31:0] o 0x0_1 >> 0x0_57 o (((OP2[7:0] | (0x0_1 o (0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[63:63] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[62:62]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[61:61] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[60:60])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[59:59] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[58:58]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[57:57] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[56:56]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[55:55] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[54:54]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[53:53] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[52:52])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[51:51] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[50:50]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[49:49] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[48:48])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[47:47] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[46:46]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[45:45] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[44:44])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[43:43] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[42:42]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[41:41] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[40:40]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[39:39] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[38:38]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[37:37] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[36:36])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[35:35] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[34:34]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[33:33] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[32:32]))))) + 0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[31:31] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[30:30]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[29:29] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[28:28])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[27:27] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[26:26]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[25:25] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[24:24]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[23:23] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[22:22]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[21:21] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[20:20])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[19:19] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[18:18]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[17:17] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[16:16])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[15:15] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[14:14]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[13:13] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[12:12])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[11:11] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[10:10]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[9:9] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[8:8]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[7:7] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[6:6]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[5:5] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[4:4])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[3:3] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[2:2]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[1:1] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[0:0]))))))[31:0] + 0xffffffff_33)[7:0]) ^ (0x0_1 o (0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[63:63] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[62:62]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[61:61] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[60:60])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[59:59] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[58:58]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[57:57] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[56:56]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[55:55] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[54:54]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[53:53] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[52:52])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[51:51] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[50:50]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[49:49] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[48:48])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[47:47] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[46:46]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[45:45] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[44:44])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[43:43] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[42:42]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[41:41] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[40:40]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[39:39] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[38:38]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[37:37] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[36:36])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[35:35] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[34:34]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[33:33] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[32:32]))))) + 0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[31:31] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[30:30]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[29:29] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[28:28])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[27:27] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[26:26]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[25:25] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[24:24]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[23:23] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[22:22]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[21:21] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[20:20])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[19:19] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[18:18]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[17:17] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[16:16])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[15:15] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[14:14]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[13:13] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[12:12])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[11:11] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[10:10]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[9:9] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[8:8]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[7:7] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[6:6]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[5:5] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[4:4])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[3:3] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[2:2]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[1:1] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[0:0]))))))[31:0] + 0xffffffff_33)[7:0]) & 0x3f_8))[64:1] o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[0:0] == 0x1_1 bool_or false)
(bt m32, imm8) -> (CF := true bool_and ((0x0_32 o OP1[31:0] o 0x0_1 >> 0x0_57 o ((((sign-extend-32(OP2))[7:0] | (0x0_1 o (0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[63:63] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[62:62]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[61:61] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[60:60])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[59:59] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[58:58]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[57:57] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[56:56]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[55:55] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[54:54]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[53:53] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[52:52])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[51:51] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[50:50]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[49:49] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[48:48])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[47:47] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[46:46]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[45:45] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[44:44])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[43:43] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[42:42]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[41:41] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[40:40]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[39:39] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[38:38]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[37:37] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[36:36])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[35:35] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[34:34]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[33:33] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[32:32]))))) + 0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[31:31] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[30:30]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[29:29] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[28:28])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[27:27] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[26:26]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[25:25] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[24:24]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[23:23] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[22:22]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[21:21] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[20:20])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[19:19] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[18:18]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[17:17] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[16:16])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[15:15] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[14:14]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[13:13] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[12:12])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[11:11] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[10:10]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[9:9] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[8:8]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[7:7] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[6:6]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[5:5] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[4:4])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[3:3] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[2:2]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[1:1] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[0:0]))))))[31:0] + 0xffffffff_33)[7:0]) ^ (0x0_1 o (0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[63:63] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[62:62]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[61:61] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[60:60])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[59:59] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[58:58]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[57:57] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[56:56]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[55:55] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[54:54]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[53:53] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[52:52])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[51:51] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[50:50]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[49:49] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[48:48])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[47:47] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[46:46]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[45:45] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[44:44])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[43:43] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[42:42]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[41:41] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[40:40]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[39:39] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[38:38]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[37:37] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[36:36])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[35:35] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[34:34]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[33:33] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[32:32]))))) + 0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[31:31] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[30:30]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[29:29] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[28:28])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[27:27] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[26:26]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[25:25] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[24:24]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[23:23] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[22:22]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[21:21] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[20:20])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[19:19] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[18:18]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[17:17] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[16:16])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[15:15] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[14:14]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[13:13] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[12:12])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[11:11] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[10:10]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[9:9] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[8:8]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[7:7] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[6:6]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[5:5] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[4:4])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[3:3] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[2:2]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[1:1] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[0:0]))))))[31:0] + 0xffffffff_33)[7:0]) & 0x3f_8))[64:1] o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[0:0] == 0x1_1 bool_or false)
(bt m32, r32) -> (CF := true bool_and ((0x0_32 o OP1[31:0] o 0x0_1 >> 0x0_57 o (((OP2[7:0] | (0x0_1 o (0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[63:63] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[62:62]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[61:61] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[60:60])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[59:59] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[58:58]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[57:57] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[56:56]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[55:55] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[54:54]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[53:53] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[52:52])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[51:51] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[50:50]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[49:49] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[48:48])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[47:47] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[46:46]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[45:45] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[44:44])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[43:43] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[42:42]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[41:41] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[40:40]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[39:39] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[38:38]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[37:37] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[36:36])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[35:35] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[34:34]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[33:33] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[32:32]))))) + 0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[31:31] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[30:30]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[29:29] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[28:28])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[27:27] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[26:26]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[25:25] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[24:24]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[23:23] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[22:22]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[21:21] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[20:20])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[19:19] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[18:18]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[17:17] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[16:16])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[15:15] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[14:14]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[13:13] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[12:12])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[11:11] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[10:10]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[9:9] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[8:8]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[7:7] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[6:6]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[5:5] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[4:4])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[3:3] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[2:2]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[1:1] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[0:0]))))))[31:0] + 0xffffffff_33)[7:0]) ^ (0x0_1 o (0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[63:63] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[62:62]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[61:61] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[60:60])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[59:59] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[58:58]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[57:57] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[56:56]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[55:55] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[54:54]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[53:53] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[52:52])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[51:51] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[50:50]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[49:49] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[48:48])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[47:47] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[46:46]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[45:45] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[44:44])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[43:43] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[42:42]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[41:41] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[40:40]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[39:39] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[38:38]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[37:37] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[36:36])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[35:35] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[34:34]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[33:33] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[32:32]))))) + 0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[31:31] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[30:30]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[29:29] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[28:28])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[27:27] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[26:26]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[25:25] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[24:24]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[23:23] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[22:22]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[21:21] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[20:20])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[19:19] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[18:18]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[17:17] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[16:16])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[15:15] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[14:14]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[13:13] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[12:12])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[11:11] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[10:10]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[9:9] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[8:8]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[7:7] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[6:6]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[5:5] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[4:4])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[3:3] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[2:2]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[1:1] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[0:0]))))))[31:0] + 0xffffffff_33)[7:0]) & 0x3f_8))[64:1] o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[0:0] == 0x1_1 bool_or false)
(bt r64, imm8) -> (CF := true bool_and ((OP1 o 0x0_1 sign_shift_right 0x0_57 o ((sign-extend-64(OP2))[7:0] & 0x3f_8))[64:1] o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[0:0] == 0x1_1 bool_or false)
(bt r64, r64) -> (CF := true bool_and ((OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[64:1] o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[0:0] == 0x1_1 bool_or false)
(bt m64, imm8) -> (CF := true bool_and ((OP1 o 0x0_1 sign_shift_right 0x0_57 o ((sign-extend-64(OP2))[7:0] & 0x3f_8))[64:1] o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[0:0] == 0x1_1 bool_or false)
(bt m64, r64) -> (CF := true bool_and ((OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[64:1] o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[0:0] == 0x1_1 bool_or false)
(cbw) -> (RAX = RAX[63:16] o sign-extend-16(RAX[7:0]))
(cdq) -> (RDX = 0x0_32 o sign-extend-64(RAX[31:0])[63:32])
(cdqe) -> (RAX = sign-extend-64(RAX[31:0]))
(clc) -> (CF := false)
(cmc) -> (CF := ((CF ? 0x0_9 : 0xff_9) + (CF ? 0x0_9 : 0xff_9))[8:8] == 0x1_1)
(cmova r32, r32) -> (OP1 = 0x0_32 o (!CF bool_and !ZF ? OP2[31:0] : OP1[31:0]))
(cmova r32, m32) -> (OP1 = 0x0_32 o (!CF bool_and !ZF ? OP2[31:0] : OP1[31:0]))
(cmova r64, r64) -> (OP1 = !CF bool_and !ZF ? OP2 : OP1)
(cmova r64, m64) -> (OP1 = !CF bool_and !ZF ? OP2 : OP1)
(cmova r16, r16) -> (OP1 = OP1[63:16] o (!CF bool_and !ZF ? OP2[15:0] : OP1[15:0]))
(cmova r16, m16) -> (OP1 = OP1[63:16] o (!CF bool_and !ZF ? OP2[15:0] : OP1[15:0]))
(cmovae r32, r32) -> (OP1 = 0x0_32 o (!CF ? OP2[31:0] : OP1[31:0]))
(cmovae r32, m32) -> (OP1 = 0x0_32 o (!CF ? OP2[31:0] : OP1[31:0]))
(cmovae r64, r64) -> (OP1 = !CF ? OP2 : OP1)
(cmovae r64, m64) -> (OP1 = !CF ? OP2 : OP1)
(cmovae r16, r16) -> (OP1 = OP1[63:16] o (!CF ? OP2[15:0] : OP1[15:0]))
(cmovae r16, m16) -> (OP1 = OP1[63:16] o (!CF ? OP2[15:0] : OP1[15:0]))
(cmovb r32, r32) -> (OP1 = 0x0_32 o (CF ? OP2[31:0] : OP1[31:0]))
(cmovb r32, m32) -> (OP1 = 0x0_32 o (CF ? OP2[31:0] : OP1[31:0]))
(cmovb r64, r64) -> (OP1 = CF ? OP2 : OP1)
(cmovb r64, m64) -> (OP1 = CF ? OP2 : OP1)
(cmovb r16, r16) -> (OP1 = OP1[63:16] o (CF ? OP2[15:0] : OP1[15:0]))
(cmovb r16, m16) -> (OP1 = OP1[63:16] o (CF ? OP2[15:0] : OP1[15:0]))
(cmovbe r32, r32) -> (OP1 = 0x0_32 o (CF bool_or ZF ? OP2[31:0] : OP1[31:0]))
(cmovbe r32, m32) -> (OP1 = 0x0_32 o (CF bool_or ZF ? OP2[31:0] : OP1[31:0]))
(cmovbe r64, r64) -> (OP1 = CF bool_or ZF ? OP2 : OP1)
(cmovbe r64, m64) -> (OP1 = CF bool_or ZF ? OP2 : OP1)
(cmovbe r16, r16) -> (OP1 = OP1[63:16] o (CF bool_or ZF ? OP2[15:0] : OP1[15:0]))
(cmovbe r16, m16) -> (OP1 = OP1[63:16] o (CF bool_or ZF ? OP2[15:0] : OP1[15:0]))
(cmovc r32, r32) -> (OP1 = 0x0_32 o (CF ? OP2[31:0] : OP1[31:0]))
(cmovc r32, m32) -> (OP1 = 0x0_32 o (CF ? OP2[31:0] : OP1[31:0]))
(cmovc r64, r64) -> (OP1 = CF ? OP2 : OP1)
(cmovc r64, m64) -> (OP1 = CF ? OP2 : OP1)
(cmovc r16, r16) -> (OP1 = OP1[63:16] o (CF ? OP2[15:0] : OP1[15:0]))
(cmovc r16, m16) -> (OP1 = OP1[63:16] o (CF ? OP2[15:0] : OP1[15:0]))
(cmove r32, r32) -> (OP1 = 0x0_32 o (ZF ? OP2[31:0] : OP1[31:0]))
(cmove r32, m32) -> (OP1 = 0x0_32 o (ZF ? OP2[31:0] : OP1[31:0]))
(cmove r64, r64) -> (OP1 = ZF ? OP2 : OP1)
(cmove r64, m64) -> (OP1 = ZF ? OP2 : OP1)
(cmove r16, r16) -> (OP1 = OP1[63:16] o (ZF ? OP2[15:0] : OP1[15:0]))
(cmove r16, m16) -> (OP1 = OP1[63:16] o (ZF ? OP2[15:0] : OP1[15:0]))
(cmovg r32, r32) -> (OP1 = 0x0_32 o (!ZF bool_and (SF bool_iff OF) ? OP2[31:0] : OP1[31:0]))
(cmovg r32, m32) -> (OP1 = 0x0_32 o (!ZF bool_and (SF bool_iff OF) ? OP2[31:0] : OP1[31:0]))
(cmovg r64, r64) -> (OP1 = !ZF bool_and (SF bool_iff OF) ? OP2 : OP1)
(cmovg r64, m64) -> (OP1 = !ZF bool_and (SF bool_iff OF) ? OP2 : OP1)
(cmovg r16, r16) -> (OP1 = OP1[63:16] o (!ZF bool_and (SF bool_iff OF) ? OP2[15:0] : OP1[15:0]))
(cmovg r16, m16) -> (OP1 = OP1[63:16] o (!ZF bool_and (SF bool_iff OF) ? OP2[15:0] : OP1[15:0]))
(cmovge r32, r32) -> (OP1 = 0x0_32 o (SF bool_iff OF ? OP2[31:0] : OP1[31:0]))
(cmovge r32, m32) -> (OP1 = 0x0_32 o (SF bool_iff OF ? OP2[31:0] : OP1[31:0]))
(cmovge r64, r64) -> (OP1 = SF bool_iff OF ? OP2 : OP1)
(cmovge r64, m64) -> (OP1 = SF bool_iff OF ? OP2 : OP1)
(cmovge r16, r16) -> (OP1 = OP1[63:16] o (SF bool_iff OF ? OP2[15:0] : OP1[15:0]))
(cmovge r16, m16) -> (OP1 = OP1[63:16] o (SF bool_iff OF ? OP2[15:0] : OP1[15:0]))
(cmovl r32, r32) -> (OP1 = 0x0_32 o (!(SF bool_iff OF) ? OP2[31:0] : OP1[31:0]))
(cmovl r32, m32) -> (OP1 = 0x0_32 o (!(SF bool_iff OF) ? OP2[31:0] : OP1[31:0]))
(cmovl r64, r64) -> (OP1 = !(SF bool_iff OF) ? OP2 : OP1)
(cmovl r64, m64) -> (OP1 = !(SF bool_iff OF) ? OP2 : OP1)
(cmovl r16, r16) -> (OP1 = OP1[63:16] o (!(SF bool_iff OF) ? OP2[15:0] : OP1[15:0]))
(cmovl r16, m16) -> (OP1 = OP1[63:16] o (!(SF bool_iff OF) ? OP2[15:0] : OP1[15:0]))
(cmovle r32, r32) -> (OP1 = 0x0_32 o (ZF bool_or !(SF bool_iff OF) ? OP2[31:0] : OP1[31:0]))
(cmovle r32, m32) -> (OP1 = 0x0_32 o (ZF bool_or !(SF bool_iff OF) ? OP2[31:0] : OP1[31:0]))
(cmovle r64, r64) -> (OP1 = ZF bool_or !(SF bool_iff OF) ? OP2 : OP1)
(cmovle r64, m64) -> (OP1 = ZF bool_or !(SF bool_iff OF) ? OP2 : OP1)
(cmovle r16, r16) -> (OP1 = OP1[63:16] o (ZF bool_or !(SF bool_iff OF) ? OP2[15:0] : OP1[15:0]))
(cmovle r16, m16) -> (OP1 = OP1[63:16] o (ZF bool_or !(SF bool_iff OF) ? OP2[15:0] : OP1[15:0]))
(cmovna r32, r32) -> (OP1 = 0x0_32 o (CF bool_or ZF ? OP2[31:0] : OP1[31:0]))
(cmovna r32, m32) -> (OP1 = 0x0_32 o (CF bool_or ZF ? OP2[31:0] : OP1[31:0]))
(cmovna r64, r64) -> (OP1 = CF bool_or ZF ? OP2 : OP1)
(cmovna r64, m64) -> (OP1 = CF bool_or ZF ? OP2 : OP1)
(cmovna r16, r16) -> (OP1 = OP1[63:16] o (CF bool_or ZF ? OP2[15:0] : OP1[15:0]))
(cmovna r16, m16) -> (OP1 = OP1[63:16] o (CF bool_or ZF ? OP2[15:0] : OP1[15:0]))
(cmovnae r32, r32) -> (OP1 = 0x0_32 o (CF ? OP2[31:0] : OP1[31:0]))
(cmovnae r32, m32) -> (OP1 = 0x0_32 o (CF ? OP2[31:0] : OP1[31:0]))
(cmovnae r64, r64) -> (OP1 = CF ? OP2 : OP1)
(cmovnae r64, m64) -> (OP1 = CF ? OP2 : OP1)
(cmovnae r16, r16) -> (OP1 = OP1[63:16] o (CF ? OP2[15:0] : OP1[15:0]))
(cmovnae r16, m16) -> (OP1 = OP1[63:16] o (CF ? OP2[15:0] : OP1[15:0]))
(cmovnb r32, r32) -> (OP1 = 0x0_32 o (!CF ? OP2[31:0] : OP1[31:0]))
(cmovnb r32, m32) -> (OP1 = 0x0_32 o (!CF ? OP2[31:0] : OP1[31:0]))
(cmovnb r64, r64) -> (OP1 = !CF ? OP2 : OP1)
(cmovnb r64, m64) -> (OP1 = !CF ? OP2 : OP1)
(cmovnb r16, r16) -> (OP1 = OP1[63:16] o (!CF ? OP2[15:0] : OP1[15:0]))
(cmovnb r16, m16) -> (OP1 = OP1[63:16] o (!CF ? OP2[15:0] : OP1[15:0]))
(cmovnbe r32, r32) -> (OP1 = 0x0_32 o (!CF bool_and !ZF ? OP2[31:0] : OP1[31:0]))
(cmovnbe r32, m32) -> (OP1 = 0x0_32 o (!CF bool_and !ZF ? OP2[31:0] : OP1[31:0]))
(cmovnbe r64, r64) -> (OP1 = !CF bool_and !ZF ? OP2 : OP1)
(cmovnbe r64, m64) -> (OP1 = !CF bool_and !ZF ? OP2 : OP1)
(cmovnbe r16, r16) -> (OP1 = OP1[63:16] o (!CF bool_and !ZF ? OP2[15:0] : OP1[15:0]))
(cmovnbe r16, m16) -> (OP1 = OP1[63:16] o (!CF bool_and !ZF ? OP2[15:0] : OP1[15:0]))
(cmovnc r32, r32) -> (OP1 = 0x0_32 o (!CF ? OP2[31:0] : OP1[31:0]))
(cmovnc r32, m32) -> (OP1 = 0x0_32 o (!CF ? OP2[31:0] : OP1[31:0]))
(cmovnc r64, r64) -> (OP1 = !CF ? OP2 : OP1)
(cmovnc r64, m64) -> (OP1 = !CF ? OP2 : OP1)
(cmovnc r16, r16) -> (OP1 = OP1[63:16] o (!CF ? OP2[15:0] : OP1[15:0]))
(cmovnc r16, m16) -> (OP1 = OP1[63:16] o (!CF ? OP2[15:0] : OP1[15:0]))
(cmovne r32, r32) -> (OP1 = 0x0_32 o (!ZF ? OP2[31:0] : OP1[31:0]))
(cmovne r32, m32) -> (OP1 = 0x0_32 o (!ZF ? OP2[31:0] : OP1[31:0]))
(cmovne r64, r64) -> (OP1 = !ZF ? OP2 : OP1)
(cmovne r64, m64) -> (OP1 = !ZF ? OP2 : OP1)
(cmovne r16, r16) -> (OP1 = OP1[63:16] o (!ZF ? OP2[15:0] : OP1[15:0]))
(cmovne r16, m16) -> (OP1 = OP1[63:16] o (!ZF ? OP2[15:0] : OP1[15:0]))
(cmovng r32, r32) -> (OP1 = 0x0_32 o (ZF bool_or !(SF bool_iff OF) ? OP2[31:0] : OP1[31:0]))
(cmovng r32, m32) -> (OP1 = 0x0_32 o (ZF bool_or !(SF bool_iff OF) ? OP2[31:0] : OP1[31:0]))
(cmovng r64, r64) -> (OP1 = ZF bool_or !(SF bool_iff OF) ? OP2 : OP1)
(cmovng r64, m64) -> (OP1 = ZF bool_or !(SF bool_iff OF) ? OP2 : OP1)
(cmovng r16, r16) -> (OP1 = OP1[63:16] o (ZF bool_or !(SF bool_iff OF) ? OP2[15:0] : OP1[15:0]))
(cmovng r16, m16) -> (OP1 = OP1[63:16] o (ZF bool_or !(SF bool_iff OF) ? OP2[15:0] : OP1[15:0]))
(cmovnge r32, r32) -> (OP1 = 0x0_32 o (!(SF bool_iff OF) ? OP2[31:0] : OP1[31:0]))
(cmovnge r32, m32) -> (OP1 = 0x0_32 o (!(SF bool_iff OF) ? OP2[31:0] : OP1[31:0]))
(cmovnge r64, r64) -> (OP1 = !(SF bool_iff OF) ? OP2 : OP1)
(cmovnge r64, m64) -> (OP1 = !(SF bool_iff OF) ? OP2 : OP1)
(cmovnge r16, r16) -> (OP1 = OP1[63:16] o (!(SF bool_iff OF) ? OP2[15:0] : OP1[15:0]))
(cmovnge r16, m16) -> (OP1 = OP1[63:16] o (!(SF bool_iff OF) ? OP2[15:0] : OP1[15:0]))
(cmovnl r32, r32) -> (OP1 = 0x0_32 o (SF bool_iff OF ? OP2[31:0] : OP1[31:0]))
(cmovnl r32, m32) -> (OP1 = 0x0_32 o (SF bool_iff OF ? OP2[31:0] : OP1[31:0]))
(cmovnl r64, r64) -> (OP1 = SF bool_iff OF ? OP2 : OP1)
(cmovnl r64, m64) -> (OP1 = SF bool_iff OF ? OP2 : OP1)
(cmovnl r16, r16) -> (OP1 = OP1[63:16] o (SF bool_iff OF ? OP2[15:0] : OP1[15:0]))
(cmovnl r16, m16) -> (OP1 = OP1[63:16] o (SF bool_iff OF ? OP2[15:0] : OP1[15:0]))
(cmovnle r32, r32) -> (OP1 = 0x0_32 o (!ZF bool_and (SF bool_iff OF) ? OP2[31:0] : OP1[31:0]))
(cmovnle r32, m32) -> (OP1 = 0x0_32 o (!ZF bool_and (SF bool_iff OF) ? OP2[31:0] : OP1[31:0]))
(cmovnle r64, r64) -> (OP1 = !ZF bool_and (SF bool_iff OF) ? OP2 : OP1)
(cmovnle r64, m64) -> (OP1 = !ZF bool_and (SF bool_iff OF) ? OP2 : OP1)
(cmovnle r16, r16) -> (OP1 = OP1[63:16] o (!ZF bool_and (SF bool_iff OF) ? OP2[15:0] : OP1[15:0]))
(cmovnle r16, m16) -> (OP1 = OP1[63:16] o (!ZF bool_and (SF bool_iff OF) ? OP2[15:0] : OP1[15:0]))
(cmovno r32, r32) -> (OP1 = 0x0_32 o (!OF ? OP2[31:0] : OP1[31:0]))
(cmovno r32, m32) -> (OP1 = 0x0_32 o (!OF ? OP2[31:0] : OP1[31:0]))
(cmovno r64, r64) -> (OP1 = !OF ? OP2 : OP1)
(cmovno r64, m64) -> (OP1 = !OF ? OP2 : OP1)
(cmovno r16, r16) -> (OP1 = OP1[63:16] o (!OF ? OP2[15:0] : OP1[15:0]))
(cmovno r16, m16) -> (OP1 = OP1[63:16] o (!OF ? OP2[15:0] : OP1[15:0]))
(cmovnp r32, r32) -> (OP1 = 0x0_32 o (!PF ? OP2[31:0] : OP1[31:0]))
(cmovnp r32, m32) -> (OP1 = 0x0_32 o (!PF ? OP2[31:0] : OP1[31:0]))
(cmovnp r64, r64) -> (OP1 = !PF ? OP2 : OP1)
(cmovnp r64, m64) -> (OP1 = !PF ? OP2 : OP1)
(cmovnp r16, r16) -> (OP1 = OP1[63:16] o (!PF ? OP2[15:0] : OP1[15:0]))
(cmovnp r16, m16) -> (OP1 = OP1[63:16] o (!PF ? OP2[15:0] : OP1[15:0]))
(cmovns r32, r32) -> (OP1 = 0x0_32 o (!SF ? OP2[31:0] : OP1[31:0]))
(cmovns r32, m32) -> (OP1 = 0x0_32 o (!SF ? OP2[31:0] : OP1[31:0]))
(cmovns r64, r64) -> (OP1 = !SF ? OP2 : OP1)
(cmovns r64, m64) -> (OP1 = !SF ? OP2 : OP1)
(cmovns r16, r16) -> (OP1 = OP1[63:16] o (!SF ? OP2[15:0] : OP1[15:0]))
(cmovns r16, m16) -> (OP1 = OP1[63:16] o (!SF ? OP2[15:0] : OP1[15:0]))
(cmovnz r32, r32) -> (OP1 = 0x0_32 o (!ZF ? OP2[31:0] : OP1[31:0]))
(cmovnz r32, m32) -> (OP1 = 0x0_32 o (!ZF ? OP2[31:0] : OP1[31:0]))
(cmovnz r64, r64) -> (OP1 = !ZF ? OP2 : OP1)
(cmovnz r64, m64) -> (OP1 = !ZF ? OP2 : OP1)
(cmovnz r16, r16) -> (OP1 = OP1[63:16] o (!ZF ? OP2[15:0] : OP1[15:0]))
(cmovnz r16, m16) -> (OP1 = OP1[63:16] o (!ZF ? OP2[15:0] : OP1[15:0]))
(cmovo r32, r32) -> (OP1 = 0x0_32 o (OF ? OP2[31:0] : OP1[31:0]))
(cmovo r32, m32) -> (OP1 = 0x0_32 o (OF ? OP2[31:0] : OP1[31:0]))
(cmovo r64, r64) -> (OP1 = OF ? OP2 : OP1)
(cmovo r64, m64) -> (OP1 = OF ? OP2 : OP1)
(cmovo r16, r16) -> (OP1 = OP1[63:16] o (OF ? OP2[15:0] : OP1[15:0]))
(cmovo r16, m16) -> (OP1 = OP1[63:16] o (OF ? OP2[15:0] : OP1[15:0]))
(cmovp r32, r32) -> (OP1 = 0x0_32 o (PF ? OP2[31:0] : OP1[31:0]))
(cmovp r32, m32) -> (OP1 = 0x0_32 o (PF ? OP2[31:0] : OP1[31:0]))
(cmovp r64, r64) -> (OP1 = PF ? OP2 : OP1)
(cmovp r64, m64) -> (OP1 = PF ? OP2 : OP1)
(cmovp r16, r16) -> (OP1 = OP1[63:16] o (PF ? OP2[15:0] : OP1[15:0]))
(cmovp r16, m16) -> (OP1 = OP1[63:16] o (PF ? OP2[15:0] : OP1[15:0]))
(cmovpe r32, r32) -> (OP1 = 0x0_32 o (PF ? OP2[31:0] : OP1[31:0]))
(cmovpe r32, m32) -> (OP1 = 0x0_32 o (PF ? OP2[31:0] : OP1[31:0]))
(cmovpe r64, r64) -> (OP1 = PF ? OP2 : OP1)
(cmovpe r64, m64) -> (OP1 = PF ? OP2 : OP1)
(cmovpe r16, r16) -> (OP1 = OP1[63:16] o (PF ? OP2[15:0] : OP1[15:0]))
(cmovpe r16, m16) -> (OP1 = OP1[63:16] o (PF ? OP2[15:0] : OP1[15:0]))
(cmovpo r32, r32) -> (OP1 = 0x0_32 o (!PF ? OP2[31:0] : OP1[31:0]))
(cmovpo r32, m32) -> (OP1 = 0x0_32 o (!PF ? OP2[31:0] : OP1[31:0]))
(cmovpo r64, r64) -> (OP1 = !PF ? OP2 : OP1)
(cmovpo r64, m64) -> (OP1 = !PF ? OP2 : OP1)
(cmovpo r16, r16) -> (OP1 = OP1[63:16] o (!PF ? OP2[15:0] : OP1[15:0]))
(cmovpo r16, m16) -> (OP1 = OP1[63:16] o (!PF ? OP2[15:0] : OP1[15:0]))
(cmovs r32, r32) -> (OP1 = 0x0_32 o (SF ? OP2[31:0] : OP1[31:0]))
(cmovs r32, m32) -> (OP1 = 0x0_32 o (SF ? OP2[31:0] : OP1[31:0]))
(cmovs r64, r64) -> (OP1 = SF ? OP2 : OP1)
(cmovs r64, m64) -> (OP1 = SF ? OP2 : OP1)
(cmovs r16, r16) -> (OP1 = OP1[63:16] o (SF ? OP2[15:0] : OP1[15:0]))
(cmovs r16, m16) -> (OP1 = OP1[63:16] o (SF ? OP2[15:0] : OP1[15:0]))
(cmovz r32, r32) -> (OP1 = 0x0_32 o (ZF ? OP2[31:0] : OP1[31:0]))
(cmovz r32, m32) -> (OP1 = 0x0_32 o (ZF ? OP2[31:0] : OP1[31:0]))
(cmovz r64, r64) -> (OP1 = ZF ? OP2 : OP1)
(cmovz r64, m64) -> (OP1 = ZF ? OP2 : OP1)
(cmovz r16, r16) -> (OP1 = OP1[63:16] o (ZF ? OP2[15:0] : OP1[15:0]))
(cmovz r16, m16) -> (OP1 = OP1[63:16] o (ZF ? OP2[15:0] : OP1[15:0]))
(cmp rh, imm8) -> (CF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[8:8] == 0x1_1) ; PF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:0] == 0x0_8 ; SF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:7] == 0x1_1 ; OF := (!OP2[7:7] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[7:7] == 0x1_1 bool_iff (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:7] == 0x1_1))
(cmp rh, rh) -> (CF := !((0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[15:8])[8:8] == 0x1_1) ; PF := !((0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[15:8])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[15:8])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[15:8])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[15:8])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[15:8])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[15:8])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[15:8])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[15:8])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[15:8])[7:0] == 0x0_8 ; SF := (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[15:8])[7:7] == 0x1_1 ; OF := (!OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[15:15] == 0x1_1 bool_iff (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[15:8])[7:7] == 0x1_1))
(cmp rh, r8) -> (CF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[8:8] == 0x1_1) ; PF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:0] == 0x0_8 ; SF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:7] == 0x1_1 ; OF := (!OP2[7:7] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[7:7] == 0x1_1 bool_iff (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:7] == 0x1_1))
(cmp rh, m8) -> (CF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[8:8] == 0x1_1) ; PF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:0] == 0x0_8 ; SF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:7] == 0x1_1 ; OF := (!OP2[7:7] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[7:7] == 0x1_1 bool_iff (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:7] == 0x1_1))
(cmp al, imm8) -> (CF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[8:8] == 0x1_1) ; PF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (!OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(!OP2[7:7] == 0x1_1 bool_iff (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(cmp r8, imm8) -> (CF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[8:8] == 0x1_1) ; PF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (!OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(!OP2[7:7] == 0x1_1 bool_iff (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(cmp r8, rh) -> (CF := !((0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[8:8] == 0x1_1) ; PF := !((0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (!OP2[15:15] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(!OP2[15:15] == 0x1_1 bool_iff (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(cmp r8, r8) -> (CF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[8:8] == 0x1_1) ; PF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (!OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(!OP2[7:7] == 0x1_1 bool_iff (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(cmp r8, m8) -> (CF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[8:8] == 0x1_1) ; PF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (!OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(!OP2[7:7] == 0x1_1 bool_iff (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(cmp m8, imm8) -> (CF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[8:8] == 0x1_1) ; PF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (!OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(!OP2[7:7] == 0x1_1 bool_iff (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(cmp m8, rh) -> (CF := !((0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[8:8] == 0x1_1) ; PF := !((0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (!OP2[15:15] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(!OP2[15:15] == 0x1_1 bool_iff (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(cmp m8, r8) -> (CF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[8:8] == 0x1_1) ; PF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (!OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(!OP2[7:7] == 0x1_1 bool_iff (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(cmp eax, imm32) -> (CF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[32:32] == 0x1_1) ; PF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (!OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(!OP2[31:31] == 0x1_1 bool_iff (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(cmp r32, imm8) -> (CF := !((0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[32:32] == 0x1_1) ; PF := !((0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (!(sign-extend-32(OP2))[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(!(sign-extend-32(OP2))[31:31] == 0x1_1 bool_iff (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(cmp r32, imm32) -> (CF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[32:32] == 0x1_1) ; PF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (!OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(!OP2[31:31] == 0x1_1 bool_iff (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(cmp r32, r32) -> (CF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[32:32] == 0x1_1) ; PF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (!OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(!OP2[31:31] == 0x1_1 bool_iff (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(cmp r32, m32) -> (CF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[32:32] == 0x1_1) ; PF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (!OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(!OP2[31:31] == 0x1_1 bool_iff (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(cmp m32, imm8) -> (CF := !((0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[32:32] == 0x1_1) ; PF := !((0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (!(sign-extend-32(OP2))[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(!(sign-extend-32(OP2))[31:31] == 0x1_1 bool_iff (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(cmp m32, imm32) -> (CF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[32:32] == 0x1_1) ; PF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (!OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(!OP2[31:31] == 0x1_1 bool_iff (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(cmp m32, r32) -> (CF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[32:32] == 0x1_1) ; PF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (!OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(!OP2[31:31] == 0x1_1 bool_iff (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(cmp rax, imm32) -> (CF := !((0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[64:64] == 0x1_1) ; PF := !((0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1))
(cmp r64, imm8) -> (CF := !((0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[64:64] == 0x1_1) ; PF := !((0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1))
(cmp r64, imm32) -> (CF := !((0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[64:64] == 0x1_1) ; PF := !((0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1))
(cmp r64, r64) -> (CF := !((0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[64:64] == 0x1_1) ; PF := !((0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (!OP2[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(!OP2[63:63] == 0x1_1 bool_iff (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1))
(cmp r64, m64) -> (CF := !((0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[64:64] == 0x1_1) ; PF := !((0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (!OP2[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(!OP2[63:63] == 0x1_1 bool_iff (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1))
(cmp m64, imm8) -> (CF := !((0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[64:64] == 0x1_1) ; PF := !((0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1))
(cmp m64, imm32) -> (CF := !((0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[64:64] == 0x1_1) ; PF := !((0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1))
(cmp m64, r64) -> (CF := !((0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[64:64] == 0x1_1) ; PF := !((0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (!OP2[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(!OP2[63:63] == 0x1_1 bool_iff (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1))
(cmp ax, imm16) -> (CF := !((0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[16:16] == 0x1_1) ; PF := !((0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (!OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[15:15] == 0x1_1 bool_iff (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(cmp r16, imm8) -> (CF := !((0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[16:16] == 0x1_1) ; PF := !((0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (!(sign-extend-16(OP2))[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!(sign-extend-16(OP2))[15:15] == 0x1_1 bool_iff (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(cmp r16, imm16) -> (CF := !((0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[16:16] == 0x1_1) ; PF := !((0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (!OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[15:15] == 0x1_1 bool_iff (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(cmp r16, r16) -> (CF := !((0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[16:16] == 0x1_1) ; PF := !((0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (!OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[15:15] == 0x1_1 bool_iff (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(cmp r16, m16) -> (CF := !((0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[16:16] == 0x1_1) ; PF := !((0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (!OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[15:15] == 0x1_1 bool_iff (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(cmp m16, imm8) -> (CF := !((0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[16:16] == 0x1_1) ; PF := !((0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (!(sign-extend-16(OP2))[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!(sign-extend-16(OP2))[15:15] == 0x1_1 bool_iff (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(cmp m16, imm16) -> (CF := !((0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[16:16] == 0x1_1) ; PF := !((0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (!OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[15:15] == 0x1_1 bool_iff (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(cmp m16, r16) -> (CF := !((0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[16:16] == 0x1_1) ; PF := !((0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (!OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[15:15] == 0x1_1 bool_iff (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(cmpxchg rh, rh) -> (RAX = RAX[63:8] o OP1[15:8] ; OP1 = OP1[63:16] o ((0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[15:8]))[7:0] == 0x0_8 ? OP2[15:8] : OP1[15:8]) o OP1[7:0] ; CF := (((0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[15:8]))[8:8] == 0x1_1 ? 0x0_9 : 0xff_9) + ((0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[15:8]))[8:8] == 0x1_1 ? 0x0_9 : 0xff_9))[8:8] == 0x1_1 ; PF := !((0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[15:8]))[0:0] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[15:8]))[1:1] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[15:8]))[2:2] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[15:8]))[3:3] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[15:8]))[4:4] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[15:8]))[5:5] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[15:8]))[6:6] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[15:8]))[7:7] == 0x1_1) ; ZF := (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[15:8]))[7:0] == 0x0_8 ; SF := (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[15:8]))[7:7] == 0x1_1 ; OF := (RAX[7:7] == 0x1_1 bool_iff (0x1_1 ^ OP1[15:15]) == 0x1_1) bool_and !(RAX[7:7] == 0x1_1 bool_iff (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[15:8]))[7:7] == 0x1_1))
(cmpxchg rh, r8) -> (RAX = RAX[63:8] o OP1[15:8] ; OP1 = OP1[63:16] o ((0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[15:8]))[7:0] == 0x0_8 ? OP2[7:0] : OP1[15:8]) o OP1[7:0] ; CF := (((0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[15:8]))[8:8] == 0x1_1 ? 0x0_9 : 0xff_9) + ((0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[15:8]))[8:8] == 0x1_1 ? 0x0_9 : 0xff_9))[8:8] == 0x1_1 ; PF := !((0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[15:8]))[0:0] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[15:8]))[1:1] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[15:8]))[2:2] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[15:8]))[3:3] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[15:8]))[4:4] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[15:8]))[5:5] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[15:8]))[6:6] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[15:8]))[7:7] == 0x1_1) ; ZF := (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[15:8]))[7:0] == 0x0_8 ; SF := (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[15:8]))[7:7] == 0x1_1 ; OF := (RAX[7:7] == 0x1_1 bool_iff (0x1_1 ^ OP1[15:15]) == 0x1_1) bool_and !(RAX[7:7] == 0x1_1 bool_iff (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[15:8]))[7:7] == 0x1_1))
(cmpxchg r8, rh) -> (RAX = RAX[63:8] o OP1[7:0] ; OP1 = OP1[63:8] o ((0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[7:0] == 0x0_8 ? OP2[15:8] : OP1[7:0]) ; CF := (((0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[8:8] == 0x1_1 ? 0x0_9 : 0xff_9) + ((0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[8:8] == 0x1_1 ? 0x0_9 : 0xff_9))[8:8] == 0x1_1 ; PF := !((0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[0:0] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[1:1] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[2:2] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[3:3] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[4:4] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[5:5] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[6:6] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[7:7] == 0x1_1) ; ZF := (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[7:0] == 0x0_8 ; SF := (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[7:7] == 0x1_1 ; OF := (RAX[7:7] == 0x1_1 bool_iff (0x1_1 ^ OP1[7:7]) == 0x1_1) bool_and !(RAX[7:7] == 0x1_1 bool_iff (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[7:7] == 0x1_1))
(cmpxchg r8, r8) -> (RAX = RAX[63:8] o OP1[7:0] ; OP1 = OP1[63:8] o ((0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[7:0] == 0x0_8 ? OP2[7:0] : OP1[7:0]) ; CF := (((0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[8:8] == 0x1_1 ? 0x0_9 : 0xff_9) + ((0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[8:8] == 0x1_1 ? 0x0_9 : 0xff_9))[8:8] == 0x1_1 ; PF := !((0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[0:0] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[1:1] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[2:2] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[3:3] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[4:4] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[5:5] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[6:6] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[7:7] == 0x1_1) ; ZF := (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[7:0] == 0x0_8 ; SF := (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[7:7] == 0x1_1 ; OF := (RAX[7:7] == 0x1_1 bool_iff (0x1_1 ^ OP1[7:7]) == 0x1_1) bool_and !(RAX[7:7] == 0x1_1 bool_iff (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[7:7] == 0x1_1))
(cmpxchg m8, rh) -> (RAX = (RAX[63:8] o OP1[7:0])[7:0] ; OP1 = (OP1[63:8] o ((0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[7:0] == 0x0_8 ? OP2[15:8] : OP1[7:0]))[7:0] ; CF := (((0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[8:8] == 0x1_1 ? 0x0_9 : 0xff_9) + ((0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[8:8] == 0x1_1 ? 0x0_9 : 0xff_9))[8:8] == 0x1_1 ; PF := !((0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[0:0] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[1:1] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[2:2] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[3:3] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[4:4] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[5:5] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[6:6] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[7:7] == 0x1_1) ; ZF := (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[7:0] == 0x0_8 ; SF := (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[7:7] == 0x1_1 ; OF := (RAX[7:7] == 0x1_1 bool_iff (0x1_1 ^ OP1[7:7]) == 0x1_1) bool_and !(RAX[7:7] == 0x1_1 bool_iff (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[7:7] == 0x1_1))
(cmpxchg m8, r8) -> (RAX = (RAX[63:8] o OP1[7:0])[7:0] ; OP1 = (OP1[63:8] o ((0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[7:0] == 0x0_8 ? OP2[7:0] : OP1[7:0]))[7:0] ; CF := (((0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[8:8] == 0x1_1 ? 0x0_9 : 0xff_9) + ((0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[8:8] == 0x1_1 ? 0x0_9 : 0xff_9))[8:8] == 0x1_1 ; PF := !((0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[0:0] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[1:1] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[2:2] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[3:3] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[4:4] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[5:5] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[6:6] == 0x1_1 bool_xor (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[7:7] == 0x1_1) ; ZF := (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[7:0] == 0x0_8 ; SF := (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[7:7] == 0x1_1 ; OF := (RAX[7:7] == 0x1_1 bool_iff (0x1_1 ^ OP1[7:7]) == 0x1_1) bool_and !(RAX[7:7] == 0x1_1 bool_iff (0x0_1 o RAX[7:0] + 0x1_9 + 0x0_1 o (0xff_8 ^ OP1[7:0]))[7:7] == 0x1_1))
(cmpxchg r64, r64) -> (RAX = (((0x0_1 o (OP1 ^ 0xffffffffffffffff_64) + 0x1_65 + 0x0_1 o RAX)[63:0] == 0x0_64 ? 0x1_9 : 0x0_9) + ((0x0_1 o (OP1 ^ 0xffffffffffffffff_64) + 0x1_65 + 0x0_1 o RAX)[63:0] == 0x0_64 ? 0x1_9 : 0x0_9))[7:0] == 0x0_8 ? OP1 : RAX ; OP1 = (0x0_1 o (OP1 ^ 0xffffffffffffffff_64) + 0x1_65 + 0x0_1 o RAX)[63:0] == 0x0_64 ? OP2 : OP1 ; CF := (((0x0_1 o (OP1 ^ 0xffffffffffffffff_64) + 0x1_65 + 0x0_1 o RAX)[64:64] == 0x1_1 ? 0x0_9 : 0xff_9) + ((0x0_1 o (OP1 ^ 0xffffffffffffffff_64) + 0x1_65 + 0x0_1 o RAX)[64:64] == 0x1_1 ? 0x0_9 : 0xff_9))[8:8] == 0x1_1 ; PF := !((0x0_1 o (OP1 ^ 0xffffffffffffffff_64) + 0x1_65 + 0x0_1 o RAX)[0:0] == 0x1_1 bool_xor (0x0_1 o (OP1 ^ 0xffffffffffffffff_64) + 0x1_65 + 0x0_1 o RAX)[1:1] == 0x1_1 bool_xor (0x0_1 o (OP1 ^ 0xffffffffffffffff_64) + 0x1_65 + 0x0_1 o RAX)[2:2] == 0x1_1 bool_xor (0x0_1 o (OP1 ^ 0xffffffffffffffff_64) + 0x1_65 + 0x0_1 o RAX)[3:3] == 0x1_1 bool_xor (0x0_1 o (OP1 ^ 0xffffffffffffffff_64) + 0x1_65 + 0x0_1 o RAX)[4:4] == 0x1_1 bool_xor (0x0_1 o (OP1 ^ 0xffffffffffffffff_64) + 0x1_65 + 0x0_1 o RAX)[5:5] == 0x1_1 bool_xor (0x0_1 o (OP1 ^ 0xffffffffffffffff_64) + 0x1_65 + 0x0_1 o RAX)[6:6] == 0x1_1 bool_xor (0x0_1 o (OP1 ^ 0xffffffffffffffff_64) + 0x1_65 + 0x0_1 o RAX)[7:7] == 0x1_1) ; ZF := (0x0_1 o (OP1 ^ 0xffffffffffffffff_64) + 0x1_65 + 0x0_1 o RAX)[63:0] == 0x0_64 ; SF := (0x0_1 o (OP1 ^ 0xffffffffffffffff_64) + 0x1_65 + 0x0_1 o RAX)[63:63] == 0x1_1 ; OF := ((OP1[63:63] ^ 0x1_1) == 0x1_1 bool_iff RAX[63:63] == 0x1_1) bool_and !((OP1[63:63] ^ 0x1_1) == 0x1_1 bool_iff (0x0_1 o (OP1 ^ 0xffffffffffffffff_64) + 0x1_65 + 0x0_1 o RAX)[63:63] == 0x1_1))
(cmpxchg m64, r64) -> (RAX = ((((0x0_1 o (OP1 ^ 0xffffffffffffffff_64) + 0x1_65 + 0x0_1 o RAX)[63:0] == 0x0_64 ? 0x1_9 : 0x0_9) + ((0x0_1 o (OP1 ^ 0xffffffffffffffff_64) + 0x1_65 + 0x0_1 o RAX)[63:0] == 0x0_64 ? 0x1_9 : 0x0_9))[7:0] == 0x0_8 ? OP1 : RAX)[63:0] ; OP1 = ((0x0_1 o (OP1 ^ 0xffffffffffffffff_64) + 0x1_65 + 0x0_1 o RAX)[63:0] == 0x0_64 ? OP2 : OP1)[63:0] ; CF := (((0x0_1 o (OP1 ^ 0xffffffffffffffff_64) + 0x1_65 + 0x0_1 o RAX)[64:64] == 0x1_1 ? 0x0_9 : 0xff_9) + ((0x0_1 o (OP1 ^ 0xffffffffffffffff_64) + 0x1_65 + 0x0_1 o RAX)[64:64] == 0x1_1 ? 0x0_9 : 0xff_9))[8:8] == 0x1_1 ; PF := !((0x0_1 o (OP1 ^ 0xffffffffffffffff_64) + 0x1_65 + 0x0_1 o RAX)[0:0] == 0x1_1 bool_xor (0x0_1 o (OP1 ^ 0xffffffffffffffff_64) + 0x1_65 + 0x0_1 o RAX)[1:1] == 0x1_1 bool_xor (0x0_1 o (OP1 ^ 0xffffffffffffffff_64) + 0x1_65 + 0x0_1 o RAX)[2:2] == 0x1_1 bool_xor (0x0_1 o (OP1 ^ 0xffffffffffffffff_64) + 0x1_65 + 0x0_1 o RAX)[3:3] == 0x1_1 bool_xor (0x0_1 o (OP1 ^ 0xffffffffffffffff_64) + 0x1_65 + 0x0_1 o RAX)[4:4] == 0x1_1 bool_xor (0x0_1 o (OP1 ^ 0xffffffffffffffff_64) + 0x1_65 + 0x0_1 o RAX)[5:5] == 0x1_1 bool_xor (0x0_1 o (OP1 ^ 0xffffffffffffffff_64) + 0x1_65 + 0x0_1 o RAX)[6:6] == 0x1_1 bool_xor (0x0_1 o (OP1 ^ 0xffffffffffffffff_64) + 0x1_65 + 0x0_1 o RAX)[7:7] == 0x1_1) ; ZF := (0x0_1 o (OP1 ^ 0xffffffffffffffff_64) + 0x1_65 + 0x0_1 o RAX)[63:0] == 0x0_64 ; SF := (0x0_1 o (OP1 ^ 0xffffffffffffffff_64) + 0x1_65 + 0x0_1 o RAX)[63:63] == 0x1_1 ; OF := ((OP1[63:63] ^ 0x1_1) == 0x1_1 bool_iff RAX[63:63] == 0x1_1) bool_and !((OP1[63:63] ^ 0x1_1) == 0x1_1 bool_iff (0x0_1 o (OP1 ^ 0xffffffffffffffff_64) + 0x1_65 + 0x0_1 o RAX)[63:63] == 0x1_1))
(cmpxchg r16, r16) -> (RAX = RAX[63:16] o OP1[15:0] ; OP1 = OP1[63:16] o ((0x0_1 o RAX[15:0] + 0x1_17 + 0x0_1 o (OP1[15:0] ^ 0xffff_16))[15:0] == 0x0_16 ? OP2[15:0] : OP1[15:0]) ; CF := (((0x0_1 o RAX[15:0] + 0x1_17 + 0x0_1 o (OP1[15:0] ^ 0xffff_16))[16:16] == 0x1_1 ? 0x0_9 : 0xff_9) + ((0x0_1 o RAX[15:0] + 0x1_17 + 0x0_1 o (OP1[15:0] ^ 0xffff_16))[16:16] == 0x1_1 ? 0x0_9 : 0xff_9))[8:8] == 0x1_1 ; PF := !((0x0_1 o RAX[15:0] + 0x1_17 + 0x0_1 o (OP1[15:0] ^ 0xffff_16))[0:0] == 0x1_1 bool_xor (0x0_1 o RAX[15:0] + 0x1_17 + 0x0_1 o (OP1[15:0] ^ 0xffff_16))[1:1] == 0x1_1 bool_xor (0x0_1 o RAX[15:0] + 0x1_17 + 0x0_1 o (OP1[15:0] ^ 0xffff_16))[2:2] == 0x1_1 bool_xor (0x0_1 o RAX[15:0] + 0x1_17 + 0x0_1 o (OP1[15:0] ^ 0xffff_16))[3:3] == 0x1_1 bool_xor (0x0_1 o RAX[15:0] + 0x1_17 + 0x0_1 o (OP1[15:0] ^ 0xffff_16))[4:4] == 0x1_1 bool_xor (0x0_1 o RAX[15:0] + 0x1_17 + 0x0_1 o (OP1[15:0] ^ 0xffff_16))[5:5] == 0x1_1 bool_xor (0x0_1 o RAX[15:0] + 0x1_17 + 0x0_1 o (OP1[15:0] ^ 0xffff_16))[6:6] == 0x1_1 bool_xor (0x0_1 o RAX[15:0] + 0x1_17 + 0x0_1 o (OP1[15:0] ^ 0xffff_16))[7:7] == 0x1_1) ; ZF := (0x0_1 o RAX[15:0] + 0x1_17 + 0x0_1 o (OP1[15:0] ^ 0xffff_16))[15:0] == 0x0_16 ; SF := (0x0_1 o RAX[15:0] + 0x1_17 + 0x0_1 o (OP1[15:0] ^ 0xffff_16))[15:15] == 0x1_1 ; OF := (RAX[15:15] == 0x1_1 bool_iff (OP1[15:15] ^ 0x1_1) == 0x1_1) bool_and !(RAX[15:15] == 0x1_1 bool_iff (0x0_1 o RAX[15:0] + 0x1_17 + 0x0_1 o (OP1[15:0] ^ 0xffff_16))[15:15] == 0x1_1))
(cmpxchg m16, r16) -> (RAX = (RAX[63:16] o OP1[15:0])[15:0] ; OP1 = (OP1[63:16] o ((0x0_1 o RAX[15:0] + 0x1_17 + 0x0_1 o (OP1[15:0] ^ 0xffff_16))[15:0] == 0x0_16 ? OP2[15:0] : OP1[15:0]))[15:0] ; CF := (((0x0_1 o RAX[15:0] + 0x1_17 + 0x0_1 o (OP1[15:0] ^ 0xffff_16))[16:16] == 0x1_1 ? 0x0_9 : 0xff_9) + ((0x0_1 o RAX[15:0] + 0x1_17 + 0x0_1 o (OP1[15:0] ^ 0xffff_16))[16:16] == 0x1_1 ? 0x0_9 : 0xff_9))[8:8] == 0x1_1 ; PF := !((0x0_1 o RAX[15:0] + 0x1_17 + 0x0_1 o (OP1[15:0] ^ 0xffff_16))[0:0] == 0x1_1 bool_xor (0x0_1 o RAX[15:0] + 0x1_17 + 0x0_1 o (OP1[15:0] ^ 0xffff_16))[1:1] == 0x1_1 bool_xor (0x0_1 o RAX[15:0] + 0x1_17 + 0x0_1 o (OP1[15:0] ^ 0xffff_16))[2:2] == 0x1_1 bool_xor (0x0_1 o RAX[15:0] + 0x1_17 + 0x0_1 o (OP1[15:0] ^ 0xffff_16))[3:3] == 0x1_1 bool_xor (0x0_1 o RAX[15:0] + 0x1_17 + 0x0_1 o (OP1[15:0] ^ 0xffff_16))[4:4] == 0x1_1 bool_xor (0x0_1 o RAX[15:0] + 0x1_17 + 0x0_1 o (OP1[15:0] ^ 0xffff_16))[5:5] == 0x1_1 bool_xor (0x0_1 o RAX[15:0] + 0x1_17 + 0x0_1 o (OP1[15:0] ^ 0xffff_16))[6:6] == 0x1_1 bool_xor (0x0_1 o RAX[15:0] + 0x1_17 + 0x0_1 o (OP1[15:0] ^ 0xffff_16))[7:7] == 0x1_1) ; ZF := (0x0_1 o RAX[15:0] + 0x1_17 + 0x0_1 o (OP1[15:0] ^ 0xffff_16))[15:0] == 0x0_16 ; SF := (0x0_1 o RAX[15:0] + 0x1_17 + 0x0_1 o (OP1[15:0] ^ 0xffff_16))[15:15] == 0x1_1 ; OF := (RAX[15:15] == 0x1_1 bool_iff (OP1[15:15] ^ 0x1_1) == 0x1_1) bool_and !(RAX[15:15] == 0x1_1 bool_iff (0x0_1 o RAX[15:0] + 0x1_17 + 0x0_1 o (OP1[15:0] ^ 0xffff_16))[15:15] == 0x1_1))
(cqo) -> (RDX = sign-extend-128(RAX)[127:64])
(cvtdq2pd xmm, m64) -> (OP1 = OP1[255:128] o (cvt_int32_to_double(OP2[63:32]) o cvt_int32_to_double(OP2[31:0])))
(cvtdq2pd xmm, xmm) -> (OP1 = OP1[255:128] o (cvt_int32_to_double(OP2[63:32]) o cvt_int32_to_double(OP2[31:0])))
(cvtdq2ps xmm, m128) -> (OP1 = OP1[255:128] o (cvt_int32_to_single(OP2[127:96]) o (cvt_int32_to_single(OP2[95:64]) o (cvt_int32_to_single(OP2[63:32]) o cvt_int32_to_single(OP2[31:0])))))
(cvtdq2ps xmm, xmm) -> (OP1 = OP1[255:128] o (cvt_int32_to_single(OP2[127:96]) o (cvt_int32_to_single(OP2[95:64]) o (cvt_int32_to_single(OP2[63:32]) o cvt_int32_to_single(OP2[31:0])))))
(cvtpd2dq xmm, m128) -> (OP1 = OP1[255:128] o (OP1[127:64] o (cvt_double_to_int32(OP2[127:64]) o cvt_double_to_int32(OP2[63:0]))))
(cvtpd2dq xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:64] o (cvt_double_to_int32(OP2[127:64]) o cvt_double_to_int32(OP2[63:0]))))
(cvtpd2ps xmm, m128) -> (OP1 = OP1[255:128] o (OP1[127:64] o (cvt_double_to_single(OP2[127:64]) o cvt_double_to_single(OP2[63:0]))))
(cvtpd2ps xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:64] o (cvt_double_to_single(OP2[127:64]) o cvt_double_to_single(OP2[63:0]))))
(cvtps2dq xmm, m128) -> (OP1 = OP1[255:128] o (cvt_single_to_int32(OP2[127:96]) o (cvt_single_to_int32(OP2[95:64]) o (cvt_single_to_int32(OP2[63:32]) o cvt_single_to_int32(OP2[31:0])))))
(cvtps2dq xmm, xmm) -> (OP1 = OP1[255:128] o (cvt_single_to_int32(OP2[127:96]) o (cvt_single_to_int32(OP2[95:64]) o (cvt_single_to_int32(OP2[63:32]) o cvt_single_to_int32(OP2[31:0])))))
(cvtps2pd xmm, m64) -> (OP1 = OP1[255:128] o (cvt_single_to_double(OP2[63:32]) o cvt_single_to_double(OP2[31:0])))
(cvtps2pd xmm, xmm) -> (OP1 = OP1[255:128] o (cvt_single_to_double(OP2[63:32]) o cvt_single_to_double(OP2[31:0])))
(cvtsd2si r32, m64) -> (OP1 = 0x0_32 o cvt_double_to_int32(OP2[63:0]))
(cvtsd2si r32, xmm) -> (OP1 = 0x0_32 o cvt_double_to_int32(OP2[63:0]))
(cvtsd2ss xmm, m64) -> (OP1 = OP1[255:128] o (OP1[127:32] o cvt_double_to_single(OP2[63:0])))
(cvtsd2ss xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:32] o cvt_double_to_single(OP2[63:0])))
(cvtsi2sd xmm, r32) -> (OP1 = OP1[255:128] o (OP1[127:64] o cvt_int32_to_double(OP2[31:0])))
(cvtsi2sd xmm, m32) -> (OP1 = OP1[255:128] o (OP1[127:64] o cvt_int32_to_double(OP2[31:0])))
(cvtsi2ss xmm, r32) -> (OP1 = OP1[255:128] o (OP1[127:32] o cvt_int32_to_single(OP2[31:0])))
(cvtsi2ss xmm, m32) -> (OP1 = OP1[255:128] o (OP1[127:32] o cvt_int32_to_single(OP2[31:0])))
(cvtss2sd xmm, m32) -> (OP1 = OP1[255:128] o (OP1[127:64] o cvt_single_to_double(OP2[31:0])))
(cvtss2sd xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:64] o cvt_single_to_double(OP2[31:0])))
(cvtss2si r32, m32) -> (OP1 = 0x0_32 o cvt_single_to_int32(OP2[31:0]))
(cvtss2si r32, xmm) -> (OP1 = 0x0_32 o cvt_single_to_int32(OP2[31:0]))
(cvttpd2dq xmm, m128) -> (OP1 = OP1[255:128] o (OP1[127:64] o (cvt_double_to_int32_truncate(OP2[127:64]) o cvt_double_to_int32_truncate(OP2[63:0]))))
(cvttpd2dq xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:64] o (cvt_double_to_int32_truncate(OP2[127:64]) o cvt_double_to_int32_truncate(OP2[63:0]))))
(cvttps2dq xmm, m128) -> (OP1 = OP1[255:128] o (cvt_single_to_int32_truncate(OP2[127:96]) o (cvt_single_to_int32_truncate(OP2[95:64]) o (cvt_single_to_int32_truncate(OP2[63:32]) o cvt_single_to_int32_truncate(OP2[31:0])))))
(cvttps2dq xmm, xmm) -> (OP1 = OP1[255:128] o (cvt_single_to_int32_truncate(OP2[127:96]) o (cvt_single_to_int32_truncate(OP2[95:64]) o (cvt_single_to_int32_truncate(OP2[63:32]) o cvt_single_to_int32_truncate(OP2[31:0])))))
(cvttsd2si r32, m64) -> (OP1 = 0x0_32 o cvt_double_to_int32_truncate(OP2[63:0]))
(cvttsd2si r32, xmm) -> (OP1 = 0x0_32 o cvt_double_to_int32_truncate(OP2[63:0]))
(cvttss2si r32, m32) -> (OP1 = 0x0_32 o cvt_single_to_int32_truncate(OP2[31:0]))
(cvttss2si r32, xmm) -> (OP1 = 0x0_32 o cvt_single_to_int32_truncate(OP2[31:0]))
(cwd) -> (RDX = RDX[63:16] o sign-extend-32(RAX[15:0])[31:16])
(cwde) -> (RAX = 0x0_32 o sign-extend-32(RAX[15:0]))
(dec rh) -> (OP1 = OP1[63:16] o (OP1[15:8] - 0x1_8) o OP1[7:0] ; PF := !((OP1[15:8] - 0x1_8)[0:0] == 0x1_1 bool_xor (OP1[15:8] - 0x1_8)[1:1] == 0x1_1 bool_xor (OP1[15:8] - 0x1_8)[2:2] == 0x1_1 bool_xor (OP1[15:8] - 0x1_8)[3:3] == 0x1_1 bool_xor (OP1[15:8] - 0x1_8)[4:4] == 0x1_1 bool_xor (OP1[15:8] - 0x1_8)[5:5] == 0x1_1 bool_xor (OP1[15:8] - 0x1_8)[6:6] == 0x1_1 bool_xor (OP1[15:8] - 0x1_8)[7:7] == 0x1_1) ; ZF := OP1[15:8] - 0x1_8 == 0x0_8 ; SF := (OP1[15:8] - 0x1_8)[7:7] == 0x1_1 ; OF := OP1[15:15] == 0x1_1 bool_and OP1[14:8] == 0x0_7)
(dec r8) -> (OP1 = OP1[63:8] o (OP1[7:0] - 0x1_8) ; PF := !((OP1[7:0] - 0x1_8)[0:0] == 0x1_1 bool_xor (OP1[7:0] - 0x1_8)[1:1] == 0x1_1 bool_xor (OP1[7:0] - 0x1_8)[2:2] == 0x1_1 bool_xor (OP1[7:0] - 0x1_8)[3:3] == 0x1_1 bool_xor (OP1[7:0] - 0x1_8)[4:4] == 0x1_1 bool_xor (OP1[7:0] - 0x1_8)[5:5] == 0x1_1 bool_xor (OP1[7:0] - 0x1_8)[6:6] == 0x1_1 bool_xor (OP1[7:0] - 0x1_8)[7:7] == 0x1_1) ; ZF := OP1[7:0] - 0x1_8 == 0x0_8 ; SF := (OP1[7:0] - 0x1_8)[7:7] == 0x1_1 ; OF := OP1[7:7] == 0x1_1 bool_and OP1[6:0] == 0x0_7)
(dec m8) -> (OP1 = (OP1[63:8] o (OP1[7:0] - 0x1_8))[7:0] ; PF := !((OP1[7:0] - 0x1_8)[0:0] == 0x1_1 bool_xor (OP1[7:0] - 0x1_8)[1:1] == 0x1_1 bool_xor (OP1[7:0] - 0x1_8)[2:2] == 0x1_1 bool_xor (OP1[7:0] - 0x1_8)[3:3] == 0x1_1 bool_xor (OP1[7:0] - 0x1_8)[4:4] == 0x1_1 bool_xor (OP1[7:0] - 0x1_8)[5:5] == 0x1_1 bool_xor (OP1[7:0] - 0x1_8)[6:6] == 0x1_1 bool_xor (OP1[7:0] - 0x1_8)[7:7] == 0x1_1) ; ZF := OP1[7:0] - 0x1_8 == 0x0_8 ; SF := (OP1[7:0] - 0x1_8)[7:7] == 0x1_1 ; OF := OP1[7:7] == 0x1_1 bool_and OP1[6:0] == 0x0_7)
(dec r32) -> (OP1 = 0x0_32 o (OP1[31:0] - 0x1_32) ; PF := !((OP1[31:0] - 0x1_32)[0:0] == 0x1_1 bool_xor (OP1[31:0] - 0x1_32)[1:1] == 0x1_1 bool_xor (OP1[31:0] - 0x1_32)[2:2] == 0x1_1 bool_xor (OP1[31:0] - 0x1_32)[3:3] == 0x1_1 bool_xor (OP1[31:0] - 0x1_32)[4:4] == 0x1_1 bool_xor (OP1[31:0] - 0x1_32)[5:5] == 0x1_1 bool_xor (OP1[31:0] - 0x1_32)[6:6] == 0x1_1 bool_xor (OP1[31:0] - 0x1_32)[7:7] == 0x1_1) ; ZF := OP1[31:0] - 0x1_32 == 0x0_32 ; SF := (OP1[31:0] - 0x1_32)[31:31] == 0x1_1 ; OF := OP1[31:31] == 0x1_1 bool_and OP1[30:0] == 0x0_31)
(dec m32) -> (OP1 = (0x0_32 o (OP1[31:0] - 0x1_32))[31:0] ; PF := !((OP1[31:0] - 0x1_32)[0:0] == 0x1_1 bool_xor (OP1[31:0] - 0x1_32)[1:1] == 0x1_1 bool_xor (OP1[31:0] - 0x1_32)[2:2] == 0x1_1 bool_xor (OP1[31:0] - 0x1_32)[3:3] == 0x1_1 bool_xor (OP1[31:0] - 0x1_32)[4:4] == 0x1_1 bool_xor (OP1[31:0] - 0x1_32)[5:5] == 0x1_1 bool_xor (OP1[31:0] - 0x1_32)[6:6] == 0x1_1 bool_xor (OP1[31:0] - 0x1_32)[7:7] == 0x1_1) ; ZF := OP1[31:0] - 0x1_32 == 0x0_32 ; SF := (OP1[31:0] - 0x1_32)[31:31] == 0x1_1 ; OF := OP1[31:31] == 0x1_1 bool_and OP1[30:0] == 0x0_31)
(dec r64) -> (OP1 = OP1 - 0x1_64 ; PF := !((OP1 - 0x1_64)[0:0] == 0x1_1 bool_xor (OP1 - 0x1_64)[1:1] == 0x1_1 bool_xor (OP1 - 0x1_64)[2:2] == 0x1_1 bool_xor (OP1 - 0x1_64)[3:3] == 0x1_1 bool_xor (OP1 - 0x1_64)[4:4] == 0x1_1 bool_xor (OP1 - 0x1_64)[5:5] == 0x1_1 bool_xor (OP1 - 0x1_64)[6:6] == 0x1_1 bool_xor (OP1 - 0x1_64)[7:7] == 0x1_1) ; ZF := OP1 - 0x1_64 == 0x0_64 ; SF := (OP1 - 0x1_64)[63:63] == 0x1_1 ; OF := OP1[63:63] == 0x1_1 bool_and OP1[62:0] == 0x0_63)
(dec m64) -> (OP1 = (OP1 - 0x1_64)[63:0] ; PF := !((OP1 - 0x1_64)[0:0] == 0x1_1 bool_xor (OP1 - 0x1_64)[1:1] == 0x1_1 bool_xor (OP1 - 0x1_64)[2:2] == 0x1_1 bool_xor (OP1 - 0x1_64)[3:3] == 0x1_1 bool_xor (OP1 - 0x1_64)[4:4] == 0x1_1 bool_xor (OP1 - 0x1_64)[5:5] == 0x1_1 bool_xor (OP1 - 0x1_64)[6:6] == 0x1_1 bool_xor (OP1 - 0x1_64)[7:7] == 0x1_1) ; ZF := OP1 - 0x1_64 == 0x0_64 ; SF := (OP1 - 0x1_64)[63:63] == 0x1_1 ; OF := OP1[63:63] == 0x1_1 bool_and OP1[62:0] == 0x0_63)
(dec r16) -> (OP1 = OP1[63:16] o (OP1[15:0] - 0x1_16) ; PF := !((OP1[15:0] - 0x1_16)[0:0] == 0x1_1 bool_xor (OP1[15:0] - 0x1_16)[1:1] == 0x1_1 bool_xor (OP1[15:0] - 0x1_16)[2:2] == 0x1_1 bool_xor (OP1[15:0] - 0x1_16)[3:3] == 0x1_1 bool_xor (OP1[15:0] - 0x1_16)[4:4] == 0x1_1 bool_xor (OP1[15:0] - 0x1_16)[5:5] == 0x1_1 bool_xor (OP1[15:0] - 0x1_16)[6:6] == 0x1_1 bool_xor (OP1[15:0] - 0x1_16)[7:7] == 0x1_1) ; ZF := OP1[15:0] - 0x1_16 == 0x0_16 ; SF := (OP1[15:0] - 0x1_16)[15:15] == 0x1_1 ; OF := OP1[15:15] == 0x1_1 bool_and OP1[14:0] == 0x0_15)
(dec m16) -> (OP1 = (OP1[63:16] o (OP1[15:0] - 0x1_16))[15:0] ; PF := !((OP1[15:0] - 0x1_16)[0:0] == 0x1_1 bool_xor (OP1[15:0] - 0x1_16)[1:1] == 0x1_1 bool_xor (OP1[15:0] - 0x1_16)[2:2] == 0x1_1 bool_xor (OP1[15:0] - 0x1_16)[3:3] == 0x1_1 bool_xor (OP1[15:0] - 0x1_16)[4:4] == 0x1_1 bool_xor (OP1[15:0] - 0x1_16)[5:5] == 0x1_1 bool_xor (OP1[15:0] - 0x1_16)[6:6] == 0x1_1 bool_xor (OP1[15:0] - 0x1_16)[7:7] == 0x1_1) ; ZF := OP1[15:0] - 0x1_16 == 0x0_16 ; SF := (OP1[15:0] - 0x1_16)[15:15] == 0x1_1 ; OF := OP1[15:15] == 0x1_1 bool_and OP1[14:0] == 0x0_15)
(divpd xmm, m128) -> (OP1 = OP1[255:128] o (div_double(OP1[127:64], OP2[127:64]) o div_double(OP1[63:0], OP2[63:0])))
(divpd xmm, xmm) -> (OP1 = OP1[255:128] o (div_double(OP1[127:64], OP2[127:64]) o div_double(OP1[63:0], OP2[63:0])))
(divps xmm, m128) -> (OP1 = OP1[255:128] o (div_single(OP1[127:96], OP2[127:96]) o (div_single(OP1[95:64], OP2[95:64]) o (div_single(OP1[63:32], OP2[63:32]) o div_single(OP1[31:0], OP2[31:0])))))
(divps xmm, xmm) -> (OP1 = OP1[255:128] o (div_single(OP1[127:96], OP2[127:96]) o (div_single(OP1[95:64], OP2[95:64]) o (div_single(OP1[63:32], OP2[63:32]) o div_single(OP1[31:0], OP2[31:0])))))
(divsd xmm, m64) -> (OP1 = OP1[255:128] o (OP1[127:64] o div_double(OP1[63:0], OP2[63:0])))
(divsd xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:64] o div_double(OP1[63:0], OP2[63:0])))
(divss xmm, m32) -> (OP1 = OP1[255:128] o (OP1[127:32] o div_single(OP1[31:0], OP2[31:0])))
(divss xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:32] o div_single(OP1[31:0], OP2[31:0])))
(haddpd xmm, m128) -> (OP1 = OP1[255:128] o (add_double(OP2[63:0], OP2[127:64]) o add_double(OP1[63:0], OP1[127:64])))
(haddpd xmm, xmm) -> (OP1 = OP1[255:128] o (add_double(OP2[63:0], OP2[127:64]) o add_double(OP1[63:0], OP1[127:64])))
(haddps xmm, m128) -> (OP1 = OP1[255:128] o (add_single(OP2[95:64], OP2[127:96]) o add_single(OP2[31:0], OP2[63:32]) o add_single(OP1[95:64], OP1[127:96]) o add_single(OP1[31:0], OP1[63:32])))
(haddps xmm, xmm) -> (OP1 = OP1[255:128] o (add_single(OP2[95:64], OP2[127:96]) o add_single(OP2[31:0], OP2[63:32]) o add_single(OP1[95:64], OP1[127:96]) o add_single(OP1[31:0], OP1[63:32])))
(hsubpd xmm, m128) -> (OP1 = OP1[255:128] o (sub_double(OP2[63:0], OP2[127:64]) o sub_double(OP1[63:0], OP1[127:64])))
(hsubpd xmm, xmm) -> (OP1 = OP1[255:128] o (sub_double(OP2[63:0], OP2[127:64]) o sub_double(OP1[63:0], OP1[127:64])))
(hsubps xmm, m128) -> (OP1 = OP1[255:128] o (sub_single(OP2[95:64], OP2[127:96]) o sub_single(OP2[31:0], OP2[63:32]) o sub_single(OP1[95:64], OP1[127:96]) o sub_single(OP1[31:0], OP1[63:32])))
(hsubps xmm, xmm) -> (OP1 = OP1[255:128] o (sub_single(OP2[95:64], OP2[127:96]) o sub_single(OP2[31:0], OP2[63:32]) o sub_single(OP1[95:64], OP1[127:96]) o sub_single(OP1[31:0], OP1[63:32])))
(inc rh) -> (OP1 = OP1[63:16] o (OP1[15:8] + 0x1_8) o OP1[7:0] ; PF := !((OP1[15:8] + 0x1_8)[0:0] == 0x1_1 bool_xor (OP1[15:8] + 0x1_8)[1:1] == 0x1_1 bool_xor (OP1[15:8] + 0x1_8)[2:2] == 0x1_1 bool_xor (OP1[15:8] + 0x1_8)[3:3] == 0x1_1 bool_xor (OP1[15:8] + 0x1_8)[4:4] == 0x1_1 bool_xor (OP1[15:8] + 0x1_8)[5:5] == 0x1_1 bool_xor (OP1[15:8] + 0x1_8)[6:6] == 0x1_1 bool_xor (OP1[15:8] + 0x1_8)[7:7] == 0x1_1) ; ZF := OP1[15:8] + 0x1_8 == 0x0_8 ; SF := (OP1[15:8] + 0x1_8)[7:7] == 0x1_1 ; OF := !(OP1[15:15] == 0x1_1) bool_and OP1[14:8] == 0xffffffffffffffff_7)
(inc r8) -> (OP1 = OP1[63:8] o (OP1[7:0] + 0x1_8) ; PF := !((OP1[7:0] + 0x1_8)[0:0] == 0x1_1 bool_xor (OP1[7:0] + 0x1_8)[1:1] == 0x1_1 bool_xor (OP1[7:0] + 0x1_8)[2:2] == 0x1_1 bool_xor (OP1[7:0] + 0x1_8)[3:3] == 0x1_1 bool_xor (OP1[7:0] + 0x1_8)[4:4] == 0x1_1 bool_xor (OP1[7:0] + 0x1_8)[5:5] == 0x1_1 bool_xor (OP1[7:0] + 0x1_8)[6:6] == 0x1_1 bool_xor (OP1[7:0] + 0x1_8)[7:7] == 0x1_1) ; ZF := OP1[7:0] + 0x1_8 == 0x0_8 ; SF := (OP1[7:0] + 0x1_8)[7:7] == 0x1_1 ; OF := !(OP1[7:7] == 0x1_1) bool_and OP1[6:0] == 0xffffffffffffffff_7)
(inc m8) -> (OP1 = (OP1[63:8] o (OP1[7:0] + 0x1_8))[7:0] ; PF := !((OP1[7:0] + 0x1_8)[0:0] == 0x1_1 bool_xor (OP1[7:0] + 0x1_8)[1:1] == 0x1_1 bool_xor (OP1[7:0] + 0x1_8)[2:2] == 0x1_1 bool_xor (OP1[7:0] + 0x1_8)[3:3] == 0x1_1 bool_xor (OP1[7:0] + 0x1_8)[4:4] == 0x1_1 bool_xor (OP1[7:0] + 0x1_8)[5:5] == 0x1_1 bool_xor (OP1[7:0] + 0x1_8)[6:6] == 0x1_1 bool_xor (OP1[7:0] + 0x1_8)[7:7] == 0x1_1) ; ZF := OP1[7:0] + 0x1_8 == 0x0_8 ; SF := (OP1[7:0] + 0x1_8)[7:7] == 0x1_1 ; OF := !(OP1[7:7] == 0x1_1) bool_and OP1[6:0] == 0xffffffffffffffff_7)
(inc r32) -> (OP1 = 0x0_32 o (OP1[31:0] + 0x1_32) ; PF := !((OP1[31:0] + 0x1_32)[0:0] == 0x1_1 bool_xor (OP1[31:0] + 0x1_32)[1:1] == 0x1_1 bool_xor (OP1[31:0] + 0x1_32)[2:2] == 0x1_1 bool_xor (OP1[31:0] + 0x1_32)[3:3] == 0x1_1 bool_xor (OP1[31:0] + 0x1_32)[4:4] == 0x1_1 bool_xor (OP1[31:0] + 0x1_32)[5:5] == 0x1_1 bool_xor (OP1[31:0] + 0x1_32)[6:6] == 0x1_1 bool_xor (OP1[31:0] + 0x1_32)[7:7] == 0x1_1) ; ZF := OP1[31:0] + 0x1_32 == 0x0_32 ; SF := (OP1[31:0] + 0x1_32)[31:31] == 0x1_1 ; OF := !(OP1[31:31] == 0x1_1) bool_and OP1[30:0] == 0xffffffffffffffff_31)
(inc m32) -> (OP1 = (0x0_32 o (OP1[31:0] + 0x1_32))[31:0] ; PF := !((OP1[31:0] + 0x1_32)[0:0] == 0x1_1 bool_xor (OP1[31:0] + 0x1_32)[1:1] == 0x1_1 bool_xor (OP1[31:0] + 0x1_32)[2:2] == 0x1_1 bool_xor (OP1[31:0] + 0x1_32)[3:3] == 0x1_1 bool_xor (OP1[31:0] + 0x1_32)[4:4] == 0x1_1 bool_xor (OP1[31:0] + 0x1_32)[5:5] == 0x1_1 bool_xor (OP1[31:0] + 0x1_32)[6:6] == 0x1_1 bool_xor (OP1[31:0] + 0x1_32)[7:7] == 0x1_1) ; ZF := OP1[31:0] + 0x1_32 == 0x0_32 ; SF := (OP1[31:0] + 0x1_32)[31:31] == 0x1_1 ; OF := !(OP1[31:31] == 0x1_1) bool_and OP1[30:0] == 0xffffffffffffffff_31)
(inc r64) -> (OP1 = OP1 + 0x1_64 ; PF := !((OP1 + 0x1_64)[0:0] == 0x1_1 bool_xor (OP1 + 0x1_64)[1:1] == 0x1_1 bool_xor (OP1 + 0x1_64)[2:2] == 0x1_1 bool_xor (OP1 + 0x1_64)[3:3] == 0x1_1 bool_xor (OP1 + 0x1_64)[4:4] == 0x1_1 bool_xor (OP1 + 0x1_64)[5:5] == 0x1_1 bool_xor (OP1 + 0x1_64)[6:6] == 0x1_1 bool_xor (OP1 + 0x1_64)[7:7] == 0x1_1) ; ZF := OP1 + 0x1_64 == 0x0_64 ; SF := (OP1 + 0x1_64)[63:63] == 0x1_1 ; OF := !(OP1[63:63] == 0x1_1) bool_and OP1[62:0] == 0xffffffffffffffff_63)
(inc m64) -> (OP1 = (OP1 + 0x1_64)[63:0] ; PF := !((OP1 + 0x1_64)[0:0] == 0x1_1 bool_xor (OP1 + 0x1_64)[1:1] == 0x1_1 bool_xor (OP1 + 0x1_64)[2:2] == 0x1_1 bool_xor (OP1 + 0x1_64)[3:3] == 0x1_1 bool_xor (OP1 + 0x1_64)[4:4] == 0x1_1 bool_xor (OP1 + 0x1_64)[5:5] == 0x1_1 bool_xor (OP1 + 0x1_64)[6:6] == 0x1_1 bool_xor (OP1 + 0x1_64)[7:7] == 0x1_1) ; ZF := OP1 + 0x1_64 == 0x0_64 ; SF := (OP1 + 0x1_64)[63:63] == 0x1_1 ; OF := !(OP1[63:63] == 0x1_1) bool_and OP1[62:0] == 0xffffffffffffffff_63)
(inc r16) -> (OP1 = OP1[63:16] o (OP1[15:0] + 0x1_16) ; PF := !((OP1[15:0] + 0x1_16)[0:0] == 0x1_1 bool_xor (OP1[15:0] + 0x1_16)[1:1] == 0x1_1 bool_xor (OP1[15:0] + 0x1_16)[2:2] == 0x1_1 bool_xor (OP1[15:0] + 0x1_16)[3:3] == 0x1_1 bool_xor (OP1[15:0] + 0x1_16)[4:4] == 0x1_1 bool_xor (OP1[15:0] + 0x1_16)[5:5] == 0x1_1 bool_xor (OP1[15:0] + 0x1_16)[6:6] == 0x1_1 bool_xor (OP1[15:0] + 0x1_16)[7:7] == 0x1_1) ; ZF := OP1[15:0] + 0x1_16 == 0x0_16 ; SF := (OP1[15:0] + 0x1_16)[15:15] == 0x1_1 ; OF := !(OP1[15:15] == 0x1_1) bool_and OP1[14:0] == 0xffffffffffffffff_15)
(inc m16) -> (OP1 = (OP1[63:16] o (OP1[15:0] + 0x1_16))[15:0] ; PF := !((OP1[15:0] + 0x1_16)[0:0] == 0x1_1 bool_xor (OP1[15:0] + 0x1_16)[1:1] == 0x1_1 bool_xor (OP1[15:0] + 0x1_16)[2:2] == 0x1_1 bool_xor (OP1[15:0] + 0x1_16)[3:3] == 0x1_1 bool_xor (OP1[15:0] + 0x1_16)[4:4] == 0x1_1 bool_xor (OP1[15:0] + 0x1_16)[5:5] == 0x1_1 bool_xor (OP1[15:0] + 0x1_16)[6:6] == 0x1_1 bool_xor (OP1[15:0] + 0x1_16)[7:7] == 0x1_1) ; ZF := OP1[15:0] + 0x1_16 == 0x0_16 ; SF := (OP1[15:0] + 0x1_16)[15:15] == 0x1_1 ; OF := !(OP1[15:15] == 0x1_1) bool_and OP1[14:0] == 0xffffffffffffffff_15)
(maxpd xmm, m128) -> (OP1 = OP1[255:128] o ((maxcmp_double(OP1[127:64], OP2[127:64]) == 0x1_1 ? OP1[127:64] : OP2[127:64]) o (maxcmp_double(OP1[63:0], OP2[63:0]) == 0x1_1 ? OP1[63:0] : OP2[63:0])))
(maxpd xmm, xmm) -> (OP1 = OP1[255:128] o ((maxcmp_double(OP1[127:64], OP2[127:64]) == 0x1_1 ? OP1[127:64] : OP2[127:64]) o (maxcmp_double(OP1[63:0], OP2[63:0]) == 0x1_1 ? OP1[63:0] : OP2[63:0])))
(maxps xmm, m128) -> (OP1 = OP1[255:128] o ((maxcmp_single(OP1[127:96], OP2[127:96]) == 0x1_1 ? OP1[127:96] : OP2[127:96]) o ((maxcmp_single(OP1[95:64], OP2[95:64]) == 0x1_1 ? OP1[95:64] : OP2[95:64]) o ((maxcmp_single(OP1[63:32], OP2[63:32]) == 0x1_1 ? OP1[63:32] : OP2[63:32]) o (maxcmp_single(OP1[31:0], OP2[31:0]) == 0x1_1 ? OP1[31:0] : OP2[31:0])))))
(maxps xmm, xmm) -> (OP1 = OP1[255:128] o ((maxcmp_single(OP1[127:96], OP2[127:96]) == 0x1_1 ? OP1[127:96] : OP2[127:96]) o ((maxcmp_single(OP1[95:64], OP2[95:64]) == 0x1_1 ? OP1[95:64] : OP2[95:64]) o ((maxcmp_single(OP1[63:32], OP2[63:32]) == 0x1_1 ? OP1[63:32] : OP2[63:32]) o (maxcmp_single(OP1[31:0], OP2[31:0]) == 0x1_1 ? OP1[31:0] : OP2[31:0])))))
(maxsd xmm, m64) -> (OP1 = OP1[255:128] o (OP1[127:64] o (maxcmp_double(OP1[63:0], OP2[63:0]) == 0x1_1 ? OP1[63:0] : OP2[63:0])))
(maxsd xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:64] o (maxcmp_double(OP1[63:0], OP2[63:0]) == 0x1_1 ? OP1[63:0] : OP2[63:0])))
(maxss xmm, m32) -> (OP1 = OP1[255:128] o (OP1[127:32] o (maxcmp_single(OP1[31:0], OP2[31:0]) == 0x1_1 ? OP1[31:0] : OP2[31:0])))
(maxss xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:32] o (maxcmp_single(OP1[31:0], OP2[31:0]) == 0x1_1 ? OP1[31:0] : OP2[31:0])))
(minpd xmm, m128) -> (OP1 = OP1[255:128] o ((mincmp_double(OP1[127:64], OP2[127:64]) == 0x1_1 ? OP1[127:64] : OP2[127:64]) o (mincmp_double(OP1[63:0], OP2[63:0]) == 0x1_1 ? OP1[63:0] : OP2[63:0])))
(minpd xmm, xmm) -> (OP1 = OP1[255:128] o ((mincmp_double(OP1[127:64], OP2[127:64]) == 0x1_1 ? OP1[127:64] : OP2[127:64]) o (mincmp_double(OP1[63:0], OP2[63:0]) == 0x1_1 ? OP1[63:0] : OP2[63:0])))
(minps xmm, m128) -> (OP1 = OP1[255:128] o ((mincmp_single(OP1[127:96], OP2[127:96]) == 0x1_1 ? OP1[127:96] : OP2[127:96]) o ((mincmp_single(OP1[95:64], OP2[95:64]) == 0x1_1 ? OP1[95:64] : OP2[95:64]) o ((mincmp_single(OP1[63:32], OP2[63:32]) == 0x1_1 ? OP1[63:32] : OP2[63:32]) o (mincmp_single(OP1[31:0], OP2[31:0]) == 0x1_1 ? OP1[31:0] : OP2[31:0])))))
(minps xmm, xmm) -> (OP1 = OP1[255:128] o ((mincmp_single(OP1[127:96], OP2[127:96]) == 0x1_1 ? OP1[127:96] : OP2[127:96]) o ((mincmp_single(OP1[95:64], OP2[95:64]) == 0x1_1 ? OP1[95:64] : OP2[95:64]) o ((mincmp_single(OP1[63:32], OP2[63:32]) == 0x1_1 ? OP1[63:32] : OP2[63:32]) o (mincmp_single(OP1[31:0], OP2[31:0]) == 0x1_1 ? OP1[31:0] : OP2[31:0])))))
(minsd xmm, m64) -> (OP1 = OP1[255:128] o (OP1[127:64] o (mincmp_double(OP1[63:0], OP2[63:0]) == 0x1_1 ? OP1[63:0] : OP2[63:0])))
(minsd xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:64] o (mincmp_double(OP1[63:0], OP2[63:0]) == 0x1_1 ? OP1[63:0] : OP2[63:0])))
(minss xmm, m32) -> (OP1 = OP1[255:128] o (OP1[127:32] o (mincmp_single(OP1[31:0], OP2[31:0]) == 0x1_1 ? OP1[31:0] : OP2[31:0])))
(minss xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:32] o (mincmp_single(OP1[31:0], OP2[31:0]) == 0x1_1 ? OP1[31:0] : OP2[31:0])))
(mov rh, imm8) -> (OP1 = OP1[63:16] o OP2[7:0] o OP1[7:0])
(mov rh, rh) -> (OP1 = OP1[63:16] o OP2[15:8] o OP1[7:0])
(mov rh, r8) -> (OP1 = OP1[63:16] o OP2[7:0] o OP1[7:0])
(mov rh, m8) -> (OP1 = OP1[63:16] o OP2[7:0] o OP1[7:0])
(mov r8, imm8) -> (OP1 = OP1[63:8] o OP2[7:0])
(mov r8, rh) -> (OP1 = OP1[63:8] o OP2[15:8])
(mov r8, r8) -> (OP1 = OP1[63:8] o OP2[7:0])
(mov r8, m8) -> (OP1 = OP1[63:8] o OP2[7:0])
(mov m8, imm8) -> (OP1 = (OP1[63:8] o OP2[7:0])[7:0])
(mov m8, rh) -> (OP1 = (OP1[63:8] o OP2[15:8])[7:0])
(mov m8, r8) -> (OP1 = (OP1[63:8] o OP2[7:0])[7:0])
(mov r64, imm32) -> (OP1 = (sign-extend-64(OP2)))
(mov r64, imm64) -> (OP1 = OP2)
(mov r64, r64) -> (OP1 = OP2)
(mov r64, m64) -> (OP1 = OP2)
(mov m64, imm32) -> (OP1 = (sign-extend-64(OP2)))
(mov m64, r64) -> (OP1 = (OP2)[63:0])
(mov r16, imm16) -> (OP1 = OP1[63:16] o OP2[15:0])
(mov r16, r16) -> (OP1 = OP1[63:16] o OP2[15:0])
(mov r16, m16) -> (OP1 = OP1[63:16] o OP2[15:0])
(mov m16, imm16) -> (OP1 = (OP1[63:16] o OP2[15:0])[15:0])
(mov m16, r16) -> (OP1 = (OP1[63:16] o OP2[15:0])[15:0])
(mov r32, imm32) -> (OP1 = 0x0_32 o OP2[31:0])
(mov r32, r32) -> (OP1 = 0x0_32 o OP2[31:0])
(mov r32, m32) -> (OP1 = 0x0_32 o OP2[31:0])
(mov m32, imm32) -> (OP1 = (0x0_32 o OP2[31:0])[31:0])
(mov m32, r32) -> (OP1 = (0x0_32 o OP2[31:0])[31:0])
(movapd m128, xmm) -> (OP1 = (OP1[255:128] o OP2[127:0])[127:0])
(movapd xmm, m128) -> (OP1 = OP1[255:128] o OP2[127:0])
(movapd xmm, xmm) -> (OP1 = OP1[255:128] o OP2[127:0])
(movaps m128, xmm) -> (OP1 = (OP1[255:128] o OP2[127:0])[127:0])
(movaps xmm, m128) -> (OP1 = OP1[255:128] o OP2[127:0])
(movaps xmm, xmm) -> (OP1 = OP1[255:128] o OP2[127:0])
(movd r32, xmm) -> (OP1 = 0x0_32 o OP2[31:0])
(movd m32, xmm) -> (OP1 = (0x0_32 o OP2[31:0])[31:0])
(movd xmm, r32) -> (OP1 = OP1[255:128] o (0x0_96 o OP2[31:0]))
(movd xmm, m32) -> (OP1 = OP1[255:128] o (0x0_96 o OP2[31:0]))
(movddup xmm, m64) -> (OP1 = OP1[255:128] o (OP2[63:0] o OP2[63:0]))
(movddup xmm, xmm) -> (OP1 = OP1[255:128] o (OP2[63:0] o OP2[63:0]))
(movdqa m128, xmm) -> (OP1 = (OP1[255:128] o OP2[127:0])[127:0])
(movdqa xmm, m128) -> (OP1 = OP1[255:128] o OP2[127:0])
(movdqa xmm, xmm) -> (OP1 = OP1[255:128] o OP2[127:0])
(movdqu m128, xmm) -> (OP1 = (OP1[255:128] o OP2[127:0])[127:0])
(movdqu xmm, m128) -> (OP1 = OP1[255:128] o OP2[127:0])
(movdqu xmm, xmm) -> (OP1 = OP1[255:128] o OP2[127:0])
(movhlps xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:64] o OP2[127:64]))
(movlhps xmm, xmm) -> (OP1 = OP1[255:128] o (OP2[63:0] o OP1[63:0]))
(movmskpd r32, xmm) -> (OP1 = sign-extend-64((((((0x0_1 o OP2[63:32] + 0x0_1 o OP2[63:32])[32:32] == 0x1_1 ? 0x0_1 o OP2[63:32] + 0x1_33 : 0x0_1 o OP2[63:32]) + 0x0_1 o OP2[63:32])[32:32] == 0x1_1 ? (((0x0_1 o OP2[127:96] + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x0_1 o OP2[127:96] + 0x1_33 : 0x0_1 o OP2[127:96]) + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o OP2[127:96] + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x0_1 o OP2[127:96] + 0x1_33 : 0x0_1 o OP2[127:96]) + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o OP2[127:96] + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x0_1 o OP2[127:96] + 0x1_33 : 0x0_1 o OP2[127:96]) + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[31:0]))
(movmskpd r64, xmm) -> (OP1 = 0x0_32 o (((((0x0_1 o OP2[63:32] + 0x0_1 o OP2[63:32])[32:32] == 0x1_1 ? 0x0_1 o OP2[63:32] + 0x1_33 : 0x0_1 o OP2[63:32]) + 0x0_1 o OP2[63:32])[32:32] == 0x1_1 ? (((0x0_1 o OP2[127:96] + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x0_1 o OP2[127:96] + 0x1_33 : 0x0_1 o OP2[127:96]) + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o OP2[127:96] + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x0_1 o OP2[127:96] + 0x1_33 : 0x0_1 o OP2[127:96]) + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o OP2[127:96] + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x0_1 o OP2[127:96] + 0x1_33 : 0x0_1 o OP2[127:96]) + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[31:0])
(movmskps r32, xmm) -> (OP1 = 0x0_48 o (0x0_1 o ((((((0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[95:64])[63:32]) + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[15:8] o (0x0_1 o (0x0_1 o (((((0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[95:64])[63:32]) + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[7:0] + 0x0_1 o (((((0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[95:64])[63:32]) + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[7:0])[7:0] + 0x0_1 o (((((0x0_1 o sign-extend-64(OP2[31:0])[63:32] + 0x0_1 o sign-extend-64(OP2[31:0])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[31:0])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[31:0])[63:32]) + 0x0_1 o sign-extend-64(OP2[31:0])[63:32])[32:32] == 0x1_1 ? (((0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[63:32])[63:32]) + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[63:32])[63:32]) + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[63:32])[63:32]) + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[7:0])[7:0]) + 0x0_1 o ((((((0x0_1 o sign-extend-64(OP2[31:0])[63:32] + 0x0_1 o sign-extend-64(OP2[31:0])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[31:0])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[31:0])[63:32]) + 0x0_1 o sign-extend-64(OP2[31:0])[63:32])[32:32] == 0x1_1 ? (((0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[63:32])[63:32]) + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[63:32])[63:32]) + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[63:32])[63:32]) + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[15:8] o (0x0_1 o (((((0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[95:64])[63:32]) + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[7:0] + 0x0_1 o (((((0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[95:64])[63:32]) + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[7:0])[7:0]))[15:0])
(movmskps r64, xmm) -> (OP1 = 0x0_48 o (0x0_1 o ((((((0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[95:64])[63:32]) + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[15:8] o (0x0_1 o (0x0_1 o (((((0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[95:64])[63:32]) + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[7:0] + 0x0_1 o (((((0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[95:64])[63:32]) + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[7:0])[7:0] + 0x0_1 o (((((0x0_1 o sign-extend-64(OP2[31:0])[63:32] + 0x0_1 o sign-extend-64(OP2[31:0])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[31:0])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[31:0])[63:32]) + 0x0_1 o sign-extend-64(OP2[31:0])[63:32])[32:32] == 0x1_1 ? (((0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[63:32])[63:32]) + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[63:32])[63:32]) + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[63:32])[63:32]) + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[7:0])[7:0]) + 0x0_1 o ((((((0x0_1 o sign-extend-64(OP2[31:0])[63:32] + 0x0_1 o sign-extend-64(OP2[31:0])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[31:0])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[31:0])[63:32]) + 0x0_1 o sign-extend-64(OP2[31:0])[63:32])[32:32] == 0x1_1 ? (((0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[63:32])[63:32]) + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[63:32])[63:32]) + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[63:32])[63:32]) + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[15:8] o (0x0_1 o (((((0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[95:64])[63:32]) + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[7:0] + 0x0_1 o (((((0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[95:64])[63:32]) + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[7:0])[7:0]))[15:0])
(movq r64, xmm) -> (OP1 = OP2[63:0])
(movq m64, xmm) -> (OP1 = (OP2[63:0])[63:0])
(movq xmm, r64) -> (OP1 = OP1[255:128] o (0x0_64 o OP2))
(movq xmm, m64) -> (OP1 = OP1[255:128] o (0x0_64 o OP2))
(movq xmm, xmm) -> (OP1 = OP1[255:128] o (0x0_64 o OP2[63:0]))
(movsd m64, xmm) -> (OP1 = (OP1[255:128] o (OP1[127:64] o OP2[63:0]))[63:0])
(movsd xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:64] o OP2[63:0]))
(movshdup xmm, m128) -> (OP1 = OP1[255:128] o (OP2[127:96] o OP2[127:96] o OP2[63:32] o OP2[63:32]))
(movshdup xmm, xmm) -> (OP1 = OP1[255:128] o (OP2[127:96] o OP2[127:96] o OP2[63:32] o OP2[63:32]))
(movsldup xmm, m128) -> (OP1 = OP1[255:128] o (OP2[95:64] o OP2[95:64] o (OP2[31:0] o OP2[31:0])))
(movsldup xmm, xmm) -> (OP1 = OP1[255:128] o (OP2[95:64] o OP2[95:64] o (OP2[31:0] o OP2[31:0])))
(movss m32, xmm) -> (OP1 = (OP1[255:128] o (OP1[127:32] o OP2[31:0]))[31:0])
(movss xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:32] o OP2[31:0]))
(movsx r32, rh) -> (OP1 = 0x0_32 o sign-extend-32(OP2[15:8]))
(movsx r32, r8) -> (OP1 = 0x0_32 o sign-extend-32(OP2[7:0]))
(movsx r32, m8) -> (OP1 = 0x0_32 o sign-extend-32(OP2[7:0]))
(movsx r64, r8) -> (OP1 = sign-extend-64(OP2[7:0]))
(movsx r64, m8) -> (OP1 = sign-extend-64(OP2[7:0]))
(movsx r16, rh) -> (OP1 = OP1[63:16] o sign-extend-16(OP2[15:8]))
(movsx r16, r8) -> (OP1 = OP1[63:16] o sign-extend-16(OP2[7:0]))
(movsx r16, m8) -> (OP1 = OP1[63:16] o sign-extend-16(OP2[7:0]))
(movsx r32, r16) -> (OP1 = 0x0_32 o sign-extend-32(OP2[15:0]))
(movsx r32, m16) -> (OP1 = 0x0_32 o sign-extend-32(OP2[15:0]))
(movsx r64, r16) -> (OP1 = sign-extend-64(OP2[15:0]))
(movsx r64, m16) -> (OP1 = sign-extend-64(OP2[15:0]))
(movsxd r64, r32) -> (OP1 = sign-extend-64(OP2[31:0]))
(movsxd r64, m32) -> (OP1 = sign-extend-64(OP2[31:0]))
(movupd m128, xmm) -> (OP1 = (OP1[255:128] o OP2[127:0])[127:0])
(movupd xmm, m128) -> (OP1 = OP1[255:128] o OP2[127:0])
(movupd xmm, xmm) -> (OP1 = OP1[255:128] o OP2[127:0])
(movups m128, xmm) -> (OP1 = (OP1[255:128] o OP2[127:0])[127:0])
(movups xmm, m128) -> (OP1 = OP1[255:128] o OP2[127:0])
(movups xmm, xmm) -> (OP1 = OP1[255:128] o OP2[127:0])
(movzx r32, rh) -> (OP1 = 0x0_32 o (0x0_24 o OP2[15:8]))
(movzx r32, r8) -> (OP1 = 0x0_32 o (0x0_24 o OP2[7:0]))
(movzx r32, m8) -> (OP1 = 0x0_32 o (0x0_24 o OP2[7:0]))
(movzx r64, r8) -> (OP1 = 0x0_56 o OP2[7:0])
(movzx r64, m8) -> (OP1 = 0x0_56 o OP2[7:0])
(movzx r16, rh) -> (OP1 = OP1[63:16] o (0x0_8 o OP2[15:8]))
(movzx r16, r8) -> (OP1 = OP1[63:16] o (0x0_8 o OP2[7:0]))
(movzx r16, m8) -> (OP1 = OP1[63:16] o (0x0_8 o OP2[7:0]))
(movzx r32, r16) -> (OP1 = 0x0_32 o (0x0_16 o OP2[15:0]))
(movzx r32, m16) -> (OP1 = 0x0_32 o (0x0_16 o OP2[15:0]))
(movzx r64, r16) -> (OP1 = 0x0_48 o OP2[15:0])
(movzx r64, m16) -> (OP1 = 0x0_48 o OP2[15:0])
(mulpd xmm, m128) -> (OP1 = OP1[255:128] o (mul_double(OP1[127:64], OP2[127:64]) o mul_double(OP1[63:0], OP2[63:0])))
(mulpd xmm, xmm) -> (OP1 = OP1[255:128] o (mul_double(OP1[127:64], OP2[127:64]) o mul_double(OP1[63:0], OP2[63:0])))
(mulps xmm, m128) -> (OP1 = OP1[255:128] o (mul_single(OP1[127:96], OP2[127:96]) o (mul_single(OP1[95:64], OP2[95:64]) o (mul_single(OP1[63:32], OP2[63:32]) o mul_single(OP1[31:0], OP2[31:0])))))
(mulps xmm, xmm) -> (OP1 = OP1[255:128] o (mul_single(OP1[127:96], OP2[127:96]) o (mul_single(OP1[95:64], OP2[95:64]) o (mul_single(OP1[63:32], OP2[63:32]) o mul_single(OP1[31:0], OP2[31:0])))))
(mulsd xmm, m64) -> (OP1 = OP1[255:128] o (OP1[127:64] o mul_double(OP1[63:0], OP2[63:0])))
(mulsd xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:64] o mul_double(OP1[63:0], OP2[63:0])))
(mulss xmm, m32) -> (OP1 = OP1[255:128] o (OP1[127:32] o mul_single(OP1[31:0], OP2[31:0])))
(mulss xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:32] o mul_single(OP1[31:0], OP2[31:0])))
(neg rh) -> (OP1 = OP1[63:16] o ~OP1[15:8] o OP1[7:0] ; CF := !(OP1[15:8] == 0x0_8) ; PF := !((~OP1[15:8])[0:0] == 0x1_1 bool_xor (~OP1[15:8])[1:1] == 0x1_1 bool_xor (~OP1[15:8])[2:2] == 0x1_1 bool_xor (~OP1[15:8])[3:3] == 0x1_1 bool_xor (~OP1[15:8])[4:4] == 0x1_1 bool_xor (~OP1[15:8])[5:5] == 0x1_1 bool_xor (~OP1[15:8])[6:6] == 0x1_1 bool_xor (~OP1[15:8])[7:7] == 0x1_1) ; ZF := ~OP1[15:8] == 0x0_8 ; SF := (~OP1[15:8])[7:7] == 0x1_1 ; OF := OP1[15:15] == 0x1_1 bool_and (~OP1[15:8])[7:7] == 0x1_1)
(neg r8) -> (OP1 = OP1[63:8] o ~OP1[7:0] ; CF := !(OP1[7:0] == 0x0_8) ; PF := !((~OP1[7:0])[0:0] == 0x1_1 bool_xor (~OP1[7:0])[1:1] == 0x1_1 bool_xor (~OP1[7:0])[2:2] == 0x1_1 bool_xor (~OP1[7:0])[3:3] == 0x1_1 bool_xor (~OP1[7:0])[4:4] == 0x1_1 bool_xor (~OP1[7:0])[5:5] == 0x1_1 bool_xor (~OP1[7:0])[6:6] == 0x1_1 bool_xor (~OP1[7:0])[7:7] == 0x1_1) ; ZF := ~OP1[7:0] == 0x0_8 ; SF := (~OP1[7:0])[7:7] == 0x1_1 ; OF := OP1[7:7] == 0x1_1 bool_and (~OP1[7:0])[7:7] == 0x1_1)
(neg m8) -> (OP1 = (OP1[63:8] o ~OP1[7:0])[7:0] ; CF := !(OP1[7:0] == 0x0_8) ; PF := !((~OP1[7:0])[0:0] == 0x1_1 bool_xor (~OP1[7:0])[1:1] == 0x1_1 bool_xor (~OP1[7:0])[2:2] == 0x1_1 bool_xor (~OP1[7:0])[3:3] == 0x1_1 bool_xor (~OP1[7:0])[4:4] == 0x1_1 bool_xor (~OP1[7:0])[5:5] == 0x1_1 bool_xor (~OP1[7:0])[6:6] == 0x1_1 bool_xor (~OP1[7:0])[7:7] == 0x1_1) ; ZF := ~OP1[7:0] == 0x0_8 ; SF := (~OP1[7:0])[7:7] == 0x1_1 ; OF := OP1[7:7] == 0x1_1 bool_and (~OP1[7:0])[7:7] == 0x1_1)
(neg r32) -> (OP1 = 0x0_32 o ~OP1[31:0] ; CF := !(OP1[31:0] == 0x0_32) ; PF := !((~OP1[31:0])[0:0] == 0x1_1 bool_xor (~OP1[31:0])[1:1] == 0x1_1 bool_xor (~OP1[31:0])[2:2] == 0x1_1 bool_xor (~OP1[31:0])[3:3] == 0x1_1 bool_xor (~OP1[31:0])[4:4] == 0x1_1 bool_xor (~OP1[31:0])[5:5] == 0x1_1 bool_xor (~OP1[31:0])[6:6] == 0x1_1 bool_xor (~OP1[31:0])[7:7] == 0x1_1) ; ZF := ~OP1[31:0] == 0x0_32 ; SF := (~OP1[31:0])[31:31] == 0x1_1 ; OF := OP1[31:31] == 0x1_1 bool_and (~OP1[31:0])[31:31] == 0x1_1)
(neg m32) -> (OP1 = (0x0_32 o ~OP1[31:0])[31:0] ; CF := !(OP1[31:0] == 0x0_32) ; PF := !((~OP1[31:0])[0:0] == 0x1_1 bool_xor (~OP1[31:0])[1:1] == 0x1_1 bool_xor (~OP1[31:0])[2:2] == 0x1_1 bool_xor (~OP1[31:0])[3:3] == 0x1_1 bool_xor (~OP1[31:0])[4:4] == 0x1_1 bool_xor (~OP1[31:0])[5:5] == 0x1_1 bool_xor (~OP1[31:0])[6:6] == 0x1_1 bool_xor (~OP1[31:0])[7:7] == 0x1_1) ; ZF := ~OP1[31:0] == 0x0_32 ; SF := (~OP1[31:0])[31:31] == 0x1_1 ; OF := OP1[31:31] == 0x1_1 bool_and (~OP1[31:0])[31:31] == 0x1_1)
(neg r64) -> (OP1 = ~OP1 ; CF := !(OP1 == 0x0_64) ; PF := !((~OP1)[0:0] == 0x1_1 bool_xor (~OP1)[1:1] == 0x1_1 bool_xor (~OP1)[2:2] == 0x1_1 bool_xor (~OP1)[3:3] == 0x1_1 bool_xor (~OP1)[4:4] == 0x1_1 bool_xor (~OP1)[5:5] == 0x1_1 bool_xor (~OP1)[6:6] == 0x1_1 bool_xor (~OP1)[7:7] == 0x1_1) ; ZF := ~OP1 == 0x0_64 ; SF := (~OP1)[63:63] == 0x1_1 ; OF := OP1[63:63] == 0x1_1 bool_and (~OP1)[63:63] == 0x1_1)
(neg m64) -> (OP1 = (~OP1)[63:0] ; CF := !(OP1 == 0x0_64) ; PF := !((~OP1)[0:0] == 0x1_1 bool_xor (~OP1)[1:1] == 0x1_1 bool_xor (~OP1)[2:2] == 0x1_1 bool_xor (~OP1)[3:3] == 0x1_1 bool_xor (~OP1)[4:4] == 0x1_1 bool_xor (~OP1)[5:5] == 0x1_1 bool_xor (~OP1)[6:6] == 0x1_1 bool_xor (~OP1)[7:7] == 0x1_1) ; ZF := ~OP1 == 0x0_64 ; SF := (~OP1)[63:63] == 0x1_1 ; OF := OP1[63:63] == 0x1_1 bool_and (~OP1)[63:63] == 0x1_1)
(neg r16) -> (OP1 = OP1[63:16] o ~OP1[15:0] ; CF := !(OP1[15:0] == 0x0_16) ; PF := !((~OP1[15:0])[0:0] == 0x1_1 bool_xor (~OP1[15:0])[1:1] == 0x1_1 bool_xor (~OP1[15:0])[2:2] == 0x1_1 bool_xor (~OP1[15:0])[3:3] == 0x1_1 bool_xor (~OP1[15:0])[4:4] == 0x1_1 bool_xor (~OP1[15:0])[5:5] == 0x1_1 bool_xor (~OP1[15:0])[6:6] == 0x1_1 bool_xor (~OP1[15:0])[7:7] == 0x1_1) ; ZF := ~OP1[15:0] == 0x0_16 ; SF := (~OP1[15:0])[15:15] == 0x1_1 ; OF := OP1[15:15] == 0x1_1 bool_and (~OP1[15:0])[15:15] == 0x1_1)
(neg m16) -> (OP1 = (OP1[63:16] o ~OP1[15:0])[15:0] ; CF := !(OP1[15:0] == 0x0_16) ; PF := !((~OP1[15:0])[0:0] == 0x1_1 bool_xor (~OP1[15:0])[1:1] == 0x1_1 bool_xor (~OP1[15:0])[2:2] == 0x1_1 bool_xor (~OP1[15:0])[3:3] == 0x1_1 bool_xor (~OP1[15:0])[4:4] == 0x1_1 bool_xor (~OP1[15:0])[5:5] == 0x1_1 bool_xor (~OP1[15:0])[6:6] == 0x1_1 bool_xor (~OP1[15:0])[7:7] == 0x1_1) ; ZF := ~OP1[15:0] == 0x0_16 ; SF := (~OP1[15:0])[15:15] == 0x1_1 ; OF := OP1[15:15] == 0x1_1 bool_and (~OP1[15:0])[15:15] == 0x1_1)
(nop) -> ()
(nop r32) -> ()
(nop m32) -> ()
(nop r16) -> ()
(nop m16) -> ()
(not rh) -> (OP1 = OP1[63:16] o !OP1[15:8] o OP1[7:0])
(not r8) -> (OP1 = OP1[63:8] o !OP1[7:0])
(not m8) -> (OP1 = (OP1[63:8] o !OP1[7:0])[7:0])
(not r32) -> (OP1 = 0x0_32 o !OP1[31:0])
(not m32) -> (OP1 = (0x0_32 o !OP1[31:0])[31:0])
(not r64) -> (OP1 = !OP1)
(not m64) -> (OP1 = (!OP1)[63:0])
(not r16) -> (OP1 = OP1[63:16] o !OP1[15:0])
(not m16) -> (OP1 = (OP1[63:16] o !OP1[15:0])[15:0])
(or rh, imm8) -> (OP1 = OP1[63:16] o (OP1[15:8] | OP2[7:0]) o OP1[7:0] ; CF := false ; PF := !((OP1[8:8] | OP2[0:0]) == 0x1_1 bool_xor (OP1[9:9] | OP2[1:1]) == 0x1_1 bool_xor (OP1[10:10] | OP2[2:2]) == 0x1_1 bool_xor (OP1[11:11] | OP2[3:3]) == 0x1_1 bool_xor (OP1[12:12] | OP2[4:4]) == 0x1_1 bool_xor (OP1[13:13] | OP2[5:5]) == 0x1_1 bool_xor (OP1[14:14] | OP2[6:6]) == 0x1_1 bool_xor (OP1[15:15] | OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:8] | OP2[7:0]) == 0x0_8 ; SF := (OP1[15:15] | OP2[7:7]) == 0x1_1 ; OF := false)
(or rh, rh) -> (OP1 = OP1[63:16] o (OP1[15:8] | OP2[15:8]) o OP1[7:0] ; CF := false ; PF := !((OP1[8:8] | OP2[8:8]) == 0x1_1 bool_xor (OP1[9:9] | OP2[9:9]) == 0x1_1 bool_xor (OP1[10:10] | OP2[10:10]) == 0x1_1 bool_xor (OP1[11:11] | OP2[11:11]) == 0x1_1 bool_xor (OP1[12:12] | OP2[12:12]) == 0x1_1 bool_xor (OP1[13:13] | OP2[13:13]) == 0x1_1 bool_xor (OP1[14:14] | OP2[14:14]) == 0x1_1 bool_xor (OP1[15:15] | OP2[15:15]) == 0x1_1) ; ZF := (OP1[15:8] | OP2[15:8]) == 0x0_8 ; SF := (OP1[15:15] | OP2[15:15]) == 0x1_1 ; OF := false)
(or rh, r8) -> (OP1 = OP1[63:16] o (OP1[15:8] | OP2[7:0]) o OP1[7:0] ; CF := false ; PF := !((OP1[8:8] | OP2[0:0]) == 0x1_1 bool_xor (OP1[9:9] | OP2[1:1]) == 0x1_1 bool_xor (OP1[10:10] | OP2[2:2]) == 0x1_1 bool_xor (OP1[11:11] | OP2[3:3]) == 0x1_1 bool_xor (OP1[12:12] | OP2[4:4]) == 0x1_1 bool_xor (OP1[13:13] | OP2[5:5]) == 0x1_1 bool_xor (OP1[14:14] | OP2[6:6]) == 0x1_1 bool_xor (OP1[15:15] | OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:8] | OP2[7:0]) == 0x0_8 ; SF := (OP1[15:15] | OP2[7:7]) == 0x1_1 ; OF := false)
(or rh, m8) -> (OP1 = OP1[63:16] o (OP1[15:8] | OP2[7:0]) o OP1[7:0] ; CF := false ; PF := !((OP1[8:8] | OP2[0:0]) == 0x1_1 bool_xor (OP1[9:9] | OP2[1:1]) == 0x1_1 bool_xor (OP1[10:10] | OP2[2:2]) == 0x1_1 bool_xor (OP1[11:11] | OP2[3:3]) == 0x1_1 bool_xor (OP1[12:12] | OP2[4:4]) == 0x1_1 bool_xor (OP1[13:13] | OP2[5:5]) == 0x1_1 bool_xor (OP1[14:14] | OP2[6:6]) == 0x1_1 bool_xor (OP1[15:15] | OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:8] | OP2[7:0]) == 0x0_8 ; SF := (OP1[15:15] | OP2[7:7]) == 0x1_1 ; OF := false)
(or al, imm8) -> (OP1 = OP1[63:8] o (OP1[7:0] | OP2[7:0]) ; CF := false ; PF := !((OP1[0:0] | OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] | OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] | OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] | OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] | OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] | OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] | OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] | OP2[7:7]) == 0x1_1) ; ZF := (OP1[7:0] | OP2[7:0]) == 0x0_8 ; SF := (OP1[7:7] | OP2[7:7]) == 0x1_1 ; OF := false)
(or r8, imm8) -> (OP1 = OP1[63:8] o (OP1[7:0] | OP2[7:0]) ; CF := false ; PF := !((OP1[0:0] | OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] | OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] | OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] | OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] | OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] | OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] | OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] | OP2[7:7]) == 0x1_1) ; ZF := (OP1[7:0] | OP2[7:0]) == 0x0_8 ; SF := (OP1[7:7] | OP2[7:7]) == 0x1_1 ; OF := false)
(or r8, rh) -> (OP1 = OP1[63:8] o (OP1[7:0] | OP2[15:8]) ; CF := false ; PF := !((OP1[0:0] | OP2[8:8]) == 0x1_1 bool_xor (OP1[1:1] | OP2[9:9]) == 0x1_1 bool_xor (OP1[2:2] | OP2[10:10]) == 0x1_1 bool_xor (OP1[3:3] | OP2[11:11]) == 0x1_1 bool_xor (OP1[4:4] | OP2[12:12]) == 0x1_1 bool_xor (OP1[5:5] | OP2[13:13]) == 0x1_1 bool_xor (OP1[6:6] | OP2[14:14]) == 0x1_1 bool_xor (OP1[7:7] | OP2[15:15]) == 0x1_1) ; ZF := (OP1[7:0] | OP2[15:8]) == 0x0_8 ; SF := (OP1[7:7] | OP2[15:15]) == 0x1_1 ; OF := false)
(or r8, r8) -> (OP1 = OP1[63:8] o (OP1[7:0] | OP2[7:0]) ; CF := false ; PF := !((OP1[0:0] | OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] | OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] | OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] | OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] | OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] | OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] | OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] | OP2[7:7]) == 0x1_1) ; ZF := (OP1[7:0] | OP2[7:0]) == 0x0_8 ; SF := (OP1[7:7] | OP2[7:7]) == 0x1_1 ; OF := false)
(or r8, m8) -> (OP1 = OP1[63:8] o (OP1[7:0] | OP2[7:0]) ; CF := false ; PF := !((OP1[0:0] | OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] | OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] | OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] | OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] | OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] | OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] | OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] | OP2[7:7]) == 0x1_1) ; ZF := (OP1[7:0] | OP2[7:0]) == 0x0_8 ; SF := (OP1[7:7] | OP2[7:7]) == 0x1_1 ; OF := false)
(or m8, imm8) -> (OP1 = (OP1[63:8] o (OP1[7:0] | OP2[7:0]))[7:0] ; CF := false ; PF := !((OP1[0:0] | OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] | OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] | OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] | OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] | OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] | OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] | OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] | OP2[7:7]) == 0x1_1) ; ZF := (OP1[7:0] | OP2[7:0]) == 0x0_8 ; SF := (OP1[7:7] | OP2[7:7]) == 0x1_1 ; OF := false)
(or m8, rh) -> (OP1 = (OP1[63:8] o (OP1[7:0] | OP2[15:8]))[7:0] ; CF := false ; PF := !((OP1[0:0] | OP2[8:8]) == 0x1_1 bool_xor (OP1[1:1] | OP2[9:9]) == 0x1_1 bool_xor (OP1[2:2] | OP2[10:10]) == 0x1_1 bool_xor (OP1[3:3] | OP2[11:11]) == 0x1_1 bool_xor (OP1[4:4] | OP2[12:12]) == 0x1_1 bool_xor (OP1[5:5] | OP2[13:13]) == 0x1_1 bool_xor (OP1[6:6] | OP2[14:14]) == 0x1_1 bool_xor (OP1[7:7] | OP2[15:15]) == 0x1_1) ; ZF := (OP1[7:0] | OP2[15:8]) == 0x0_8 ; SF := (OP1[7:7] | OP2[15:15]) == 0x1_1 ; OF := false)
(or m8, r8) -> (OP1 = (OP1[63:8] o (OP1[7:0] | OP2[7:0]))[7:0] ; CF := false ; PF := !((OP1[0:0] | OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] | OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] | OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] | OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] | OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] | OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] | OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] | OP2[7:7]) == 0x1_1) ; ZF := (OP1[7:0] | OP2[7:0]) == 0x0_8 ; SF := (OP1[7:7] | OP2[7:7]) == 0x1_1 ; OF := false)
(or eax, imm32) -> (OP1 = 0x0_32 o (OP1[31:0] | OP2[31:0]) ; CF := false ; PF := !((OP1[0:0] | OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] | OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] | OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] | OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] | OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] | OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] | OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] | OP2[7:7]) == 0x1_1) ; ZF := (OP1[31:0] | OP2[31:0]) == 0x0_32 ; SF := (OP1[31:31] | OP2[31:31]) == 0x1_1 ; OF := false)
(or r32, imm8) -> (OP1 = 0x0_32 o (OP1[31:0] | (sign-extend-32(OP2))[31:0]) ; CF := false ; PF := !((OP1[0:0] | (sign-extend-32(OP2))[0:0]) == 0x1_1 bool_xor (OP1[1:1] | (sign-extend-32(OP2))[1:1]) == 0x1_1 bool_xor (OP1[2:2] | (sign-extend-32(OP2))[2:2]) == 0x1_1 bool_xor (OP1[3:3] | (sign-extend-32(OP2))[3:3]) == 0x1_1 bool_xor (OP1[4:4] | (sign-extend-32(OP2))[4:4]) == 0x1_1 bool_xor (OP1[5:5] | (sign-extend-32(OP2))[5:5]) == 0x1_1 bool_xor (OP1[6:6] | (sign-extend-32(OP2))[6:6]) == 0x1_1 bool_xor (OP1[7:7] | (sign-extend-32(OP2))[7:7]) == 0x1_1) ; ZF := (OP1[31:0] | (sign-extend-32(OP2))[31:0]) == 0x0_32 ; SF := (OP1[31:31] | (sign-extend-32(OP2))[31:31]) == 0x1_1 ; OF := false)
(or r32, imm32) -> (OP1 = 0x0_32 o (OP1[31:0] | OP2[31:0]) ; CF := false ; PF := !((OP1[0:0] | OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] | OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] | OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] | OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] | OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] | OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] | OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] | OP2[7:7]) == 0x1_1) ; ZF := (OP1[31:0] | OP2[31:0]) == 0x0_32 ; SF := (OP1[31:31] | OP2[31:31]) == 0x1_1 ; OF := false)
(or r32, r32) -> (OP1 = 0x0_32 o (OP1[31:0] | OP2[31:0]) ; CF := false ; PF := !((OP1[0:0] | OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] | OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] | OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] | OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] | OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] | OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] | OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] | OP2[7:7]) == 0x1_1) ; ZF := (OP1[31:0] | OP2[31:0]) == 0x0_32 ; SF := (OP1[31:31] | OP2[31:31]) == 0x1_1 ; OF := false)
(or r32, m32) -> (OP1 = 0x0_32 o (OP1[31:0] | OP2[31:0]) ; CF := false ; PF := !((OP1[0:0] | OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] | OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] | OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] | OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] | OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] | OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] | OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] | OP2[7:7]) == 0x1_1) ; ZF := (OP1[31:0] | OP2[31:0]) == 0x0_32 ; SF := (OP1[31:31] | OP2[31:31]) == 0x1_1 ; OF := false)
(or m32, imm8) -> (OP1 = 0x0_32 o (OP1[31:0] | (sign-extend-32(OP2))[31:0]) ; CF := false ; PF := !((OP1[0:0] | (sign-extend-32(OP2))[0:0]) == 0x1_1 bool_xor (OP1[1:1] | (sign-extend-32(OP2))[1:1]) == 0x1_1 bool_xor (OP1[2:2] | (sign-extend-32(OP2))[2:2]) == 0x1_1 bool_xor (OP1[3:3] | (sign-extend-32(OP2))[3:3]) == 0x1_1 bool_xor (OP1[4:4] | (sign-extend-32(OP2))[4:4]) == 0x1_1 bool_xor (OP1[5:5] | (sign-extend-32(OP2))[5:5]) == 0x1_1 bool_xor (OP1[6:6] | (sign-extend-32(OP2))[6:6]) == 0x1_1 bool_xor (OP1[7:7] | (sign-extend-32(OP2))[7:7]) == 0x1_1) ; ZF := (OP1[31:0] | (sign-extend-32(OP2))[31:0]) == 0x0_32 ; SF := (OP1[31:31] | (sign-extend-32(OP2))[31:31]) == 0x1_1 ; OF := false)
(or m32, imm32) -> (OP1 = (0x0_32 o (OP1[31:0] | OP2[31:0]))[31:0] ; CF := false ; PF := !((OP1[0:0] | OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] | OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] | OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] | OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] | OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] | OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] | OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] | OP2[7:7]) == 0x1_1) ; ZF := (OP1[31:0] | OP2[31:0]) == 0x0_32 ; SF := (OP1[31:31] | OP2[31:31]) == 0x1_1 ; OF := false)
(or m32, r32) -> (OP1 = (0x0_32 o (OP1[31:0] | OP2[31:0]))[31:0] ; CF := false ; PF := !((OP1[0:0] | OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] | OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] | OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] | OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] | OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] | OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] | OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] | OP2[7:7]) == 0x1_1) ; ZF := (OP1[31:0] | OP2[31:0]) == 0x0_32 ; SF := (OP1[31:31] | OP2[31:31]) == 0x1_1 ; OF := false)
(or rax, imm32) -> (OP1 = OP1 | (sign-extend-64(OP2)) ; CF := false ; PF := !((OP1[0:0] | (sign-extend-64(OP2))[0:0]) == 0x1_1 bool_xor (OP1[1:1] | (sign-extend-64(OP2))[1:1]) == 0x1_1 bool_xor (OP1[2:2] | (sign-extend-64(OP2))[2:2]) == 0x1_1 bool_xor (OP1[3:3] | (sign-extend-64(OP2))[3:3]) == 0x1_1 bool_xor (OP1[4:4] | (sign-extend-64(OP2))[4:4]) == 0x1_1 bool_xor (OP1[5:5] | (sign-extend-64(OP2))[5:5]) == 0x1_1 bool_xor (OP1[6:6] | (sign-extend-64(OP2))[6:6]) == 0x1_1 bool_xor (OP1[7:7] | (sign-extend-64(OP2))[7:7]) == 0x1_1) ; ZF := (OP1 | (sign-extend-64(OP2))) == 0x0_64 ; SF := (OP1[63:63] | (sign-extend-64(OP2))[63:63]) == 0x1_1 ; OF := false)
(or r64, imm8) -> (OP1 = OP1 | (sign-extend-64(OP2)) ; CF := false ; PF := !((OP1[0:0] | (sign-extend-64(OP2))[0:0]) == 0x1_1 bool_xor (OP1[1:1] | (sign-extend-64(OP2))[1:1]) == 0x1_1 bool_xor (OP1[2:2] | (sign-extend-64(OP2))[2:2]) == 0x1_1 bool_xor (OP1[3:3] | (sign-extend-64(OP2))[3:3]) == 0x1_1 bool_xor (OP1[4:4] | (sign-extend-64(OP2))[4:4]) == 0x1_1 bool_xor (OP1[5:5] | (sign-extend-64(OP2))[5:5]) == 0x1_1 bool_xor (OP1[6:6] | (sign-extend-64(OP2))[6:6]) == 0x1_1 bool_xor (OP1[7:7] | (sign-extend-64(OP2))[7:7]) == 0x1_1) ; ZF := (OP1 | (sign-extend-64(OP2))) == 0x0_64 ; SF := (OP1[63:63] | (sign-extend-64(OP2))[63:63]) == 0x1_1 ; OF := false)
(or r64, imm32) -> (OP1 = OP1 | (sign-extend-64(OP2)) ; CF := false ; PF := !((OP1[0:0] | (sign-extend-64(OP2))[0:0]) == 0x1_1 bool_xor (OP1[1:1] | (sign-extend-64(OP2))[1:1]) == 0x1_1 bool_xor (OP1[2:2] | (sign-extend-64(OP2))[2:2]) == 0x1_1 bool_xor (OP1[3:3] | (sign-extend-64(OP2))[3:3]) == 0x1_1 bool_xor (OP1[4:4] | (sign-extend-64(OP2))[4:4]) == 0x1_1 bool_xor (OP1[5:5] | (sign-extend-64(OP2))[5:5]) == 0x1_1 bool_xor (OP1[6:6] | (sign-extend-64(OP2))[6:6]) == 0x1_1 bool_xor (OP1[7:7] | (sign-extend-64(OP2))[7:7]) == 0x1_1) ; ZF := (OP1 | (sign-extend-64(OP2))) == 0x0_64 ; SF := (OP1[63:63] | (sign-extend-64(OP2))[63:63]) == 0x1_1 ; OF := false)
(or r64, r64) -> (OP1 = OP1 | OP2 ; CF := false ; PF := !((OP1[0:0] | OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] | OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] | OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] | OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] | OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] | OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] | OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] | OP2[7:7]) == 0x1_1) ; ZF := (OP1 | OP2) == 0x0_64 ; SF := (OP1[63:63] | OP2[63:63]) == 0x1_1 ; OF := false)
(or r64, m64) -> (OP1 = OP1 | OP2 ; CF := false ; PF := !((OP1[0:0] | OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] | OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] | OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] | OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] | OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] | OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] | OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] | OP2[7:7]) == 0x1_1) ; ZF := (OP1 | OP2) == 0x0_64 ; SF := (OP1[63:63] | OP2[63:63]) == 0x1_1 ; OF := false)
(or m64, imm8) -> (OP1 = OP1 | (sign-extend-64(OP2)) ; CF := false ; PF := !((OP1[0:0] | (sign-extend-64(OP2))[0:0]) == 0x1_1 bool_xor (OP1[1:1] | (sign-extend-64(OP2))[1:1]) == 0x1_1 bool_xor (OP1[2:2] | (sign-extend-64(OP2))[2:2]) == 0x1_1 bool_xor (OP1[3:3] | (sign-extend-64(OP2))[3:3]) == 0x1_1 bool_xor (OP1[4:4] | (sign-extend-64(OP2))[4:4]) == 0x1_1 bool_xor (OP1[5:5] | (sign-extend-64(OP2))[5:5]) == 0x1_1 bool_xor (OP1[6:6] | (sign-extend-64(OP2))[6:6]) == 0x1_1 bool_xor (OP1[7:7] | (sign-extend-64(OP2))[7:7]) == 0x1_1) ; ZF := (OP1 | (sign-extend-64(OP2))) == 0x0_64 ; SF := (OP1[63:63] | (sign-extend-64(OP2))[63:63]) == 0x1_1 ; OF := false)
(or m64, imm32) -> (OP1 = OP1 | (sign-extend-64(OP2)) ; CF := false ; PF := !((OP1[0:0] | (sign-extend-64(OP2))[0:0]) == 0x1_1 bool_xor (OP1[1:1] | (sign-extend-64(OP2))[1:1]) == 0x1_1 bool_xor (OP1[2:2] | (sign-extend-64(OP2))[2:2]) == 0x1_1 bool_xor (OP1[3:3] | (sign-extend-64(OP2))[3:3]) == 0x1_1 bool_xor (OP1[4:4] | (sign-extend-64(OP2))[4:4]) == 0x1_1 bool_xor (OP1[5:5] | (sign-extend-64(OP2))[5:5]) == 0x1_1 bool_xor (OP1[6:6] | (sign-extend-64(OP2))[6:6]) == 0x1_1 bool_xor (OP1[7:7] | (sign-extend-64(OP2))[7:7]) == 0x1_1) ; ZF := (OP1 | (sign-extend-64(OP2))) == 0x0_64 ; SF := (OP1[63:63] | (sign-extend-64(OP2))[63:63]) == 0x1_1 ; OF := false)
(or m64, r64) -> (OP1 = (OP1 | OP2)[63:0] ; CF := false ; PF := !((OP1[0:0] | OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] | OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] | OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] | OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] | OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] | OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] | OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] | OP2[7:7]) == 0x1_1) ; ZF := (OP1 | OP2) == 0x0_64 ; SF := (OP1[63:63] | OP2[63:63]) == 0x1_1 ; OF := false)
(or ax, imm16) -> (OP1 = OP1[63:16] o (OP1[15:0] | OP2[15:0]) ; CF := false ; PF := !((OP1[0:0] | OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] | OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] | OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] | OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] | OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] | OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] | OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] | OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:0] | OP2[15:0]) == 0x0_16 ; SF := (OP1[15:15] | OP2[15:15]) == 0x1_1 ; OF := false)
(or r16, imm8) -> (OP1 = OP1[63:16] o (OP1[15:0] | (sign-extend-16(OP2))[15:0]) ; CF := false ; PF := !((OP1[0:0] | (sign-extend-16(OP2))[0:0]) == 0x1_1 bool_xor (OP1[1:1] | (sign-extend-16(OP2))[1:1]) == 0x1_1 bool_xor (OP1[2:2] | (sign-extend-16(OP2))[2:2]) == 0x1_1 bool_xor (OP1[3:3] | (sign-extend-16(OP2))[3:3]) == 0x1_1 bool_xor (OP1[4:4] | (sign-extend-16(OP2))[4:4]) == 0x1_1 bool_xor (OP1[5:5] | (sign-extend-16(OP2))[5:5]) == 0x1_1 bool_xor (OP1[6:6] | (sign-extend-16(OP2))[6:6]) == 0x1_1 bool_xor (OP1[7:7] | (sign-extend-16(OP2))[7:7]) == 0x1_1) ; ZF := (OP1[15:0] | (sign-extend-16(OP2))[15:0]) == 0x0_16 ; SF := (OP1[15:15] | (sign-extend-16(OP2))[15:15]) == 0x1_1 ; OF := false)
(or r16, imm16) -> (OP1 = OP1[63:16] o (OP1[15:0] | OP2[15:0]) ; CF := false ; PF := !((OP1[0:0] | OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] | OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] | OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] | OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] | OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] | OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] | OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] | OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:0] | OP2[15:0]) == 0x0_16 ; SF := (OP1[15:15] | OP2[15:15]) == 0x1_1 ; OF := false)
(or r16, r16) -> (OP1 = OP1[63:16] o (OP1[15:0] | OP2[15:0]) ; CF := false ; PF := !((OP1[0:0] | OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] | OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] | OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] | OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] | OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] | OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] | OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] | OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:0] | OP2[15:0]) == 0x0_16 ; SF := (OP1[15:15] | OP2[15:15]) == 0x1_1 ; OF := false)
(or r16, m16) -> (OP1 = OP1[63:16] o (OP1[15:0] | OP2[15:0]) ; CF := false ; PF := !((OP1[0:0] | OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] | OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] | OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] | OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] | OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] | OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] | OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] | OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:0] | OP2[15:0]) == 0x0_16 ; SF := (OP1[15:15] | OP2[15:15]) == 0x1_1 ; OF := false)
(or m16, imm8) -> (OP1 = OP1[63:16] o (OP1[15:0] | (sign-extend-16(OP2))[15:0]) ; CF := false ; PF := !((OP1[0:0] | (sign-extend-16(OP2))[0:0]) == 0x1_1 bool_xor (OP1[1:1] | (sign-extend-16(OP2))[1:1]) == 0x1_1 bool_xor (OP1[2:2] | (sign-extend-16(OP2))[2:2]) == 0x1_1 bool_xor (OP1[3:3] | (sign-extend-16(OP2))[3:3]) == 0x1_1 bool_xor (OP1[4:4] | (sign-extend-16(OP2))[4:4]) == 0x1_1 bool_xor (OP1[5:5] | (sign-extend-16(OP2))[5:5]) == 0x1_1 bool_xor (OP1[6:6] | (sign-extend-16(OP2))[6:6]) == 0x1_1 bool_xor (OP1[7:7] | (sign-extend-16(OP2))[7:7]) == 0x1_1) ; ZF := (OP1[15:0] | (sign-extend-16(OP2))[15:0]) == 0x0_16 ; SF := (OP1[15:15] | (sign-extend-16(OP2))[15:15]) == 0x1_1 ; OF := false)
(or m16, imm16) -> (OP1 = (OP1[63:16] o (OP1[15:0] | OP2[15:0]))[15:0] ; CF := false ; PF := !((OP1[0:0] | OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] | OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] | OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] | OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] | OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] | OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] | OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] | OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:0] | OP2[15:0]) == 0x0_16 ; SF := (OP1[15:15] | OP2[15:15]) == 0x1_1 ; OF := false)
(or m16, r16) -> (OP1 = (OP1[63:16] o (OP1[15:0] | OP2[15:0]))[15:0] ; CF := false ; PF := !((OP1[0:0] | OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] | OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] | OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] | OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] | OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] | OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] | OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] | OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:0] | OP2[15:0]) == 0x0_16 ; SF := (OP1[15:15] | OP2[15:15]) == 0x1_1 ; OF := false)
(orpd xmm, m128) -> (OP1 = OP1[255:128] o (OP1[127:0] | OP2[127:0]))
(orpd xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:0] | OP2[127:0]))
(orps xmm, m128) -> (OP1 = OP1[255:128] o (OP1[127:0] | OP2[127:0]))
(orps xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:0] | OP2[127:0]))
(paddd xmm, m128) -> (OP1 = OP1[255:128] o ((OP1[127:96] + OP2[127:96]) o ((OP1[95:64] + OP2[95:64]) o ((OP1[63:32] + OP2[63:32]) o (OP1[31:0] + OP2[31:0])))))
(paddd xmm, xmm) -> (OP1 = OP1[255:128] o ((OP1[127:96] + OP2[127:96]) o ((OP1[95:64] + OP2[95:64]) o ((OP1[63:32] + OP2[63:32]) o (OP1[31:0] + OP2[31:0])))))
(paddq xmm, m128) -> (OP1 = OP1[255:128] o ((OP1[127:64] + OP2[127:64]) o (OP1[63:0] + OP2[63:0])))
(paddq xmm, xmm) -> (OP1 = OP1[255:128] o ((OP1[127:64] + OP2[127:64]) o (OP1[63:0] + OP2[63:0])))
(pand xmm, m128) -> (OP1 = OP1[255:128] o (OP1[127:0] & OP2[127:0]))
(pand xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:0] & OP2[127:0]))
(pandn xmm, m128) -> (OP1 = OP1[255:128] o (!OP1[127:0] & OP2[127:0]))
(pandn xmm, xmm) -> (OP1 = OP1[255:128] o (!OP1[127:0] & OP2[127:0]))
(phaddd xmm, m128) -> (OP1 = OP1[255:128] o ((OP2[127:96] + OP2[95:64]) o (OP2[63:32] + OP2[31:0]) o (OP1[127:96] + OP1[95:64]) o (OP1[63:32] + OP1[31:0])))
(phaddd xmm, xmm) -> (OP1 = OP1[255:128] o ((OP2[127:96] + OP2[95:64]) o (OP2[63:32] + OP2[31:0]) o (OP1[127:96] + OP1[95:64]) o (OP1[63:32] + OP1[31:0])))
(phsubd xmm, m128) -> (OP1 = OP1[255:128] o ((OP2[95:64] - OP2[127:96]) o (OP2[31:0] - OP2[63:32]) o (OP1[95:64] - OP1[127:96]) o (OP1[31:0] - OP1[63:32])))
(phsubd xmm, xmm) -> (OP1 = OP1[255:128] o ((OP2[95:64] - OP2[127:96]) o (OP2[31:0] - OP2[63:32]) o (OP1[95:64] - OP1[127:96]) o (OP1[31:0] - OP1[63:32])))
(pmovsxbd xmm, m32) -> (OP1 = OP1[255:128] o (sign-extend-32(OP2[31:24]) o (sign-extend-32(OP2[23:16]) o (sign-extend-32(OP2[15:8]) o sign-extend-32(OP2[7:0])))))
(pmovsxbd xmm, xmm) -> (OP1 = OP1[255:128] o (sign-extend-32(OP2[31:24]) o (sign-extend-32(OP2[23:16]) o (sign-extend-32(OP2[15:8]) o sign-extend-32(OP2[7:0])))))
(pmovsxbq xmm, xmm) -> (OP1 = OP1[255:128] o (sign-extend-64(OP2[15:8]) o sign-extend-64(OP2[7:0])))
(pmovsxdq xmm, m64) -> (OP1 = OP1[255:128] o (sign-extend-64(OP2[63:32]) o sign-extend-64(OP2[31:0])))
(pmovsxdq xmm, xmm) -> (OP1 = OP1[255:128] o (sign-extend-64(OP2[63:32]) o sign-extend-64(OP2[31:0])))
(pmovsxwd xmm, m64) -> (OP1 = OP1[255:128] o (sign-extend-32(OP2[63:48]) o (sign-extend-32(OP2[47:32]) o (sign-extend-32(OP2[31:16]) o sign-extend-32(OP2[15:0])))))
(pmovsxwd xmm, xmm) -> (OP1 = OP1[255:128] o (sign-extend-32(OP2[63:48]) o (sign-extend-32(OP2[47:32]) o (sign-extend-32(OP2[31:16]) o sign-extend-32(OP2[15:0])))))
(pmovsxwq xmm, m32) -> (OP1 = OP1[255:128] o (sign-extend-64(OP2[31:16]) o sign-extend-64(OP2[15:0])))
(pmovsxwq xmm, xmm) -> (OP1 = OP1[255:128] o (sign-extend-64(OP2[31:16]) o sign-extend-64(OP2[15:0])))
(pmovzxbd xmm, m32) -> (OP1 = OP1[255:128] o (0x0_24 o OP2[31:24] o (0x0_24 o OP2[23:16] o (0x0_24 o OP2[15:8] o (0x0_24 o OP2[7:0])))))
(pmovzxbd xmm, xmm) -> (OP1 = OP1[255:128] o (0x0_24 o OP2[31:24] o (0x0_24 o OP2[23:16] o (0x0_24 o OP2[15:8] o (0x0_24 o OP2[7:0])))))
(pmovzxbq xmm, xmm) -> (OP1 = OP1[255:128] o (0x0_56 o OP2[15:8] o (0x0_56 o OP2[7:0])))
(pmovzxdq xmm, m64) -> (OP1 = OP1[255:128] o (0x0_32 o OP2[63:32] o (0x0_32 o OP2[31:0])))
(pmovzxdq xmm, xmm) -> (OP1 = OP1[255:128] o (0x0_32 o OP2[63:32] o (0x0_32 o OP2[31:0])))
(pmovzxwd xmm, m64) -> (OP1 = OP1[255:128] o (0x0_16 o OP2[63:48] o (0x0_16 o OP2[47:32] o (0x0_16 o OP2[31:16] o (0x0_16 o OP2[15:0])))))
(pmovzxwd xmm, xmm) -> (OP1 = OP1[255:128] o (0x0_16 o OP2[63:48] o (0x0_16 o OP2[47:32] o (0x0_16 o OP2[31:16] o (0x0_16 o OP2[15:0])))))
(pmovzxwq xmm, m32) -> (OP1 = OP1[255:128] o (0x0_48 o OP2[31:16] o (0x0_48 o OP2[15:0])))
(pmovzxwq xmm, xmm) -> (OP1 = OP1[255:128] o (0x0_48 o OP2[31:16] o (0x0_48 o OP2[15:0])))
(popcnt r32, r32) -> (OP1 = 0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o OP2[31:31] + 0x0_1 o OP2[30:30]) + 0x0_2 o (0x0_1 o OP2[29:29] + 0x0_1 o OP2[28:28])) + 0x0_4 o (0x0_2 o (0x0_1 o OP2[27:27] + 0x0_1 o OP2[26:26]) + 0x0_2 o (0x0_1 o OP2[25:25] + 0x0_1 o OP2[24:24]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o OP2[23:23] + 0x0_1 o OP2[22:22]) + 0x0_2 o (0x0_1 o OP2[21:21] + 0x0_1 o OP2[20:20])) + 0x0_4 o (0x0_2 o (0x0_1 o OP2[19:19] + 0x0_1 o OP2[18:18]) + 0x0_2 o (0x0_1 o OP2[17:17] + 0x0_1 o OP2[16:16])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o OP2[15:15] + 0x0_1 o OP2[14:14]) + 0x0_2 o (0x0_1 o OP2[13:13] + 0x0_1 o OP2[12:12])) + 0x0_4 o (0x0_2 o (0x0_1 o OP2[11:11] + 0x0_1 o OP2[10:10]) + 0x0_2 o (0x0_1 o OP2[9:9] + 0x0_1 o OP2[8:8]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o OP2[7:7] + 0x0_1 o OP2[6:6]) + 0x0_2 o (0x0_1 o OP2[5:5] + 0x0_1 o OP2[4:4])) + 0x0_4 o (0x0_2 o (0x0_1 o OP2[3:3] + 0x0_1 o OP2[2:2]) + 0x0_2 o (0x0_1 o OP2[1:1] + 0x0_1 o OP2[0:0]))))) ; CF := false ; PF := false ; ZF := OP2[31:0] == 0x0_32 ; SF := false ; OF := false)
(popcnt r32, m32) -> (OP1 = 0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o OP2[31:31] + 0x0_1 o OP2[30:30]) + 0x0_2 o (0x0_1 o OP2[29:29] + 0x0_1 o OP2[28:28])) + 0x0_4 o (0x0_2 o (0x0_1 o OP2[27:27] + 0x0_1 o OP2[26:26]) + 0x0_2 o (0x0_1 o OP2[25:25] + 0x0_1 o OP2[24:24]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o OP2[23:23] + 0x0_1 o OP2[22:22]) + 0x0_2 o (0x0_1 o OP2[21:21] + 0x0_1 o OP2[20:20])) + 0x0_4 o (0x0_2 o (0x0_1 o OP2[19:19] + 0x0_1 o OP2[18:18]) + 0x0_2 o (0x0_1 o OP2[17:17] + 0x0_1 o OP2[16:16])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o OP2[15:15] + 0x0_1 o OP2[14:14]) + 0x0_2 o (0x0_1 o OP2[13:13] + 0x0_1 o OP2[12:12])) + 0x0_4 o (0x0_2 o (0x0_1 o OP2[11:11] + 0x0_1 o OP2[10:10]) + 0x0_2 o (0x0_1 o OP2[9:9] + 0x0_1 o OP2[8:8]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o OP2[7:7] + 0x0_1 o OP2[6:6]) + 0x0_2 o (0x0_1 o OP2[5:5] + 0x0_1 o OP2[4:4])) + 0x0_4 o (0x0_2 o (0x0_1 o OP2[3:3] + 0x0_1 o OP2[2:2]) + 0x0_2 o (0x0_1 o OP2[1:1] + 0x0_1 o OP2[0:0]))))) ; CF := false ; PF := false ; ZF := OP2[31:0] == 0x0_32 ; SF := false ; OF := false)
(popcnt r64, r64) -> (OP1 = 0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o OP2[63:63] + 0x0_1 o OP2[62:62]) + 0x0_2 o (0x0_1 o OP2[61:61] + 0x0_1 o OP2[60:60])) + 0x0_4 o (0x0_2 o (0x0_1 o OP2[59:59] + 0x0_1 o OP2[58:58]) + 0x0_2 o (0x0_1 o OP2[57:57] + 0x0_1 o OP2[56:56]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o OP2[55:55] + 0x0_1 o OP2[54:54]) + 0x0_2 o (0x0_1 o OP2[53:53] + 0x0_1 o OP2[52:52])) + 0x0_4 o (0x0_2 o (0x0_1 o OP2[51:51] + 0x0_1 o OP2[50:50]) + 0x0_2 o (0x0_1 o OP2[49:49] + 0x0_1 o OP2[48:48])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o OP2[47:47] + 0x0_1 o OP2[46:46]) + 0x0_2 o (0x0_1 o OP2[45:45] + 0x0_1 o OP2[44:44])) + 0x0_4 o (0x0_2 o (0x0_1 o OP2[43:43] + 0x0_1 o OP2[42:42]) + 0x0_2 o (0x0_1 o OP2[41:41] + 0x0_1 o OP2[40:40]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o OP2[39:39] + 0x0_1 o OP2[38:38]) + 0x0_2 o (0x0_1 o OP2[37:37] + 0x0_1 o OP2[36:36])) + 0x0_4 o (0x0_2 o (0x0_1 o OP2[35:35] + 0x0_1 o OP2[34:34]) + 0x0_2 o (0x0_1 o OP2[33:33] + 0x0_1 o OP2[32:32]))))) + 0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o OP2[31:31] + 0x0_1 o OP2[30:30]) + 0x0_2 o (0x0_1 o OP2[29:29] + 0x0_1 o OP2[28:28])) + 0x0_4 o (0x0_2 o (0x0_1 o OP2[27:27] + 0x0_1 o OP2[26:26]) + 0x0_2 o (0x0_1 o OP2[25:25] + 0x0_1 o OP2[24:24]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o OP2[23:23] + 0x0_1 o OP2[22:22]) + 0x0_2 o (0x0_1 o OP2[21:21] + 0x0_1 o OP2[20:20])) + 0x0_4 o (0x0_2 o (0x0_1 o OP2[19:19] + 0x0_1 o OP2[18:18]) + 0x0_2 o (0x0_1 o OP2[17:17] + 0x0_1 o OP2[16:16])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o OP2[15:15] + 0x0_1 o OP2[14:14]) + 0x0_2 o (0x0_1 o OP2[13:13] + 0x0_1 o OP2[12:12])) + 0x0_4 o (0x0_2 o (0x0_1 o OP2[11:11] + 0x0_1 o OP2[10:10]) + 0x0_2 o (0x0_1 o OP2[9:9] + 0x0_1 o OP2[8:8]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o OP2[7:7] + 0x0_1 o OP2[6:6]) + 0x0_2 o (0x0_1 o OP2[5:5] + 0x0_1 o OP2[4:4])) + 0x0_4 o (0x0_2 o (0x0_1 o OP2[3:3] + 0x0_1 o OP2[2:2]) + 0x0_2 o (0x0_1 o OP2[1:1] + 0x0_1 o OP2[0:0]))))) ; CF := false ; PF := false ; ZF := OP2 == 0x0_64 ; SF := false ; OF := false)
(popcnt r64, m64) -> (OP1 = 0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o OP2[63:63] + 0x0_1 o OP2[62:62]) + 0x0_2 o (0x0_1 o OP2[61:61] + 0x0_1 o OP2[60:60])) + 0x0_4 o (0x0_2 o (0x0_1 o OP2[59:59] + 0x0_1 o OP2[58:58]) + 0x0_2 o (0x0_1 o OP2[57:57] + 0x0_1 o OP2[56:56]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o OP2[55:55] + 0x0_1 o OP2[54:54]) + 0x0_2 o (0x0_1 o OP2[53:53] + 0x0_1 o OP2[52:52])) + 0x0_4 o (0x0_2 o (0x0_1 o OP2[51:51] + 0x0_1 o OP2[50:50]) + 0x0_2 o (0x0_1 o OP2[49:49] + 0x0_1 o OP2[48:48])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o OP2[47:47] + 0x0_1 o OP2[46:46]) + 0x0_2 o (0x0_1 o OP2[45:45] + 0x0_1 o OP2[44:44])) + 0x0_4 o (0x0_2 o (0x0_1 o OP2[43:43] + 0x0_1 o OP2[42:42]) + 0x0_2 o (0x0_1 o OP2[41:41] + 0x0_1 o OP2[40:40]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o OP2[39:39] + 0x0_1 o OP2[38:38]) + 0x0_2 o (0x0_1 o OP2[37:37] + 0x0_1 o OP2[36:36])) + 0x0_4 o (0x0_2 o (0x0_1 o OP2[35:35] + 0x0_1 o OP2[34:34]) + 0x0_2 o (0x0_1 o OP2[33:33] + 0x0_1 o OP2[32:32]))))) + 0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o OP2[31:31] + 0x0_1 o OP2[30:30]) + 0x0_2 o (0x0_1 o OP2[29:29] + 0x0_1 o OP2[28:28])) + 0x0_4 o (0x0_2 o (0x0_1 o OP2[27:27] + 0x0_1 o OP2[26:26]) + 0x0_2 o (0x0_1 o OP2[25:25] + 0x0_1 o OP2[24:24]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o OP2[23:23] + 0x0_1 o OP2[22:22]) + 0x0_2 o (0x0_1 o OP2[21:21] + 0x0_1 o OP2[20:20])) + 0x0_4 o (0x0_2 o (0x0_1 o OP2[19:19] + 0x0_1 o OP2[18:18]) + 0x0_2 o (0x0_1 o OP2[17:17] + 0x0_1 o OP2[16:16])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o OP2[15:15] + 0x0_1 o OP2[14:14]) + 0x0_2 o (0x0_1 o OP2[13:13] + 0x0_1 o OP2[12:12])) + 0x0_4 o (0x0_2 o (0x0_1 o OP2[11:11] + 0x0_1 o OP2[10:10]) + 0x0_2 o (0x0_1 o OP2[9:9] + 0x0_1 o OP2[8:8]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o OP2[7:7] + 0x0_1 o OP2[6:6]) + 0x0_2 o (0x0_1 o OP2[5:5] + 0x0_1 o OP2[4:4])) + 0x0_4 o (0x0_2 o (0x0_1 o OP2[3:3] + 0x0_1 o OP2[2:2]) + 0x0_2 o (0x0_1 o OP2[1:1] + 0x0_1 o OP2[0:0]))))) ; CF := false ; PF := false ; ZF := OP2 == 0x0_64 ; SF := false ; OF := false)
(popcnt r16, r16) -> (OP1 = OP1[63:16] o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o OP2[15:15] + 0x0_1 o OP2[14:14]) + 0x0_2 o (0x0_1 o OP2[13:13] + 0x0_1 o OP2[12:12])) + 0x0_4 o (0x0_2 o (0x0_1 o OP2[11:11] + 0x0_1 o OP2[10:10]) + 0x0_2 o (0x0_1 o OP2[9:9] + 0x0_1 o OP2[8:8]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o OP2[7:7] + 0x0_1 o OP2[6:6]) + 0x0_2 o (0x0_1 o OP2[5:5] + 0x0_1 o OP2[4:4])) + 0x0_4 o (0x0_2 o (0x0_1 o OP2[3:3] + 0x0_1 o OP2[2:2]) + 0x0_2 o (0x0_1 o OP2[1:1] + 0x0_1 o OP2[0:0])))) ; CF := false ; PF := false ; ZF := OP2[15:0] == 0x0_16 ; SF := false ; OF := false)
(popcnt r16, m16) -> (OP1 = OP1[63:16] o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o OP2[15:15] + 0x0_1 o OP2[14:14]) + 0x0_2 o (0x0_1 o OP2[13:13] + 0x0_1 o OP2[12:12])) + 0x0_4 o (0x0_2 o (0x0_1 o OP2[11:11] + 0x0_1 o OP2[10:10]) + 0x0_2 o (0x0_1 o OP2[9:9] + 0x0_1 o OP2[8:8]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o OP2[7:7] + 0x0_1 o OP2[6:6]) + 0x0_2 o (0x0_1 o OP2[5:5] + 0x0_1 o OP2[4:4])) + 0x0_4 o (0x0_2 o (0x0_1 o OP2[3:3] + 0x0_1 o OP2[2:2]) + 0x0_2 o (0x0_1 o OP2[1:1] + 0x0_1 o OP2[0:0])))) ; CF := false ; PF := false ; ZF := OP2[15:0] == 0x0_16 ; SF := false ; OF := false)
(por xmm, m128) -> (OP1 = OP1[255:128] o (OP1[127:0] | OP2[127:0]))
(por xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:0] | OP2[127:0]))
(psubd xmm, m128) -> (OP1 = OP1[255:128] o ((OP1[127:96] - OP2[127:96]) o ((OP1[95:64] - OP2[95:64]) o ((OP1[63:32] - OP2[63:32]) o (OP1[31:0] - OP2[31:0])))))
(psubd xmm, xmm) -> (OP1 = OP1[255:128] o ((OP1[127:96] - OP2[127:96]) o ((OP1[95:64] - OP2[95:64]) o ((OP1[63:32] - OP2[63:32]) o (OP1[31:0] - OP2[31:0])))))
(psubq xmm, m128) -> (OP1 = OP1[255:128] o ((OP1[127:64] - OP2[127:64]) o (OP1[63:0] - OP2[63:0])))
(psubq xmm, xmm) -> (OP1 = OP1[255:128] o ((OP1[127:64] - OP2[127:64]) o (OP1[63:0] - OP2[63:0])))
(punpckhdq xmm, m128) -> (OP1 = OP1[255:128] o (OP2[127:96] o OP1[127:96] o (OP2[95:64] o OP1[95:64])))
(punpckhdq xmm, xmm) -> (OP1 = OP1[255:128] o (OP2[127:96] o OP1[127:96] o (OP2[95:64] o OP1[95:64])))
(punpckhqdq xmm, m128) -> (OP1 = OP1[255:128] o (OP2[127:64] o OP1[127:64]))
(punpckhqdq xmm, xmm) -> (OP1 = OP1[255:128] o (OP2[127:64] o OP1[127:64]))
(punpckhwd xmm, m128) -> (OP1 = OP1[255:128] o (OP2[127:112] o OP1[127:112] o (OP2[111:96] o OP1[111:96] o (OP2[95:80] o OP1[95:80] o (OP2[79:64] o OP1[79:64])))))
(punpckhwd xmm, xmm) -> (OP1 = OP1[255:128] o (OP2[127:112] o OP1[127:112] o (OP2[111:96] o OP1[111:96] o (OP2[95:80] o OP1[95:80] o (OP2[79:64] o OP1[79:64])))))
(punpckldq xmm, m128) -> (OP1 = OP1[255:128] o (OP2[63:32] o OP1[63:32] o (OP2[31:0] o OP1[31:0])))
(punpckldq xmm, xmm) -> (OP1 = OP1[255:128] o (OP2[63:32] o OP1[63:32] o (OP2[31:0] o OP1[31:0])))
(punpcklqdq xmm, m128) -> (OP1 = OP1[255:128] o (OP2[63:0] o OP1[63:0]))
(punpcklqdq xmm, xmm) -> (OP1 = OP1[255:128] o (OP2[63:0] o OP1[63:0]))
(punpcklwd xmm, m128) -> (OP1 = OP1[255:128] o (OP2[63:48] o OP1[63:48] o (OP2[47:32] o OP1[47:32] o (OP2[31:16] o OP1[31:16] o (OP2[15:0] o OP1[15:0])))))
(punpcklwd xmm, xmm) -> (OP1 = OP1[255:128] o (OP2[63:48] o OP1[63:48] o (OP2[47:32] o OP1[47:32] o (OP2[31:16] o OP1[31:16] o (OP2[15:0] o OP1[15:0])))))
(pxor xmm, m128) -> (OP1 = OP1[255:128] o (OP1[127:0] ^ OP2[127:0]))
(pxor xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:0] ^ OP2[127:0]))
(rcl rh, one) -> (OP1 = OP1[63:16] o ((CF ? 0x1_1 : 0x0_1) o OP1[15:8] rot_left 0x9_9)[7:0] o OP1[7:0] ; CF := ((CF ? 0x1_1 : 0x0_1) o OP1[15:8] rot_left 0x9_9)[8:8] == 0x1_1 ; OF := false bool_and (((CF ? 0x1_1 : 0x0_1) o OP1[15:8] rot_left 0x9_9)[8:8] == 0x1_1 bool_xor ((CF ? 0x1_1 : 0x0_1) o OP1[15:8] rot_left 0x9_9)[7:7] == 0x1_1) bool_or true bool_and (true bool_and OF bool_or false bool_and undefined))
(rcl r8, one) -> (OP1 = OP1[63:8] o ((CF ? 0x1_1 : 0x0_1) o OP1[7:0] rot_left 0x9_9)[7:0] ; CF := ((CF ? 0x1_1 : 0x0_1) o OP1[7:0] rot_left 0x9_9)[8:8] == 0x1_1 ; OF := false bool_and (((CF ? 0x1_1 : 0x0_1) o OP1[7:0] rot_left 0x9_9)[8:8] == 0x1_1 bool_xor ((CF ? 0x1_1 : 0x0_1) o OP1[7:0] rot_left 0x9_9)[7:7] == 0x1_1) bool_or true bool_and (true bool_and OF bool_or false bool_and undefined))
(rcl m8, one) -> (OP1 = (OP1[63:8] o ((CF ? 0x1_1 : 0x0_1) o OP1[7:0] rot_left 0x9_9)[7:0])[7:0] ; CF := ((CF ? 0x1_1 : 0x0_1) o OP1[7:0] rot_left 0x9_9)[8:8] == 0x1_1 ; OF := false bool_and (((CF ? 0x1_1 : 0x0_1) o OP1[7:0] rot_left 0x9_9)[8:8] == 0x1_1 bool_xor ((CF ? 0x1_1 : 0x0_1) o OP1[7:0] rot_left 0x9_9)[7:7] == 0x1_1) bool_or true bool_and (true bool_and OF bool_or false bool_and undefined))
(rcl r32, one) -> (OP1 = 0x0_32 o ((CF ? 0x1_1 : 0x0_1) o OP1[31:0] rot_left 0x21_33)[31:0] ; CF := ((CF ? 0x1_1 : 0x0_1) o OP1[31:0] rot_left 0x21_33)[32:32] == 0x1_1 ; OF := false bool_and (((CF ? 0x1_1 : 0x0_1) o OP1[31:0] rot_left 0x21_33)[32:32] == 0x1_1 bool_xor ((CF ? 0x1_1 : 0x0_1) o OP1[31:0] rot_left 0x21_33)[31:31] == 0x1_1) bool_or true bool_and (true bool_and OF bool_or false bool_and undefined))
(rcl m32, one) -> (OP1 = (0x0_32 o ((CF ? 0x1_1 : 0x0_1) o OP1[31:0] rot_left 0x21_33)[31:0])[31:0] ; CF := ((CF ? 0x1_1 : 0x0_1) o OP1[31:0] rot_left 0x21_33)[32:32] == 0x1_1 ; OF := false bool_and (((CF ? 0x1_1 : 0x0_1) o OP1[31:0] rot_left 0x21_33)[32:32] == 0x1_1 bool_xor ((CF ? 0x1_1 : 0x0_1) o OP1[31:0] rot_left 0x21_33)[31:31] == 0x1_1) bool_or true bool_and (true bool_and OF bool_or false bool_and undefined))
(rcl r64, one) -> (OP1 = ((CF ? 0x1_1 : 0x0_1) o OP1 rot_left 0x0_57 o 0x1_8 % 0x41_65)[63:0] ; CF := ((CF ? 0x1_1 : 0x0_1) o OP1 rot_left 0x0_57 o 0x1_8 % 0x41_65)[64:64] == 0x1_1 ; OF := (0x0_57 o 0x1_8 % 0x41_65)[7:0] == 0x1_8 bool_and (((CF ? 0x1_1 : 0x0_1) o OP1 rot_left 0x0_57 o 0x1_8 % 0x41_65)[64:64] == 0x1_1 bool_xor ((CF ? 0x1_1 : 0x0_1) o OP1 rot_left 0x0_57 o 0x1_8 % 0x41_65)[63:63] == 0x1_1) bool_or !((0x0_57 o 0x1_8 % 0x41_65)[7:0] == 0x1_8) bool_and (!((0x0_57 o 0x1_8 % 0x41_65)[7:0] == 0x0_8) bool_and OF bool_or !(!((0x0_57 o 0x1_8 % 0x41_65)[7:0] == 0x0_8)) bool_and undefined))
(rcl m64, one) -> (OP1 = (((CF ? 0x1_1 : 0x0_1) o OP1 rot_left 0x0_57 o 0x1_8 % 0x41_65)[63:0])[63:0] ; CF := ((CF ? 0x1_1 : 0x0_1) o OP1 rot_left 0x0_57 o 0x1_8 % 0x41_65)[64:64] == 0x1_1 ; OF := (0x0_57 o 0x1_8 % 0x41_65)[7:0] == 0x1_8 bool_and (((CF ? 0x1_1 : 0x0_1) o OP1 rot_left 0x0_57 o 0x1_8 % 0x41_65)[64:64] == 0x1_1 bool_xor ((CF ? 0x1_1 : 0x0_1) o OP1 rot_left 0x0_57 o 0x1_8 % 0x41_65)[63:63] == 0x1_1) bool_or !((0x0_57 o 0x1_8 % 0x41_65)[7:0] == 0x1_8) bool_and (!((0x0_57 o 0x1_8 % 0x41_65)[7:0] == 0x0_8) bool_and OF bool_or !(!((0x0_57 o 0x1_8 % 0x41_65)[7:0] == 0x0_8)) bool_and undefined))
(rcl r16, one) -> (OP1 = OP1[63:16] o ((CF ? 0x1_1 : 0x0_1) o OP1[15:0] rot_left 0x11_17)[15:0] ; CF := ((CF ? 0x1_1 : 0x0_1) o OP1[15:0] rot_left 0x11_17)[16:16] == 0x1_1 ; OF := false bool_and (((CF ? 0x1_1 : 0x0_1) o OP1[15:0] rot_left 0x11_17)[16:16] == 0x1_1 bool_xor ((CF ? 0x1_1 : 0x0_1) o OP1[15:0] rot_left 0x11_17)[15:15] == 0x1_1) bool_or true bool_and (true bool_and OF bool_or false bool_and undefined))
(rcl m16, one) -> (OP1 = (OP1[63:16] o ((CF ? 0x1_1 : 0x0_1) o OP1[15:0] rot_left 0x11_17)[15:0])[15:0] ; CF := ((CF ? 0x1_1 : 0x0_1) o OP1[15:0] rot_left 0x11_17)[16:16] == 0x1_1 ; OF := false bool_and (((CF ? 0x1_1 : 0x0_1) o OP1[15:0] rot_left 0x11_17)[16:16] == 0x1_1 bool_xor ((CF ? 0x1_1 : 0x0_1) o OP1[15:0] rot_left 0x11_17)[15:15] == 0x1_1) bool_or true bool_and (true bool_and OF bool_or false bool_and undefined))
(rcpps xmm, m128) -> (OP1 = OP1[255:128] o (approx_reciprocal_single(OP2[127:96]) o (approx_reciprocal_single(OP2[95:64]) o (approx_reciprocal_single(OP2[63:32]) o approx_reciprocal_single(OP2[31:0])))))
(rcpps xmm, xmm) -> (OP1 = OP1[255:128] o (approx_reciprocal_single(OP2[127:96]) o (approx_reciprocal_single(OP2[95:64]) o (approx_reciprocal_single(OP2[63:32]) o approx_reciprocal_single(OP2[31:0])))))
(rcpss xmm, m32) -> (OP1 = OP1[255:128] o (OP1[127:32] o approx_reciprocal_single(OP2[31:0])))
(rcpss xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:32] o approx_reciprocal_single(OP2[31:0])))
(rol rh, one) -> (OP1 = OP1[63:16] o (OP1[15:8] rot_left 0x1_8) o OP1[7:0] ; CF := true bool_and (OP1[15:8] rot_left 0x1_8)[0:0] == 0x1_1 bool_or false bool_and CF ; OF := true bool_and ((OP1[15:8] rot_left 0x1_8)[7:7] == 0x1_1 bool_xor (OP1[15:8] rot_left 0x1_8)[0:0] == 0x1_1) bool_or false bool_and undefined)
(rol r8, one) -> (OP1 = OP1[63:8] o (OP1[7:0] rot_left 0x1_8) ; CF := true bool_and (OP1[7:0] rot_left 0x1_8)[0:0] == 0x1_1 bool_or false bool_and CF ; OF := true bool_and ((OP1[7:0] rot_left 0x1_8)[7:7] == 0x1_1 bool_xor (OP1[7:0] rot_left 0x1_8)[0:0] == 0x1_1) bool_or false bool_and undefined)
(rol m8, one) -> (OP1 = (OP1[63:8] o (OP1[7:0] rot_left 0x1_8))[7:0] ; CF := true bool_and (OP1[7:0] rot_left 0x1_8)[0:0] == 0x1_1 bool_or false bool_and CF ; OF := true bool_and ((OP1[7:0] rot_left 0x1_8)[7:7] == 0x1_1 bool_xor (OP1[7:0] rot_left 0x1_8)[0:0] == 0x1_1) bool_or false bool_and undefined)
(rol r32, one) -> (OP1 = 0x0_32 o (OP1[31:0] rot_left 0x1_32) ; CF := true bool_and (OP1[31:0] rot_left 0x1_32)[0:0] == 0x1_1 bool_or false bool_and CF ; OF := true bool_and ((OP1[31:0] rot_left 0x1_32)[31:31] == 0x1_1 bool_xor (OP1[31:0] rot_left 0x1_32)[0:0] == 0x1_1) bool_or false bool_and undefined)
(rol m32, one) -> (OP1 = (0x0_32 o (OP1[31:0] rot_left 0x1_32))[31:0] ; CF := true bool_and (OP1[31:0] rot_left 0x1_32)[0:0] == 0x1_1 bool_or false bool_and CF ; OF := true bool_and ((OP1[31:0] rot_left 0x1_32)[31:31] == 0x1_1 bool_xor (OP1[31:0] rot_left 0x1_32)[0:0] == 0x1_1) bool_or false bool_and undefined)
(rol r64, one) -> (OP1 = OP1 rot_left 0x1_64 ; CF := true bool_and (OP1 rot_left 0x1_64)[0:0] == 0x1_1 bool_or false bool_and CF ; OF := true bool_and ((OP1 rot_left 0x1_64)[63:63] == 0x1_1 bool_xor (OP1 rot_left 0x1_64)[0:0] == 0x1_1) bool_or false bool_and undefined)
(rol m64, one) -> (OP1 = (OP1 rot_left 0x1_64)[63:0] ; CF := true bool_and (OP1 rot_left 0x1_64)[0:0] == 0x1_1 bool_or false bool_and CF ; OF := true bool_and ((OP1 rot_left 0x1_64)[63:63] == 0x1_1 bool_xor (OP1 rot_left 0x1_64)[0:0] == 0x1_1) bool_or false bool_and undefined)
(rol r16, one) -> (OP1 = OP1[63:16] o (OP1[15:0] rot_left 0x1_16) ; CF := true bool_and (OP1[15:0] rot_left 0x1_16)[0:0] == 0x1_1 bool_or false bool_and CF ; OF := true bool_and ((OP1[15:0] rot_left 0x1_16)[15:15] == 0x1_1 bool_xor (OP1[15:0] rot_left 0x1_16)[0:0] == 0x1_1) bool_or false bool_and undefined)
(rol m16, one) -> (OP1 = (OP1[63:16] o (OP1[15:0] rot_left 0x1_16))[15:0] ; CF := true bool_and (OP1[15:0] rot_left 0x1_16)[0:0] == 0x1_1 bool_or false bool_and CF ; OF := true bool_and ((OP1[15:0] rot_left 0x1_16)[15:15] == 0x1_1 bool_xor (OP1[15:0] rot_left 0x1_16)[0:0] == 0x1_1) bool_or false bool_and undefined)
(ror rh, one) -> (OP1 = OP1[63:16] o (OP1[15:8] rot_right 0x1_8) o OP1[7:0] ; CF := true bool_and (OP1[15:8] rot_right 0x1_8)[7:7] == 0x1_1 bool_or false bool_and CF ; OF := true bool_and ((OP1[15:8] rot_right 0x1_8)[7:7] == 0x1_1 bool_xor (OP1[15:8] rot_right 0x1_8)[6:6] == 0x1_1) bool_or false bool_and undefined)
(ror r8, one) -> (OP1 = OP1[63:8] o (OP1[7:0] rot_right 0x1_8) ; CF := true bool_and (OP1[7:0] rot_right 0x1_8)[7:7] == 0x1_1 bool_or false bool_and CF ; OF := true bool_and ((OP1[7:0] rot_right 0x1_8)[7:7] == 0x1_1 bool_xor (OP1[7:0] rot_right 0x1_8)[6:6] == 0x1_1) bool_or false bool_and undefined)
(ror m8, one) -> (OP1 = (OP1[63:8] o (OP1[7:0] rot_right 0x1_8))[7:0] ; CF := true bool_and (OP1[7:0] rot_right 0x1_8)[7:7] == 0x1_1 bool_or false bool_and CF ; OF := true bool_and ((OP1[7:0] rot_right 0x1_8)[7:7] == 0x1_1 bool_xor (OP1[7:0] rot_right 0x1_8)[6:6] == 0x1_1) bool_or false bool_and undefined)
(ror r16, one) -> (OP1 = OP1[63:16] o (OP1[15:0] rot_right 0x1_16) ; CF := true bool_and (OP1[15:0] rot_right 0x1_16)[15:15] == 0x1_1 bool_or false bool_and CF ; OF := true bool_and ((OP1[15:0] rot_right 0x1_16)[15:15] == 0x1_1 bool_xor (OP1[15:0] rot_right 0x1_16)[14:14] == 0x1_1) bool_or false bool_and undefined)
(ror m16, one) -> (OP1 = (OP1[63:16] o (OP1[15:0] rot_right 0x1_16))[15:0] ; CF := true bool_and (OP1[15:0] rot_right 0x1_16)[15:15] == 0x1_1 bool_or false bool_and CF ; OF := true bool_and ((OP1[15:0] rot_right 0x1_16)[15:15] == 0x1_1 bool_xor (OP1[15:0] rot_right 0x1_16)[14:14] == 0x1_1) bool_or false bool_and undefined)
(rsqrtps xmm, m128) -> (OP1 = OP1[255:128] o (approx_reciprocal_sqrt_single(OP2[127:96]) o (approx_reciprocal_sqrt_single(OP2[95:64]) o (approx_reciprocal_sqrt_single(OP2[63:32]) o approx_reciprocal_sqrt_single(OP2[31:0])))))
(rsqrtps xmm, xmm) -> (OP1 = OP1[255:128] o (approx_reciprocal_sqrt_single(OP2[127:96]) o (approx_reciprocal_sqrt_single(OP2[95:64]) o (approx_reciprocal_sqrt_single(OP2[63:32]) o approx_reciprocal_sqrt_single(OP2[31:0])))))
(rsqrtss xmm, m32) -> (OP1 = OP1[255:128] o (OP1[127:32] o approx_reciprocal_sqrt_single(OP2[31:0])))
(rsqrtss xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:32] o approx_reciprocal_sqrt_single(OP2[31:0])))
(sal rh, one) -> (OP1 = OP1[63:16] o (0x0_1 o OP1[15:8] << 0x1_9)[7:0] o OP1[7:0] ; CF := false bool_and undefined bool_or true bool_and (true bool_and (0x0_1 o OP1[15:8] << 0x1_9)[8:8] == 0x1_1 bool_or false bool_and CF) ; PF := true bool_and !((0x0_1 o OP1[15:8] << 0x1_9)[0:0] == 0x1_1 bool_xor (0x0_1 o OP1[15:8] << 0x1_9)[1:1] == 0x1_1 bool_xor (0x0_1 o OP1[15:8] << 0x1_9)[2:2] == 0x1_1 bool_xor (0x0_1 o OP1[15:8] << 0x1_9)[3:3] == 0x1_1 bool_xor (0x0_1 o OP1[15:8] << 0x1_9)[4:4] == 0x1_1 bool_xor (0x0_1 o OP1[15:8] << 0x1_9)[5:5] == 0x1_1 bool_xor (0x0_1 o OP1[15:8] << 0x1_9)[6:6] == 0x1_1 bool_xor (0x0_1 o OP1[15:8] << 0x1_9)[7:7] == 0x1_1) bool_or false bool_and PF ; ZF := true bool_and (0x0_1 o OP1[15:8] << 0x1_9)[7:0] == 0x0_8 bool_or false bool_and ZF ; SF := true bool_and (0x0_1 o OP1[15:8] << 0x1_9)[7:7] == 0x1_1 bool_or false bool_and SF ; OF := true bool_and !(false bool_and undefined bool_or true bool_and (true bool_and (0x0_1 o OP1[15:8] << 0x1_9)[8:8] == 0x1_1 bool_or false bool_and CF) bool_iff (0x0_1 o OP1[15:8] << 0x1_9)[7:7] == 0x1_1) bool_or false bool_and OF)
(sal r8, one) -> (OP1 = OP1[63:8] o (0x0_1 o OP1[7:0] << 0x1_9)[7:0] ; CF := false bool_and undefined bool_or true bool_and (true bool_and (0x0_1 o OP1[7:0] << 0x1_9)[8:8] == 0x1_1 bool_or false bool_and CF) ; PF := true bool_and !((0x0_1 o OP1[7:0] << 0x1_9)[0:0] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] << 0x1_9)[1:1] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] << 0x1_9)[2:2] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] << 0x1_9)[3:3] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] << 0x1_9)[4:4] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] << 0x1_9)[5:5] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] << 0x1_9)[6:6] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] << 0x1_9)[7:7] == 0x1_1) bool_or false bool_and PF ; ZF := true bool_and (0x0_1 o OP1[7:0] << 0x1_9)[7:0] == 0x0_8 bool_or false bool_and ZF ; SF := true bool_and (0x0_1 o OP1[7:0] << 0x1_9)[7:7] == 0x1_1 bool_or false bool_and SF ; OF := true bool_and !(false bool_and undefined bool_or true bool_and (true bool_and (0x0_1 o OP1[7:0] << 0x1_9)[8:8] == 0x1_1 bool_or false bool_and CF) bool_iff (0x0_1 o OP1[7:0] << 0x1_9)[7:7] == 0x1_1) bool_or false bool_and OF)
(sal m8, one) -> (OP1 = (OP1[63:8] o (0x0_1 o OP1[7:0] << 0x1_9)[7:0])[7:0] ; CF := false bool_and undefined bool_or true bool_and (true bool_and (0x0_1 o OP1[7:0] << 0x1_9)[8:8] == 0x1_1 bool_or false bool_and CF) ; PF := true bool_and !((0x0_1 o OP1[7:0] << 0x1_9)[0:0] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] << 0x1_9)[1:1] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] << 0x1_9)[2:2] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] << 0x1_9)[3:3] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] << 0x1_9)[4:4] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] << 0x1_9)[5:5] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] << 0x1_9)[6:6] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] << 0x1_9)[7:7] == 0x1_1) bool_or false bool_and PF ; ZF := true bool_and (0x0_1 o OP1[7:0] << 0x1_9)[7:0] == 0x0_8 bool_or false bool_and ZF ; SF := true bool_and (0x0_1 o OP1[7:0] << 0x1_9)[7:7] == 0x1_1 bool_or false bool_and SF ; OF := true bool_and !(false bool_and undefined bool_or true bool_and (true bool_and (0x0_1 o OP1[7:0] << 0x1_9)[8:8] == 0x1_1 bool_or false bool_and CF) bool_iff (0x0_1 o OP1[7:0] << 0x1_9)[7:7] == 0x1_1) bool_or false bool_and OF)
(sal r32, one) -> (OP1 = 0x0_32 o (0x0_1 o OP1[31:0] << 0x1_33)[31:0] ; CF := false bool_and undefined bool_or true bool_and (true bool_and (0x0_1 o OP1[31:0] << 0x1_33)[32:32] == 0x1_1 bool_or false bool_and CF) ; PF := true bool_and !((0x0_1 o OP1[31:0] << 0x1_33)[0:0] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] << 0x1_33)[1:1] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] << 0x1_33)[2:2] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] << 0x1_33)[3:3] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] << 0x1_33)[4:4] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] << 0x1_33)[5:5] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] << 0x1_33)[6:6] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] << 0x1_33)[7:7] == 0x1_1) bool_or false bool_and PF ; ZF := true bool_and (0x0_1 o OP1[31:0] << 0x1_33)[31:0] == 0x0_32 bool_or false bool_and ZF ; SF := true bool_and (0x0_1 o OP1[31:0] << 0x1_33)[31:31] == 0x1_1 bool_or false bool_and SF ; OF := true bool_and !(false bool_and undefined bool_or true bool_and (true bool_and (0x0_1 o OP1[31:0] << 0x1_33)[32:32] == 0x1_1 bool_or false bool_and CF) bool_iff (0x0_1 o OP1[31:0] << 0x1_33)[31:31] == 0x1_1) bool_or false bool_and OF)
(sal m32, one) -> (OP1 = (0x0_32 o (0x0_1 o OP1[31:0] << 0x1_33)[31:0])[31:0] ; CF := false bool_and undefined bool_or true bool_and (true bool_and (0x0_1 o OP1[31:0] << 0x1_33)[32:32] == 0x1_1 bool_or false bool_and CF) ; PF := true bool_and !((0x0_1 o OP1[31:0] << 0x1_33)[0:0] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] << 0x1_33)[1:1] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] << 0x1_33)[2:2] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] << 0x1_33)[3:3] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] << 0x1_33)[4:4] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] << 0x1_33)[5:5] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] << 0x1_33)[6:6] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] << 0x1_33)[7:7] == 0x1_1) bool_or false bool_and PF ; ZF := true bool_and (0x0_1 o OP1[31:0] << 0x1_33)[31:0] == 0x0_32 bool_or false bool_and ZF ; SF := true bool_and (0x0_1 o OP1[31:0] << 0x1_33)[31:31] == 0x1_1 bool_or false bool_and SF ; OF := true bool_and !(false bool_and undefined bool_or true bool_and (true bool_and (0x0_1 o OP1[31:0] << 0x1_33)[32:32] == 0x1_1 bool_or false bool_and CF) bool_iff (0x0_1 o OP1[31:0] << 0x1_33)[31:31] == 0x1_1) bool_or false bool_and OF)
(sal r64, one) -> (OP1 = (0x0_1 o OP1 << 0x0_57 o 0x1_8)[63:0] ; CF := false bool_and undefined bool_or true bool_and (true bool_and (0x0_1 o OP1 << 0x0_57 o 0x1_8)[64:64] == 0x1_1 bool_or false bool_and CF) ; PF := true bool_and !((0x0_1 o OP1 << 0x0_57 o 0x1_8)[0:0] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o 0x1_8)[1:1] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o 0x1_8)[2:2] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o 0x1_8)[3:3] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o 0x1_8)[4:4] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o 0x1_8)[5:5] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o 0x1_8)[6:6] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o 0x1_8)[7:7] == 0x1_1) bool_or false bool_and PF ; ZF := true bool_and (0x0_1 o OP1 << 0x0_57 o 0x1_8)[63:0] == 0x0_64 bool_or false bool_and ZF ; SF := true bool_and (0x0_1 o OP1 << 0x0_57 o 0x1_8)[63:63] == 0x1_1 bool_or false bool_and SF ; OF := true bool_and !(false bool_and undefined bool_or true bool_and (true bool_and (0x0_1 o OP1 << 0x0_57 o 0x1_8)[64:64] == 0x1_1 bool_or false bool_and CF) bool_iff (0x0_1 o OP1 << 0x0_57 o 0x1_8)[63:63] == 0x1_1) bool_or false bool_and OF)
(sal r64, imm8) -> (OP1 = (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[63:0] ; CF := (OP2[7:0] & 0x3f_8) >= 0x40_8 bool_and undefined bool_or !((OP2[7:0] & 0x3f_8) >= 0x40_8) bool_and (!((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[64:64] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and CF) ; PF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and !((0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[0:0] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[1:1] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[2:2] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[3:3] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[4:4] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[5:5] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[6:6] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[7:7] == 0x1_1) bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and PF ; ZF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[63:0] == 0x0_64 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and ZF ; SF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[63:63] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and SF ; OF := (OP2[7:0] & 0x3f_8) == 0x1_8 bool_and !((OP2[7:0] & 0x3f_8) >= 0x40_8 bool_and undefined bool_or !((OP2[7:0] & 0x3f_8) >= 0x40_8) bool_and (!((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[64:64] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and CF) bool_iff (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[63:63] == 0x1_1) bool_or !((OP2[7:0] & 0x3f_8) == 0x1_8) bool_and OF)
(sal r64, cl) -> (OP1 = (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[63:0] ; CF := (OP2[7:0] & 0x3f_8) >= 0x40_8 bool_and undefined bool_or !((OP2[7:0] & 0x3f_8) >= 0x40_8) bool_and (!((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[64:64] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and CF) ; PF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and !((0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[0:0] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[1:1] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[2:2] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[3:3] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[4:4] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[5:5] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[6:6] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[7:7] == 0x1_1) bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and PF ; ZF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[63:0] == 0x0_64 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and ZF ; SF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[63:63] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and SF ; OF := (OP2[7:0] & 0x3f_8) == 0x1_8 bool_and !((OP2[7:0] & 0x3f_8) >= 0x40_8 bool_and undefined bool_or !((OP2[7:0] & 0x3f_8) >= 0x40_8) bool_and (!((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[64:64] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and CF) bool_iff (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[63:63] == 0x1_1) bool_or !((OP2[7:0] & 0x3f_8) == 0x1_8) bool_and OF)
(sal m64, one) -> (OP1 = ((0x0_1 o OP1 << 0x0_57 o 0x1_8)[63:0])[63:0] ; CF := false bool_and undefined bool_or true bool_and (true bool_and (0x0_1 o OP1 << 0x0_57 o 0x1_8)[64:64] == 0x1_1 bool_or false bool_and CF) ; PF := true bool_and !((0x0_1 o OP1 << 0x0_57 o 0x1_8)[0:0] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o 0x1_8)[1:1] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o 0x1_8)[2:2] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o 0x1_8)[3:3] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o 0x1_8)[4:4] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o 0x1_8)[5:5] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o 0x1_8)[6:6] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o 0x1_8)[7:7] == 0x1_1) bool_or false bool_and PF ; ZF := true bool_and (0x0_1 o OP1 << 0x0_57 o 0x1_8)[63:0] == 0x0_64 bool_or false bool_and ZF ; SF := true bool_and (0x0_1 o OP1 << 0x0_57 o 0x1_8)[63:63] == 0x1_1 bool_or false bool_and SF ; OF := true bool_and !(false bool_and undefined bool_or true bool_and (true bool_and (0x0_1 o OP1 << 0x0_57 o 0x1_8)[64:64] == 0x1_1 bool_or false bool_and CF) bool_iff (0x0_1 o OP1 << 0x0_57 o 0x1_8)[63:63] == 0x1_1) bool_or false bool_and OF)
(sal m64, imm8) -> (OP1 = ((0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[63:0])[63:0] ; CF := (OP2[7:0] & 0x3f_8) >= 0x40_8 bool_and undefined bool_or !((OP2[7:0] & 0x3f_8) >= 0x40_8) bool_and (!((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[64:64] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and CF) ; PF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and !((0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[0:0] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[1:1] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[2:2] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[3:3] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[4:4] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[5:5] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[6:6] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[7:7] == 0x1_1) bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and PF ; ZF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[63:0] == 0x0_64 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and ZF ; SF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[63:63] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and SF ; OF := (OP2[7:0] & 0x3f_8) == 0x1_8 bool_and !((OP2[7:0] & 0x3f_8) >= 0x40_8 bool_and undefined bool_or !((OP2[7:0] & 0x3f_8) >= 0x40_8) bool_and (!((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[64:64] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and CF) bool_iff (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[63:63] == 0x1_1) bool_or !((OP2[7:0] & 0x3f_8) == 0x1_8) bool_and OF)
(sal m64, cl) -> (OP1 = ((0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[63:0])[63:0] ; CF := (OP2[7:0] & 0x3f_8) >= 0x40_8 bool_and undefined bool_or !((OP2[7:0] & 0x3f_8) >= 0x40_8) bool_and (!((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[64:64] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and CF) ; PF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and !((0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[0:0] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[1:1] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[2:2] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[3:3] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[4:4] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[5:5] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[6:6] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[7:7] == 0x1_1) bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and PF ; ZF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[63:0] == 0x0_64 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and ZF ; SF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[63:63] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and SF ; OF := (OP2[7:0] & 0x3f_8) == 0x1_8 bool_and !((OP2[7:0] & 0x3f_8) >= 0x40_8 bool_and undefined bool_or !((OP2[7:0] & 0x3f_8) >= 0x40_8) bool_and (!((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[64:64] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and CF) bool_iff (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[63:63] == 0x1_1) bool_or !((OP2[7:0] & 0x3f_8) == 0x1_8) bool_and OF)
(sal r16, one) -> (OP1 = OP1[63:16] o (0x0_1 o OP1[15:0] << 0x1_17)[15:0] ; CF := false bool_and undefined bool_or true bool_and (true bool_and (0x0_1 o OP1[15:0] << 0x1_17)[16:16] == 0x1_1 bool_or false bool_and CF) ; PF := true bool_and !((0x0_1 o OP1[15:0] << 0x1_17)[0:0] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] << 0x1_17)[1:1] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] << 0x1_17)[2:2] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] << 0x1_17)[3:3] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] << 0x1_17)[4:4] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] << 0x1_17)[5:5] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] << 0x1_17)[6:6] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] << 0x1_17)[7:7] == 0x1_1) bool_or false bool_and PF ; ZF := true bool_and (0x0_1 o OP1[15:0] << 0x1_17)[15:0] == 0x0_16 bool_or false bool_and ZF ; SF := true bool_and (0x0_1 o OP1[15:0] << 0x1_17)[15:15] == 0x1_1 bool_or false bool_and SF ; OF := true bool_and !(false bool_and undefined bool_or true bool_and (true bool_and (0x0_1 o OP1[15:0] << 0x1_17)[16:16] == 0x1_1 bool_or false bool_and CF) bool_iff (0x0_1 o OP1[15:0] << 0x1_17)[15:15] == 0x1_1) bool_or false bool_and OF)
(sal m16, one) -> (OP1 = (OP1[63:16] o (0x0_1 o OP1[15:0] << 0x1_17)[15:0])[15:0] ; CF := false bool_and undefined bool_or true bool_and (true bool_and (0x0_1 o OP1[15:0] << 0x1_17)[16:16] == 0x1_1 bool_or false bool_and CF) ; PF := true bool_and !((0x0_1 o OP1[15:0] << 0x1_17)[0:0] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] << 0x1_17)[1:1] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] << 0x1_17)[2:2] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] << 0x1_17)[3:3] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] << 0x1_17)[4:4] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] << 0x1_17)[5:5] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] << 0x1_17)[6:6] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] << 0x1_17)[7:7] == 0x1_1) bool_or false bool_and PF ; ZF := true bool_and (0x0_1 o OP1[15:0] << 0x1_17)[15:0] == 0x0_16 bool_or false bool_and ZF ; SF := true bool_and (0x0_1 o OP1[15:0] << 0x1_17)[15:15] == 0x1_1 bool_or false bool_and SF ; OF := true bool_and !(false bool_and undefined bool_or true bool_and (true bool_and (0x0_1 o OP1[15:0] << 0x1_17)[16:16] == 0x1_1 bool_or false bool_and CF) bool_iff (0x0_1 o OP1[15:0] << 0x1_17)[15:15] == 0x1_1) bool_or false bool_and OF)
(sar rh, one) -> (OP1 = OP1[63:16] o (OP1[15:8] o 0x0_1 sign_shift_right 0x1_9)[8:1] o OP1[7:0] ; CF := true bool_and (OP1[15:8] o 0x0_1 sign_shift_right 0x1_9)[0:0] == 0x1_1 bool_or false bool_and CF ; PF := true bool_and !((OP1[15:8] o 0x0_1 sign_shift_right 0x1_9)[1:1] == 0x1_1 bool_xor (OP1[15:8] o 0x0_1 sign_shift_right 0x1_9)[2:2] == 0x1_1 bool_xor (OP1[15:8] o 0x0_1 sign_shift_right 0x1_9)[3:3] == 0x1_1 bool_xor (OP1[15:8] o 0x0_1 sign_shift_right 0x1_9)[4:4] == 0x1_1 bool_xor (OP1[15:8] o 0x0_1 sign_shift_right 0x1_9)[5:5] == 0x1_1 bool_xor (OP1[15:8] o 0x0_1 sign_shift_right 0x1_9)[6:6] == 0x1_1 bool_xor (OP1[15:8] o 0x0_1 sign_shift_right 0x1_9)[7:7] == 0x1_1 bool_xor (OP1[15:8] o 0x0_1 sign_shift_right 0x1_9)[8:8] == 0x1_1) bool_or false bool_and PF ; ZF := true bool_and (OP1[15:8] o 0x0_1 sign_shift_right 0x1_9)[8:1] == 0x0_8 bool_or false bool_and ZF ; SF := true bool_and (OP1[15:8] o 0x0_1 sign_shift_right 0x1_9)[8:8] == 0x1_1 bool_or false bool_and SF ; OF := false bool_or false bool_and OF)
(sar r8, one) -> (OP1 = OP1[63:8] o (OP1[7:0] o 0x0_1 sign_shift_right 0x1_9)[8:1] ; CF := true bool_and (OP1[7:0] o 0x0_1 sign_shift_right 0x1_9)[0:0] == 0x1_1 bool_or false bool_and CF ; PF := true bool_and !((OP1[7:0] o 0x0_1 sign_shift_right 0x1_9)[1:1] == 0x1_1 bool_xor (OP1[7:0] o 0x0_1 sign_shift_right 0x1_9)[2:2] == 0x1_1 bool_xor (OP1[7:0] o 0x0_1 sign_shift_right 0x1_9)[3:3] == 0x1_1 bool_xor (OP1[7:0] o 0x0_1 sign_shift_right 0x1_9)[4:4] == 0x1_1 bool_xor (OP1[7:0] o 0x0_1 sign_shift_right 0x1_9)[5:5] == 0x1_1 bool_xor (OP1[7:0] o 0x0_1 sign_shift_right 0x1_9)[6:6] == 0x1_1 bool_xor (OP1[7:0] o 0x0_1 sign_shift_right 0x1_9)[7:7] == 0x1_1 bool_xor (OP1[7:0] o 0x0_1 sign_shift_right 0x1_9)[8:8] == 0x1_1) bool_or false bool_and PF ; ZF := true bool_and (OP1[7:0] o 0x0_1 sign_shift_right 0x1_9)[8:1] == 0x0_8 bool_or false bool_and ZF ; SF := true bool_and (OP1[7:0] o 0x0_1 sign_shift_right 0x1_9)[8:8] == 0x1_1 bool_or false bool_and SF ; OF := false bool_or false bool_and OF)
(sar m8, one) -> (OP1 = (OP1[63:8] o (OP1[7:0] o 0x0_1 sign_shift_right 0x1_9)[8:1])[7:0] ; CF := true bool_and (OP1[7:0] o 0x0_1 sign_shift_right 0x1_9)[0:0] == 0x1_1 bool_or false bool_and CF ; PF := true bool_and !((OP1[7:0] o 0x0_1 sign_shift_right 0x1_9)[1:1] == 0x1_1 bool_xor (OP1[7:0] o 0x0_1 sign_shift_right 0x1_9)[2:2] == 0x1_1 bool_xor (OP1[7:0] o 0x0_1 sign_shift_right 0x1_9)[3:3] == 0x1_1 bool_xor (OP1[7:0] o 0x0_1 sign_shift_right 0x1_9)[4:4] == 0x1_1 bool_xor (OP1[7:0] o 0x0_1 sign_shift_right 0x1_9)[5:5] == 0x1_1 bool_xor (OP1[7:0] o 0x0_1 sign_shift_right 0x1_9)[6:6] == 0x1_1 bool_xor (OP1[7:0] o 0x0_1 sign_shift_right 0x1_9)[7:7] == 0x1_1 bool_xor (OP1[7:0] o 0x0_1 sign_shift_right 0x1_9)[8:8] == 0x1_1) bool_or false bool_and PF ; ZF := true bool_and (OP1[7:0] o 0x0_1 sign_shift_right 0x1_9)[8:1] == 0x0_8 bool_or false bool_and ZF ; SF := true bool_and (OP1[7:0] o 0x0_1 sign_shift_right 0x1_9)[8:8] == 0x1_1 bool_or false bool_and SF ; OF := false bool_or false bool_and OF)
(sar r32, one) -> (OP1 = 0x0_32 o (OP1[31:0] o 0x0_1 sign_shift_right 0x1_33)[32:1] ; CF := true bool_and (OP1[31:0] o 0x0_1 sign_shift_right 0x1_33)[0:0] == 0x1_1 bool_or false bool_and CF ; PF := true bool_and !((OP1[31:0] o 0x0_1 sign_shift_right 0x1_33)[1:1] == 0x1_1 bool_xor (OP1[31:0] o 0x0_1 sign_shift_right 0x1_33)[2:2] == 0x1_1 bool_xor (OP1[31:0] o 0x0_1 sign_shift_right 0x1_33)[3:3] == 0x1_1 bool_xor (OP1[31:0] o 0x0_1 sign_shift_right 0x1_33)[4:4] == 0x1_1 bool_xor (OP1[31:0] o 0x0_1 sign_shift_right 0x1_33)[5:5] == 0x1_1 bool_xor (OP1[31:0] o 0x0_1 sign_shift_right 0x1_33)[6:6] == 0x1_1 bool_xor (OP1[31:0] o 0x0_1 sign_shift_right 0x1_33)[7:7] == 0x1_1 bool_xor (OP1[31:0] o 0x0_1 sign_shift_right 0x1_33)[8:8] == 0x1_1) bool_or false bool_and PF ; ZF := true bool_and (OP1[31:0] o 0x0_1 sign_shift_right 0x1_33)[32:1] == 0x0_32 bool_or false bool_and ZF ; SF := true bool_and (OP1[31:0] o 0x0_1 sign_shift_right 0x1_33)[32:32] == 0x1_1 bool_or false bool_and SF ; OF := false bool_or false bool_and OF)
(sar m32, one) -> (OP1 = (0x0_32 o (OP1[31:0] o 0x0_1 sign_shift_right 0x1_33)[32:1])[31:0] ; CF := true bool_and (OP1[31:0] o 0x0_1 sign_shift_right 0x1_33)[0:0] == 0x1_1 bool_or false bool_and CF ; PF := true bool_and !((OP1[31:0] o 0x0_1 sign_shift_right 0x1_33)[1:1] == 0x1_1 bool_xor (OP1[31:0] o 0x0_1 sign_shift_right 0x1_33)[2:2] == 0x1_1 bool_xor (OP1[31:0] o 0x0_1 sign_shift_right 0x1_33)[3:3] == 0x1_1 bool_xor (OP1[31:0] o 0x0_1 sign_shift_right 0x1_33)[4:4] == 0x1_1 bool_xor (OP1[31:0] o 0x0_1 sign_shift_right 0x1_33)[5:5] == 0x1_1 bool_xor (OP1[31:0] o 0x0_1 sign_shift_right 0x1_33)[6:6] == 0x1_1 bool_xor (OP1[31:0] o 0x0_1 sign_shift_right 0x1_33)[7:7] == 0x1_1 bool_xor (OP1[31:0] o 0x0_1 sign_shift_right 0x1_33)[8:8] == 0x1_1) bool_or false bool_and PF ; ZF := true bool_and (OP1[31:0] o 0x0_1 sign_shift_right 0x1_33)[32:1] == 0x0_32 bool_or false bool_and ZF ; SF := true bool_and (OP1[31:0] o 0x0_1 sign_shift_right 0x1_33)[32:32] == 0x1_1 bool_or false bool_and SF ; OF := false bool_or false bool_and OF)
(sar r64, one) -> (OP1 = (OP1 o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[64:1] ; CF := true bool_and (OP1 o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[0:0] == 0x1_1 bool_or false bool_and CF ; PF := true bool_and !((OP1 o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[1:1] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[2:2] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[3:3] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[4:4] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[5:5] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[6:6] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[7:7] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[8:8] == 0x1_1) bool_or false bool_and PF ; ZF := true bool_and (OP1 o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[64:1] == 0x0_64 bool_or false bool_and ZF ; SF := true bool_and (OP1 o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[64:64] == 0x1_1 bool_or false bool_and SF ; OF := false bool_or false bool_and OF)
(sar r64, imm8) -> (OP1 = (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[64:1] ; CF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[0:0] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and CF ; PF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and !((OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[1:1] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[2:2] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[3:3] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[4:4] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[5:5] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[6:6] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[7:7] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[8:8] == 0x1_1) bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and PF ; ZF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[64:1] == 0x0_64 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and ZF ; SF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[64:64] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and SF ; OF := (OP2[7:0] & 0x3f_8) == 0x1_8 bool_and false bool_or !((OP2[7:0] & 0x3f_8) == 0x1_8) bool_and OF)
(sar r64, cl) -> (OP1 = (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[64:1] ; CF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[0:0] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and CF ; PF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and !((OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[1:1] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[2:2] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[3:3] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[4:4] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[5:5] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[6:6] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[7:7] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[8:8] == 0x1_1) bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and PF ; ZF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[64:1] == 0x0_64 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and ZF ; SF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[64:64] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and SF ; OF := (OP2[7:0] & 0x3f_8) == 0x1_8 bool_and false bool_or !((OP2[7:0] & 0x3f_8) == 0x1_8) bool_and OF)
(sar m64, one) -> (OP1 = ((OP1 o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[64:1])[63:0] ; CF := true bool_and (OP1 o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[0:0] == 0x1_1 bool_or false bool_and CF ; PF := true bool_and !((OP1 o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[1:1] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[2:2] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[3:3] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[4:4] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[5:5] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[6:6] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[7:7] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[8:8] == 0x1_1) bool_or false bool_and PF ; ZF := true bool_and (OP1 o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[64:1] == 0x0_64 bool_or false bool_and ZF ; SF := true bool_and (OP1 o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[64:64] == 0x1_1 bool_or false bool_and SF ; OF := false bool_or false bool_and OF)
(sar m64, imm8) -> (OP1 = ((OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[64:1])[63:0] ; CF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[0:0] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and CF ; PF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and !((OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[1:1] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[2:2] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[3:3] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[4:4] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[5:5] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[6:6] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[7:7] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[8:8] == 0x1_1) bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and PF ; ZF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[64:1] == 0x0_64 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and ZF ; SF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[64:64] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and SF ; OF := (OP2[7:0] & 0x3f_8) == 0x1_8 bool_and false bool_or !((OP2[7:0] & 0x3f_8) == 0x1_8) bool_and OF)
(sar m64, cl) -> (OP1 = ((OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[64:1])[63:0] ; CF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[0:0] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and CF ; PF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and !((OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[1:1] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[2:2] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[3:3] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[4:4] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[5:5] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[6:6] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[7:7] == 0x1_1 bool_xor (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[8:8] == 0x1_1) bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and PF ; ZF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[64:1] == 0x0_64 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and ZF ; SF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (OP1 o 0x0_1 sign_shift_right 0x0_57 o (OP2[7:0] & 0x3f_8))[64:64] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and SF ; OF := (OP2[7:0] & 0x3f_8) == 0x1_8 bool_and false bool_or !((OP2[7:0] & 0x3f_8) == 0x1_8) bool_and OF)
(sar r16, one) -> (OP1 = OP1[63:16] o (OP1[15:0] o 0x0_1 sign_shift_right 0x1_17)[16:1] ; CF := true bool_and (OP1[15:0] o 0x0_1 sign_shift_right 0x1_17)[0:0] == 0x1_1 bool_or false bool_and CF ; PF := true bool_and !((OP1[15:0] o 0x0_1 sign_shift_right 0x1_17)[1:1] == 0x1_1 bool_xor (OP1[15:0] o 0x0_1 sign_shift_right 0x1_17)[2:2] == 0x1_1 bool_xor (OP1[15:0] o 0x0_1 sign_shift_right 0x1_17)[3:3] == 0x1_1 bool_xor (OP1[15:0] o 0x0_1 sign_shift_right 0x1_17)[4:4] == 0x1_1 bool_xor (OP1[15:0] o 0x0_1 sign_shift_right 0x1_17)[5:5] == 0x1_1 bool_xor (OP1[15:0] o 0x0_1 sign_shift_right 0x1_17)[6:6] == 0x1_1 bool_xor (OP1[15:0] o 0x0_1 sign_shift_right 0x1_17)[7:7] == 0x1_1 bool_xor (OP1[15:0] o 0x0_1 sign_shift_right 0x1_17)[8:8] == 0x1_1) bool_or false bool_and PF ; ZF := true bool_and (OP1[15:0] o 0x0_1 sign_shift_right 0x1_17)[16:1] == 0x0_16 bool_or false bool_and ZF ; SF := true bool_and (OP1[15:0] o 0x0_1 sign_shift_right 0x1_17)[16:16] == 0x1_1 bool_or false bool_and SF ; OF := false bool_or false bool_and OF)
(sar m16, one) -> (OP1 = (OP1[63:16] o (OP1[15:0] o 0x0_1 sign_shift_right 0x1_17)[16:1])[15:0] ; CF := true bool_and (OP1[15:0] o 0x0_1 sign_shift_right 0x1_17)[0:0] == 0x1_1 bool_or false bool_and CF ; PF := true bool_and !((OP1[15:0] o 0x0_1 sign_shift_right 0x1_17)[1:1] == 0x1_1 bool_xor (OP1[15:0] o 0x0_1 sign_shift_right 0x1_17)[2:2] == 0x1_1 bool_xor (OP1[15:0] o 0x0_1 sign_shift_right 0x1_17)[3:3] == 0x1_1 bool_xor (OP1[15:0] o 0x0_1 sign_shift_right 0x1_17)[4:4] == 0x1_1 bool_xor (OP1[15:0] o 0x0_1 sign_shift_right 0x1_17)[5:5] == 0x1_1 bool_xor (OP1[15:0] o 0x0_1 sign_shift_right 0x1_17)[6:6] == 0x1_1 bool_xor (OP1[15:0] o 0x0_1 sign_shift_right 0x1_17)[7:7] == 0x1_1 bool_xor (OP1[15:0] o 0x0_1 sign_shift_right 0x1_17)[8:8] == 0x1_1) bool_or false bool_and PF ; ZF := true bool_and (OP1[15:0] o 0x0_1 sign_shift_right 0x1_17)[16:1] == 0x0_16 bool_or false bool_and ZF ; SF := true bool_and (OP1[15:0] o 0x0_1 sign_shift_right 0x1_17)[16:16] == 0x1_1 bool_or false bool_and SF ; OF := false bool_or false bool_and OF)
(sarx r64, r64, r64) -> (OP1 = (OP2 o 0x0_1 sign_shift_right 0x0_57 o (OP3[7:0] & 0x3f_8))[64:1])
(sarx r64, m64, r64) -> (OP1 = (OP2 o 0x0_1 sign_shift_right 0x0_57 o (OP3[7:0] & 0x3f_8))[64:1])
(sbb rh, imm8) -> (OP1 = OP1[63:16] o ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[7:0] o OP1[7:0] ; CF := !(((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[8:8] == 0x1_1) ; PF := !(((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[7:0] == 0x0_8 ; SF := ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[7:7] == 0x1_1 ; OF := (!OP2[7:7] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[7:7] == 0x1_1 bool_iff ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[7:7] == 0x1_1))
(sbb rh, rh) -> (OP1 = OP1[63:16] o ((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[15:8])[7:0] o OP1[7:0] ; CF := !(((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[15:8])[8:8] == 0x1_1) ; PF := !(((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[15:8])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[15:8])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[15:8])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[15:8])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[15:8])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[15:8])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[15:8])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[15:8])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[15:8])[7:0] == 0x0_8 ; SF := ((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[15:8])[7:7] == 0x1_1 ; OF := (!OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[15:15] == 0x1_1 bool_iff ((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[15:8])[7:7] == 0x1_1))
(sbb rh, r8) -> (OP1 = OP1[63:16] o ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[7:0] o OP1[7:0] ; CF := !(((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[8:8] == 0x1_1) ; PF := !(((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[7:0] == 0x0_8 ; SF := ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[7:7] == 0x1_1 ; OF := (!OP2[7:7] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[7:7] == 0x1_1 bool_iff ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[7:7] == 0x1_1))
(sbb rh, m8) -> (OP1 = OP1[63:16] o ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[7:0] o OP1[7:0] ; CF := !(((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[8:8] == 0x1_1) ; PF := !(((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[7:0] == 0x0_8 ; SF := ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[7:7] == 0x1_1 ; OF := (!OP2[7:7] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[7:7] == 0x1_1 bool_iff ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[15:8])[7:7] == 0x1_1))
(sbb al, imm8) -> (OP1 = OP1[63:8] o ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[7:0] ; CF := !(((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[8:8] == 0x1_1) ; PF := !(((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (!OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(!OP2[7:7] == 0x1_1 bool_iff ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(sbb r8, imm8) -> (OP1 = OP1[63:8] o ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[7:0] ; CF := !(((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[8:8] == 0x1_1) ; PF := !(((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (!OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(!OP2[7:7] == 0x1_1 bool_iff ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(sbb r8, rh) -> (OP1 = OP1[63:8] o ((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[7:0])[7:0] ; CF := !(((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[7:0])[8:8] == 0x1_1) ; PF := !(((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := ((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (!OP2[15:15] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(!OP2[15:15] == 0x1_1 bool_iff ((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(sbb r8, r8) -> (OP1 = OP1[63:8] o ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[7:0] ; CF := !(((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[8:8] == 0x1_1) ; PF := !(((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (!OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(!OP2[7:7] == 0x1_1 bool_iff ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(sbb r8, m8) -> (OP1 = OP1[63:8] o ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[7:0] ; CF := !(((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[8:8] == 0x1_1) ; PF := !(((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (!OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(!OP2[7:7] == 0x1_1 bool_iff ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(sbb m8, imm8) -> (OP1 = (OP1[63:8] o ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[7:0])[7:0] ; CF := !(((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[8:8] == 0x1_1) ; PF := !(((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (!OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(!OP2[7:7] == 0x1_1 bool_iff ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(sbb m8, rh) -> (OP1 = (OP1[63:8] o ((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[7:0])[7:0])[7:0] ; CF := !(((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[7:0])[8:8] == 0x1_1) ; PF := !(((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := ((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (!OP2[15:15] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(!OP2[15:15] == 0x1_1 bool_iff ((CF ? 0x0_1 o !OP2[15:8] : 0x0_1 o !OP2[15:8] + 0x1_9) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(sbb m8, r8) -> (OP1 = (OP1[63:8] o ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[7:0])[7:0] ; CF := !(((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[8:8] == 0x1_1) ; PF := !(((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (!OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(!OP2[7:7] == 0x1_1 bool_iff ((CF ? 0x0_1 o !OP2[7:0] : 0x0_1 o !OP2[7:0] + 0x1_9) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(sbb eax, imm32) -> (OP1 = 0x0_32 o ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[31:0] ; CF := !(((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[32:32] == 0x1_1) ; PF := !(((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (!OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(!OP2[31:31] == 0x1_1 bool_iff ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(sbb r32, imm8) -> (OP1 = 0x0_32 o ((CF ? 0x0_1 o !(sign-extend-32(OP2))[31:0] : 0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[31:0] ; CF := !(((CF ? 0x0_1 o !(sign-extend-32(OP2))[31:0] : 0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[32:32] == 0x1_1) ; PF := !(((CF ? 0x0_1 o !(sign-extend-32(OP2))[31:0] : 0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-32(OP2))[31:0] : 0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-32(OP2))[31:0] : 0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-32(OP2))[31:0] : 0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-32(OP2))[31:0] : 0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-32(OP2))[31:0] : 0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-32(OP2))[31:0] : 0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-32(OP2))[31:0] : 0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o !(sign-extend-32(OP2))[31:0] : 0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := ((CF ? 0x0_1 o !(sign-extend-32(OP2))[31:0] : 0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (!(sign-extend-32(OP2))[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(!(sign-extend-32(OP2))[31:31] == 0x1_1 bool_iff ((CF ? 0x0_1 o !(sign-extend-32(OP2))[31:0] : 0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(sbb r32, imm32) -> (OP1 = 0x0_32 o ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[31:0] ; CF := !(((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[32:32] == 0x1_1) ; PF := !(((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (!OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(!OP2[31:31] == 0x1_1 bool_iff ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(sbb r32, r32) -> (OP1 = 0x0_32 o ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[31:0] ; CF := !(((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[32:32] == 0x1_1) ; PF := !(((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (!OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(!OP2[31:31] == 0x1_1 bool_iff ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(sbb r32, m32) -> (OP1 = 0x0_32 o ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[31:0] ; CF := !(((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[32:32] == 0x1_1) ; PF := !(((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (!OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(!OP2[31:31] == 0x1_1 bool_iff ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(sbb m32, imm8) -> (OP1 = 0x0_32 o ((CF ? 0x0_1 o !(sign-extend-32(OP2))[31:0] : 0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[31:0] ; CF := !(((CF ? 0x0_1 o !(sign-extend-32(OP2))[31:0] : 0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[32:32] == 0x1_1) ; PF := !(((CF ? 0x0_1 o !(sign-extend-32(OP2))[31:0] : 0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-32(OP2))[31:0] : 0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-32(OP2))[31:0] : 0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-32(OP2))[31:0] : 0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-32(OP2))[31:0] : 0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-32(OP2))[31:0] : 0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-32(OP2))[31:0] : 0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-32(OP2))[31:0] : 0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o !(sign-extend-32(OP2))[31:0] : 0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := ((CF ? 0x0_1 o !(sign-extend-32(OP2))[31:0] : 0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (!(sign-extend-32(OP2))[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(!(sign-extend-32(OP2))[31:31] == 0x1_1 bool_iff ((CF ? 0x0_1 o !(sign-extend-32(OP2))[31:0] : 0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(sbb m32, imm32) -> (OP1 = (0x0_32 o ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[31:0])[31:0] ; CF := !(((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[32:32] == 0x1_1) ; PF := !(((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (!OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(!OP2[31:31] == 0x1_1 bool_iff ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(sbb m32, r32) -> (OP1 = (0x0_32 o ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[31:0])[31:0] ; CF := !(((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[32:32] == 0x1_1) ; PF := !(((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (!OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(!OP2[31:31] == 0x1_1 bool_iff ((CF ? 0x0_1 o !OP2[31:0] : 0x0_1 o !OP2[31:0] + 0x1_33) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(sbb rax, imm32) -> (OP1 = ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[63:0] ; CF := !(((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[64:64] == 0x1_1) ; PF := !(((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[63:63] == 0x1_1))
(sbb r64, imm8) -> (OP1 = ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[63:0] ; CF := !(((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[64:64] == 0x1_1) ; PF := !(((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[63:63] == 0x1_1))
(sbb r64, imm32) -> (OP1 = ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[63:0] ; CF := !(((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[64:64] == 0x1_1) ; PF := !(((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[63:63] == 0x1_1))
(sbb r64, r64) -> (OP1 = ((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[63:0] ; CF := !(((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[64:64] == 0x1_1) ; PF := !(((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := ((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (!OP2[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(!OP2[63:63] == 0x1_1 bool_iff ((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[63:63] == 0x1_1))
(sbb r64, m64) -> (OP1 = ((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[63:0] ; CF := !(((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[64:64] == 0x1_1) ; PF := !(((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := ((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (!OP2[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(!OP2[63:63] == 0x1_1 bool_iff ((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[63:63] == 0x1_1))
(sbb m64, imm8) -> (OP1 = ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[63:0] ; CF := !(((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[64:64] == 0x1_1) ; PF := !(((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[63:63] == 0x1_1))
(sbb m64, imm32) -> (OP1 = ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[63:0] ; CF := !(((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[64:64] == 0x1_1) ; PF := !(((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff ((CF ? 0x0_1 o !(sign-extend-64(OP2)) : 0x0_1 o !(sign-extend-64(OP2)) + 0x1_65) + 0x0_1 o OP1)[63:63] == 0x1_1))
(sbb m64, r64) -> (OP1 = (((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[63:0])[63:0] ; CF := !(((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[64:64] == 0x1_1) ; PF := !(((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := ((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (!OP2[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(!OP2[63:63] == 0x1_1 bool_iff ((CF ? 0x0_1 o !OP2 : 0x0_1 o !OP2 + 0x1_65) + 0x0_1 o OP1)[63:63] == 0x1_1))
(sbb ax, imm16) -> (OP1 = OP1[63:16] o ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[15:0] ; CF := !(((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[16:16] == 0x1_1) ; PF := !(((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (!OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[15:15] == 0x1_1 bool_iff ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(sbb r16, imm8) -> (OP1 = OP1[63:16] o ((CF ? 0x0_1 o !(sign-extend-16(OP2))[15:0] : 0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[15:0] ; CF := !(((CF ? 0x0_1 o !(sign-extend-16(OP2))[15:0] : 0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[16:16] == 0x1_1) ; PF := !(((CF ? 0x0_1 o !(sign-extend-16(OP2))[15:0] : 0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-16(OP2))[15:0] : 0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-16(OP2))[15:0] : 0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-16(OP2))[15:0] : 0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-16(OP2))[15:0] : 0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-16(OP2))[15:0] : 0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-16(OP2))[15:0] : 0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-16(OP2))[15:0] : 0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o !(sign-extend-16(OP2))[15:0] : 0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := ((CF ? 0x0_1 o !(sign-extend-16(OP2))[15:0] : 0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (!(sign-extend-16(OP2))[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!(sign-extend-16(OP2))[15:15] == 0x1_1 bool_iff ((CF ? 0x0_1 o !(sign-extend-16(OP2))[15:0] : 0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(sbb r16, imm16) -> (OP1 = OP1[63:16] o ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[15:0] ; CF := !(((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[16:16] == 0x1_1) ; PF := !(((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (!OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[15:15] == 0x1_1 bool_iff ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(sbb r16, r16) -> (OP1 = OP1[63:16] o ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[15:0] ; CF := !(((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[16:16] == 0x1_1) ; PF := !(((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (!OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[15:15] == 0x1_1 bool_iff ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(sbb r16, m16) -> (OP1 = OP1[63:16] o ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[15:0] ; CF := !(((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[16:16] == 0x1_1) ; PF := !(((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (!OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[15:15] == 0x1_1 bool_iff ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(sbb m16, imm8) -> (OP1 = OP1[63:16] o ((CF ? 0x0_1 o !(sign-extend-16(OP2))[15:0] : 0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[15:0] ; CF := !(((CF ? 0x0_1 o !(sign-extend-16(OP2))[15:0] : 0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[16:16] == 0x1_1) ; PF := !(((CF ? 0x0_1 o !(sign-extend-16(OP2))[15:0] : 0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-16(OP2))[15:0] : 0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-16(OP2))[15:0] : 0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-16(OP2))[15:0] : 0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-16(OP2))[15:0] : 0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-16(OP2))[15:0] : 0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-16(OP2))[15:0] : 0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o !(sign-extend-16(OP2))[15:0] : 0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o !(sign-extend-16(OP2))[15:0] : 0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := ((CF ? 0x0_1 o !(sign-extend-16(OP2))[15:0] : 0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (!(sign-extend-16(OP2))[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!(sign-extend-16(OP2))[15:15] == 0x1_1 bool_iff ((CF ? 0x0_1 o !(sign-extend-16(OP2))[15:0] : 0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(sbb m16, imm16) -> (OP1 = (OP1[63:16] o ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[15:0])[15:0] ; CF := !(((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[16:16] == 0x1_1) ; PF := !(((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (!OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[15:15] == 0x1_1 bool_iff ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(sbb m16, r16) -> (OP1 = (OP1[63:16] o ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[15:0])[15:0] ; CF := !(((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[16:16] == 0x1_1) ; PF := !(((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (!OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[15:15] == 0x1_1 bool_iff ((CF ? 0x0_1 o !OP2[15:0] : 0x0_1 o !OP2[15:0] + 0x1_17) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(seta rh) -> (OP1 = OP1[63:16] o (!CF bool_and !ZF ? 0x1_8 : 0x0_8) o OP1[7:0])
(seta r8) -> (OP1 = OP1[63:8] o (!CF bool_and !ZF ? 0x1_8 : 0x0_8))
(seta m8) -> (OP1 = (OP1[63:8] o (!CF bool_and !ZF ? 0x1_8 : 0x0_8))[7:0])
(setae rh) -> (OP1 = OP1[63:16] o (!CF ? 0x1_8 : 0x0_8) o OP1[7:0])
(setae r8) -> (OP1 = OP1[63:8] o (!CF ? 0x1_8 : 0x0_8))
(setae m8) -> (OP1 = (OP1[63:8] o (!CF ? 0x1_8 : 0x0_8))[7:0])
(setb rh) -> (OP1 = OP1[63:16] o (CF ? 0x1_8 : 0x0_8) o OP1[7:0])
(setb r8) -> (OP1 = OP1[63:8] o (CF ? 0x1_8 : 0x0_8))
(setb m8) -> (OP1 = (OP1[63:8] o (CF ? 0x1_8 : 0x0_8))[7:0])
(setbe rh) -> (OP1 = OP1[63:16] o (CF bool_or ZF ? 0x1_8 : 0x0_8) o OP1[7:0])
(setbe r8) -> (OP1 = OP1[63:8] o (CF bool_or ZF ? 0x1_8 : 0x0_8))
(setbe m8) -> (OP1 = (OP1[63:8] o (CF bool_or ZF ? 0x1_8 : 0x0_8))[7:0])
(setc rh) -> (OP1 = OP1[63:16] o (CF ? 0x1_8 : 0x0_8) o OP1[7:0])
(setc r8) -> (OP1 = OP1[63:8] o (CF ? 0x1_8 : 0x0_8))
(setc m8) -> (OP1 = (OP1[63:8] o (CF ? 0x1_8 : 0x0_8))[7:0])
(sete rh) -> (OP1 = OP1[63:16] o (ZF ? 0x1_8 : 0x0_8) o OP1[7:0])
(sete r8) -> (OP1 = OP1[63:8] o (ZF ? 0x1_8 : 0x0_8))
(sete m8) -> (OP1 = (OP1[63:8] o (ZF ? 0x1_8 : 0x0_8))[7:0])
(setg rh) -> (OP1 = OP1[63:16] o (!ZF bool_and (SF bool_iff OF) ? 0x1_8 : 0x0_8) o OP1[7:0])
(setg r8) -> (OP1 = OP1[63:8] o (!ZF bool_and (SF bool_iff OF) ? 0x1_8 : 0x0_8))
(setg m8) -> (OP1 = (OP1[63:8] o (!ZF bool_and (SF bool_iff OF) ? 0x1_8 : 0x0_8))[7:0])
(setge rh) -> (OP1 = OP1[63:16] o (SF bool_iff OF ? 0x1_8 : 0x0_8) o OP1[7:0])
(setge r8) -> (OP1 = OP1[63:8] o (SF bool_iff OF ? 0x1_8 : 0x0_8))
(setge m8) -> (OP1 = (OP1[63:8] o (SF bool_iff OF ? 0x1_8 : 0x0_8))[7:0])
(setl rh) -> (OP1 = OP1[63:16] o (!(SF bool_iff OF) ? 0x1_8 : 0x0_8) o OP1[7:0])
(setl r8) -> (OP1 = OP1[63:8] o (!(SF bool_iff OF) ? 0x1_8 : 0x0_8))
(setl m8) -> (OP1 = (OP1[63:8] o (!(SF bool_iff OF) ? 0x1_8 : 0x0_8))[7:0])
(setle rh) -> (OP1 = OP1[63:16] o (ZF bool_or !(SF bool_iff OF) ? 0x1_8 : 0x0_8) o OP1[7:0])
(setle r8) -> (OP1 = OP1[63:8] o (ZF bool_or !(SF bool_iff OF) ? 0x1_8 : 0x0_8))
(setle m8) -> (OP1 = (OP1[63:8] o (ZF bool_or !(SF bool_iff OF) ? 0x1_8 : 0x0_8))[7:0])
(setna rh) -> (OP1 = OP1[63:16] o (CF bool_or ZF ? 0x1_8 : 0x0_8) o OP1[7:0])
(setna r8) -> (OP1 = OP1[63:8] o (CF bool_or ZF ? 0x1_8 : 0x0_8))
(setna m8) -> (OP1 = (OP1[63:8] o (CF bool_or ZF ? 0x1_8 : 0x0_8))[7:0])
(setnae rh) -> (OP1 = OP1[63:16] o (CF ? 0x1_8 : 0x0_8) o OP1[7:0])
(setnae r8) -> (OP1 = OP1[63:8] o (CF ? 0x1_8 : 0x0_8))
(setnae m8) -> (OP1 = (OP1[63:8] o (CF ? 0x1_8 : 0x0_8))[7:0])
(setnb rh) -> (OP1 = OP1[63:16] o (!CF ? 0x1_8 : 0x0_8) o OP1[7:0])
(setnb r8) -> (OP1 = OP1[63:8] o (!CF ? 0x1_8 : 0x0_8))
(setnb m8) -> (OP1 = (OP1[63:8] o (!CF ? 0x1_8 : 0x0_8))[7:0])
(setnbe rh) -> (OP1 = OP1[63:16] o (!CF bool_and !ZF ? 0x1_8 : 0x0_8) o OP1[7:0])
(setnbe r8) -> (OP1 = OP1[63:8] o (!CF bool_and !ZF ? 0x1_8 : 0x0_8))
(setnbe m8) -> (OP1 = (OP1[63:8] o (!CF bool_and !ZF ? 0x1_8 : 0x0_8))[7:0])
(setnc rh) -> (OP1 = OP1[63:16] o (!CF ? 0x1_8 : 0x0_8) o OP1[7:0])
(setnc r8) -> (OP1 = OP1[63:8] o (!CF ? 0x1_8 : 0x0_8))
(setnc m8) -> (OP1 = (OP1[63:8] o (!CF ? 0x1_8 : 0x0_8))[7:0])
(setne rh) -> (OP1 = OP1[63:16] o (!ZF ? 0x1_8 : 0x0_8) o OP1[7:0])
(setne r8) -> (OP1 = OP1[63:8] o (!ZF ? 0x1_8 : 0x0_8))
(setne m8) -> (OP1 = (OP1[63:8] o (!ZF ? 0x1_8 : 0x0_8))[7:0])
(setng rh) -> (OP1 = OP1[63:16] o (ZF bool_or !(SF bool_iff OF) ? 0x1_8 : 0x0_8) o OP1[7:0])
(setng r8) -> (OP1 = OP1[63:8] o (ZF bool_or !(SF bool_iff OF) ? 0x1_8 : 0x0_8))
(setng m8) -> (OP1 = (OP1[63:8] o (ZF bool_or !(SF bool_iff OF) ? 0x1_8 : 0x0_8))[7:0])
(setnge rh) -> (OP1 = OP1[63:16] o (!(SF bool_iff OF) ? 0x1_8 : 0x0_8) o OP1[7:0])
(setnge r8) -> (OP1 = OP1[63:8] o (!(SF bool_iff OF) ? 0x1_8 : 0x0_8))
(setnge m8) -> (OP1 = (OP1[63:8] o (!(SF bool_iff OF) ? 0x1_8 : 0x0_8))[7:0])
(setnl rh) -> (OP1 = OP1[63:16] o (SF bool_iff OF ? 0x1_8 : 0x0_8) o OP1[7:0])
(setnl r8) -> (OP1 = OP1[63:8] o (SF bool_iff OF ? 0x1_8 : 0x0_8))
(setnl m8) -> (OP1 = (OP1[63:8] o (SF bool_iff OF ? 0x1_8 : 0x0_8))[7:0])
(setnle rh) -> (OP1 = OP1[63:16] o (!ZF bool_and (SF bool_iff OF) ? 0x1_8 : 0x0_8) o OP1[7:0])
(setnle r8) -> (OP1 = OP1[63:8] o (!ZF bool_and (SF bool_iff OF) ? 0x1_8 : 0x0_8))
(setnle m8) -> (OP1 = (OP1[63:8] o (!ZF bool_and (SF bool_iff OF) ? 0x1_8 : 0x0_8))[7:0])
(setno rh) -> (OP1 = OP1[63:16] o (!OF ? 0x1_8 : 0x0_8) o OP1[7:0])
(setno r8) -> (OP1 = OP1[63:8] o (!OF ? 0x1_8 : 0x0_8))
(setno m8) -> (OP1 = (OP1[63:8] o (!OF ? 0x1_8 : 0x0_8))[7:0])
(setnp rh) -> (OP1 = OP1[63:16] o (!PF ? 0x1_8 : 0x0_8) o OP1[7:0])
(setnp r8) -> (OP1 = OP1[63:8] o (!PF ? 0x1_8 : 0x0_8))
(setnp m8) -> (OP1 = (OP1[63:8] o (!PF ? 0x1_8 : 0x0_8))[7:0])
(setns rh) -> (OP1 = OP1[63:16] o (!SF ? 0x1_8 : 0x0_8) o OP1[7:0])
(setns r8) -> (OP1 = OP1[63:8] o (!SF ? 0x1_8 : 0x0_8))
(setns m8) -> (OP1 = (OP1[63:8] o (!SF ? 0x1_8 : 0x0_8))[7:0])
(setnz rh) -> (OP1 = OP1[63:16] o (!ZF ? 0x1_8 : 0x0_8) o OP1[7:0])
(setnz r8) -> (OP1 = OP1[63:8] o (!ZF ? 0x1_8 : 0x0_8))
(setnz m8) -> (OP1 = (OP1[63:8] o (!ZF ? 0x1_8 : 0x0_8))[7:0])
(seto rh) -> (OP1 = OP1[63:16] o (OF ? 0x1_8 : 0x0_8) o OP1[7:0])
(seto r8) -> (OP1 = OP1[63:8] o (OF ? 0x1_8 : 0x0_8))
(seto m8) -> (OP1 = (OP1[63:8] o (OF ? 0x1_8 : 0x0_8))[7:0])
(setp rh) -> (OP1 = OP1[63:16] o (PF ? 0x1_8 : 0x0_8) o OP1[7:0])
(setp r8) -> (OP1 = OP1[63:8] o (PF ? 0x1_8 : 0x0_8))
(setp m8) -> (OP1 = (OP1[63:8] o (PF ? 0x1_8 : 0x0_8))[7:0])
(setpe rh) -> (OP1 = OP1[63:16] o (PF ? 0x1_8 : 0x0_8) o OP1[7:0])
(setpe r8) -> (OP1 = OP1[63:8] o (PF ? 0x1_8 : 0x0_8))
(setpe m8) -> (OP1 = (OP1[63:8] o (PF ? 0x1_8 : 0x0_8))[7:0])
(setpo rh) -> (OP1 = OP1[63:16] o (!PF ? 0x1_8 : 0x0_8) o OP1[7:0])
(setpo r8) -> (OP1 = OP1[63:8] o (!PF ? 0x1_8 : 0x0_8))
(setpo m8) -> (OP1 = (OP1[63:8] o (!PF ? 0x1_8 : 0x0_8))[7:0])
(sets rh) -> (OP1 = OP1[63:16] o (SF ? 0x1_8 : 0x0_8) o OP1[7:0])
(sets r8) -> (OP1 = OP1[63:8] o (SF ? 0x1_8 : 0x0_8))
(sets m8) -> (OP1 = (OP1[63:8] o (SF ? 0x1_8 : 0x0_8))[7:0])
(setz rh) -> (OP1 = OP1[63:16] o (ZF ? 0x1_8 : 0x0_8) o OP1[7:0])
(setz r8) -> (OP1 = OP1[63:8] o (ZF ? 0x1_8 : 0x0_8))
(setz m8) -> (OP1 = (OP1[63:8] o (ZF ? 0x1_8 : 0x0_8))[7:0])
(shl rh, one) -> (OP1 = OP1[63:16] o (0x0_1 o OP1[15:8] << 0x1_9)[7:0] o OP1[7:0] ; CF := false bool_and undefined bool_or true bool_and (true bool_and (0x0_1 o OP1[15:8] << 0x1_9)[8:8] == 0x1_1 bool_or false bool_and CF) ; PF := true bool_and !((0x0_1 o OP1[15:8] << 0x1_9)[0:0] == 0x1_1 bool_xor (0x0_1 o OP1[15:8] << 0x1_9)[1:1] == 0x1_1 bool_xor (0x0_1 o OP1[15:8] << 0x1_9)[2:2] == 0x1_1 bool_xor (0x0_1 o OP1[15:8] << 0x1_9)[3:3] == 0x1_1 bool_xor (0x0_1 o OP1[15:8] << 0x1_9)[4:4] == 0x1_1 bool_xor (0x0_1 o OP1[15:8] << 0x1_9)[5:5] == 0x1_1 bool_xor (0x0_1 o OP1[15:8] << 0x1_9)[6:6] == 0x1_1 bool_xor (0x0_1 o OP1[15:8] << 0x1_9)[7:7] == 0x1_1) bool_or false bool_and PF ; ZF := true bool_and (0x0_1 o OP1[15:8] << 0x1_9)[7:0] == 0x0_8 bool_or false bool_and ZF ; SF := true bool_and (0x0_1 o OP1[15:8] << 0x1_9)[7:7] == 0x1_1 bool_or false bool_and SF ; OF := true bool_and !(false bool_and undefined bool_or true bool_and (true bool_and (0x0_1 o OP1[15:8] << 0x1_9)[8:8] == 0x1_1 bool_or false bool_and CF) bool_iff (0x0_1 o OP1[15:8] << 0x1_9)[7:7] == 0x1_1) bool_or false bool_and OF)
(shl r8, one) -> (OP1 = OP1[63:8] o (0x0_1 o OP1[7:0] << 0x1_9)[7:0] ; CF := false bool_and undefined bool_or true bool_and (true bool_and (0x0_1 o OP1[7:0] << 0x1_9)[8:8] == 0x1_1 bool_or false bool_and CF) ; PF := true bool_and !((0x0_1 o OP1[7:0] << 0x1_9)[0:0] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] << 0x1_9)[1:1] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] << 0x1_9)[2:2] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] << 0x1_9)[3:3] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] << 0x1_9)[4:4] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] << 0x1_9)[5:5] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] << 0x1_9)[6:6] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] << 0x1_9)[7:7] == 0x1_1) bool_or false bool_and PF ; ZF := true bool_and (0x0_1 o OP1[7:0] << 0x1_9)[7:0] == 0x0_8 bool_or false bool_and ZF ; SF := true bool_and (0x0_1 o OP1[7:0] << 0x1_9)[7:7] == 0x1_1 bool_or false bool_and SF ; OF := true bool_and !(false bool_and undefined bool_or true bool_and (true bool_and (0x0_1 o OP1[7:0] << 0x1_9)[8:8] == 0x1_1 bool_or false bool_and CF) bool_iff (0x0_1 o OP1[7:0] << 0x1_9)[7:7] == 0x1_1) bool_or false bool_and OF)
(shl m8, one) -> (OP1 = (OP1[63:8] o (0x0_1 o OP1[7:0] << 0x1_9)[7:0])[7:0] ; CF := false bool_and undefined bool_or true bool_and (true bool_and (0x0_1 o OP1[7:0] << 0x1_9)[8:8] == 0x1_1 bool_or false bool_and CF) ; PF := true bool_and !((0x0_1 o OP1[7:0] << 0x1_9)[0:0] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] << 0x1_9)[1:1] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] << 0x1_9)[2:2] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] << 0x1_9)[3:3] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] << 0x1_9)[4:4] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] << 0x1_9)[5:5] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] << 0x1_9)[6:6] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] << 0x1_9)[7:7] == 0x1_1) bool_or false bool_and PF ; ZF := true bool_and (0x0_1 o OP1[7:0] << 0x1_9)[7:0] == 0x0_8 bool_or false bool_and ZF ; SF := true bool_and (0x0_1 o OP1[7:0] << 0x1_9)[7:7] == 0x1_1 bool_or false bool_and SF ; OF := true bool_and !(false bool_and undefined bool_or true bool_and (true bool_and (0x0_1 o OP1[7:0] << 0x1_9)[8:8] == 0x1_1 bool_or false bool_and CF) bool_iff (0x0_1 o OP1[7:0] << 0x1_9)[7:7] == 0x1_1) bool_or false bool_and OF)
(shl r32, one) -> (OP1 = 0x0_32 o (0x0_1 o OP1[31:0] << 0x1_33)[31:0] ; CF := false bool_and undefined bool_or true bool_and (true bool_and (0x0_1 o OP1[31:0] << 0x1_33)[32:32] == 0x1_1 bool_or false bool_and CF) ; PF := true bool_and !((0x0_1 o OP1[31:0] << 0x1_33)[0:0] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] << 0x1_33)[1:1] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] << 0x1_33)[2:2] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] << 0x1_33)[3:3] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] << 0x1_33)[4:4] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] << 0x1_33)[5:5] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] << 0x1_33)[6:6] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] << 0x1_33)[7:7] == 0x1_1) bool_or false bool_and PF ; ZF := true bool_and (0x0_1 o OP1[31:0] << 0x1_33)[31:0] == 0x0_32 bool_or false bool_and ZF ; SF := true bool_and (0x0_1 o OP1[31:0] << 0x1_33)[31:31] == 0x1_1 bool_or false bool_and SF ; OF := true bool_and !(false bool_and undefined bool_or true bool_and (true bool_and (0x0_1 o OP1[31:0] << 0x1_33)[32:32] == 0x1_1 bool_or false bool_and CF) bool_iff (0x0_1 o OP1[31:0] << 0x1_33)[31:31] == 0x1_1) bool_or false bool_and OF)
(shl m32, one) -> (OP1 = (0x0_32 o (0x0_1 o OP1[31:0] << 0x1_33)[31:0])[31:0] ; CF := false bool_and undefined bool_or true bool_and (true bool_and (0x0_1 o OP1[31:0] << 0x1_33)[32:32] == 0x1_1 bool_or false bool_and CF) ; PF := true bool_and !((0x0_1 o OP1[31:0] << 0x1_33)[0:0] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] << 0x1_33)[1:1] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] << 0x1_33)[2:2] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] << 0x1_33)[3:3] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] << 0x1_33)[4:4] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] << 0x1_33)[5:5] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] << 0x1_33)[6:6] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] << 0x1_33)[7:7] == 0x1_1) bool_or false bool_and PF ; ZF := true bool_and (0x0_1 o OP1[31:0] << 0x1_33)[31:0] == 0x0_32 bool_or false bool_and ZF ; SF := true bool_and (0x0_1 o OP1[31:0] << 0x1_33)[31:31] == 0x1_1 bool_or false bool_and SF ; OF := true bool_and !(false bool_and undefined bool_or true bool_and (true bool_and (0x0_1 o OP1[31:0] << 0x1_33)[32:32] == 0x1_1 bool_or false bool_and CF) bool_iff (0x0_1 o OP1[31:0] << 0x1_33)[31:31] == 0x1_1) bool_or false bool_and OF)
(shl r64, one) -> (OP1 = (0x0_1 o OP1 << 0x0_57 o 0x1_8)[63:0] ; CF := false bool_and undefined bool_or true bool_and (true bool_and (0x0_1 o OP1 << 0x0_57 o 0x1_8)[64:64] == 0x1_1 bool_or false bool_and CF) ; PF := true bool_and !((0x0_1 o OP1 << 0x0_57 o 0x1_8)[0:0] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o 0x1_8)[1:1] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o 0x1_8)[2:2] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o 0x1_8)[3:3] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o 0x1_8)[4:4] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o 0x1_8)[5:5] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o 0x1_8)[6:6] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o 0x1_8)[7:7] == 0x1_1) bool_or false bool_and PF ; ZF := true bool_and (0x0_1 o OP1 << 0x0_57 o 0x1_8)[63:0] == 0x0_64 bool_or false bool_and ZF ; SF := true bool_and (0x0_1 o OP1 << 0x0_57 o 0x1_8)[63:63] == 0x1_1 bool_or false bool_and SF ; OF := true bool_and !(false bool_and undefined bool_or true bool_and (true bool_and (0x0_1 o OP1 << 0x0_57 o 0x1_8)[64:64] == 0x1_1 bool_or false bool_and CF) bool_iff (0x0_1 o OP1 << 0x0_57 o 0x1_8)[63:63] == 0x1_1) bool_or false bool_and OF)
(shl r64, imm8) -> (OP1 = (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[63:0] ; CF := (OP2[7:0] & 0x3f_8) >= 0x40_8 bool_and undefined bool_or !((OP2[7:0] & 0x3f_8) >= 0x40_8) bool_and (!((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[64:64] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and CF) ; PF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and !((0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[0:0] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[1:1] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[2:2] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[3:3] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[4:4] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[5:5] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[6:6] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[7:7] == 0x1_1) bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and PF ; ZF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[63:0] == 0x0_64 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and ZF ; SF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[63:63] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and SF ; OF := (OP2[7:0] & 0x3f_8) == 0x1_8 bool_and !((OP2[7:0] & 0x3f_8) >= 0x40_8 bool_and undefined bool_or !((OP2[7:0] & 0x3f_8) >= 0x40_8) bool_and (!((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[64:64] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and CF) bool_iff (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[63:63] == 0x1_1) bool_or !((OP2[7:0] & 0x3f_8) == 0x1_8) bool_and OF)
(shl r64, cl) -> (OP1 = (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[63:0] ; CF := (OP2[7:0] & 0x3f_8) >= 0x40_8 bool_and undefined bool_or !((OP2[7:0] & 0x3f_8) >= 0x40_8) bool_and (!((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[64:64] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and CF) ; PF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and !((0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[0:0] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[1:1] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[2:2] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[3:3] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[4:4] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[5:5] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[6:6] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[7:7] == 0x1_1) bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and PF ; ZF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[63:0] == 0x0_64 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and ZF ; SF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[63:63] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and SF ; OF := (OP2[7:0] & 0x3f_8) == 0x1_8 bool_and !((OP2[7:0] & 0x3f_8) >= 0x40_8 bool_and undefined bool_or !((OP2[7:0] & 0x3f_8) >= 0x40_8) bool_and (!((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[64:64] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and CF) bool_iff (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[63:63] == 0x1_1) bool_or !((OP2[7:0] & 0x3f_8) == 0x1_8) bool_and OF)
(shl m64, one) -> (OP1 = ((0x0_1 o OP1 << 0x0_57 o 0x1_8)[63:0])[63:0] ; CF := false bool_and undefined bool_or true bool_and (true bool_and (0x0_1 o OP1 << 0x0_57 o 0x1_8)[64:64] == 0x1_1 bool_or false bool_and CF) ; PF := true bool_and !((0x0_1 o OP1 << 0x0_57 o 0x1_8)[0:0] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o 0x1_8)[1:1] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o 0x1_8)[2:2] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o 0x1_8)[3:3] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o 0x1_8)[4:4] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o 0x1_8)[5:5] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o 0x1_8)[6:6] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o 0x1_8)[7:7] == 0x1_1) bool_or false bool_and PF ; ZF := true bool_and (0x0_1 o OP1 << 0x0_57 o 0x1_8)[63:0] == 0x0_64 bool_or false bool_and ZF ; SF := true bool_and (0x0_1 o OP1 << 0x0_57 o 0x1_8)[63:63] == 0x1_1 bool_or false bool_and SF ; OF := true bool_and !(false bool_and undefined bool_or true bool_and (true bool_and (0x0_1 o OP1 << 0x0_57 o 0x1_8)[64:64] == 0x1_1 bool_or false bool_and CF) bool_iff (0x0_1 o OP1 << 0x0_57 o 0x1_8)[63:63] == 0x1_1) bool_or false bool_and OF)
(shl m64, imm8) -> (OP1 = ((0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[63:0])[63:0] ; CF := (OP2[7:0] & 0x3f_8) >= 0x40_8 bool_and undefined bool_or !((OP2[7:0] & 0x3f_8) >= 0x40_8) bool_and (!((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[64:64] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and CF) ; PF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and !((0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[0:0] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[1:1] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[2:2] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[3:3] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[4:4] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[5:5] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[6:6] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[7:7] == 0x1_1) bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and PF ; ZF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[63:0] == 0x0_64 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and ZF ; SF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[63:63] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and SF ; OF := (OP2[7:0] & 0x3f_8) == 0x1_8 bool_and !((OP2[7:0] & 0x3f_8) >= 0x40_8 bool_and undefined bool_or !((OP2[7:0] & 0x3f_8) >= 0x40_8) bool_and (!((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[64:64] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and CF) bool_iff (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[63:63] == 0x1_1) bool_or !((OP2[7:0] & 0x3f_8) == 0x1_8) bool_and OF)
(shl m64, cl) -> (OP1 = ((0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[63:0])[63:0] ; CF := (OP2[7:0] & 0x3f_8) >= 0x40_8 bool_and undefined bool_or !((OP2[7:0] & 0x3f_8) >= 0x40_8) bool_and (!((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[64:64] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and CF) ; PF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and !((0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[0:0] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[1:1] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[2:2] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[3:3] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[4:4] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[5:5] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[6:6] == 0x1_1 bool_xor (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[7:7] == 0x1_1) bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and PF ; ZF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[63:0] == 0x0_64 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and ZF ; SF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[63:63] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and SF ; OF := (OP2[7:0] & 0x3f_8) == 0x1_8 bool_and !((OP2[7:0] & 0x3f_8) >= 0x40_8 bool_and undefined bool_or !((OP2[7:0] & 0x3f_8) >= 0x40_8) bool_and (!((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[64:64] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and CF) bool_iff (0x0_1 o OP1 << 0x0_57 o (OP2[7:0] & 0x3f_8))[63:63] == 0x1_1) bool_or !((OP2[7:0] & 0x3f_8) == 0x1_8) bool_and OF)
(shl r16, one) -> (OP1 = OP1[63:16] o (0x0_1 o OP1[15:0] << 0x1_17)[15:0] ; CF := false bool_and undefined bool_or true bool_and (true bool_and (0x0_1 o OP1[15:0] << 0x1_17)[16:16] == 0x1_1 bool_or false bool_and CF) ; PF := true bool_and !((0x0_1 o OP1[15:0] << 0x1_17)[0:0] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] << 0x1_17)[1:1] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] << 0x1_17)[2:2] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] << 0x1_17)[3:3] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] << 0x1_17)[4:4] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] << 0x1_17)[5:5] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] << 0x1_17)[6:6] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] << 0x1_17)[7:7] == 0x1_1) bool_or false bool_and PF ; ZF := true bool_and (0x0_1 o OP1[15:0] << 0x1_17)[15:0] == 0x0_16 bool_or false bool_and ZF ; SF := true bool_and (0x0_1 o OP1[15:0] << 0x1_17)[15:15] == 0x1_1 bool_or false bool_and SF ; OF := true bool_and !(false bool_and undefined bool_or true bool_and (true bool_and (0x0_1 o OP1[15:0] << 0x1_17)[16:16] == 0x1_1 bool_or false bool_and CF) bool_iff (0x0_1 o OP1[15:0] << 0x1_17)[15:15] == 0x1_1) bool_or false bool_and OF)
(shl m16, one) -> (OP1 = (OP1[63:16] o (0x0_1 o OP1[15:0] << 0x1_17)[15:0])[15:0] ; CF := false bool_and undefined bool_or true bool_and (true bool_and (0x0_1 o OP1[15:0] << 0x1_17)[16:16] == 0x1_1 bool_or false bool_and CF) ; PF := true bool_and !((0x0_1 o OP1[15:0] << 0x1_17)[0:0] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] << 0x1_17)[1:1] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] << 0x1_17)[2:2] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] << 0x1_17)[3:3] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] << 0x1_17)[4:4] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] << 0x1_17)[5:5] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] << 0x1_17)[6:6] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] << 0x1_17)[7:7] == 0x1_1) bool_or false bool_and PF ; ZF := true bool_and (0x0_1 o OP1[15:0] << 0x1_17)[15:0] == 0x0_16 bool_or false bool_and ZF ; SF := true bool_and (0x0_1 o OP1[15:0] << 0x1_17)[15:15] == 0x1_1 bool_or false bool_and SF ; OF := true bool_and !(false bool_and undefined bool_or true bool_and (true bool_and (0x0_1 o OP1[15:0] << 0x1_17)[16:16] == 0x1_1 bool_or false bool_and CF) bool_iff (0x0_1 o OP1[15:0] << 0x1_17)[15:15] == 0x1_1) bool_or false bool_and OF)
(shlx r64, r64, r64) -> (OP1 = (0x0_1 o OP2 << 0x0_57 o (OP3[7:0] & 0x3f_8))[63:0])
(shlx r64, m64, r64) -> (OP1 = (0x0_1 o OP2 << 0x0_57 o (OP3[7:0] & 0x3f_8))[63:0])
(shr r64, imm8) -> (OP1 = (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[64:1] ; CF := (OP2[7:0] & 0x3f_8) >= 0x40_8 bool_and undefined bool_or !((OP2[7:0] & 0x3f_8) >= 0x40_8) bool_and (!((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[0:0] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and CF) ; PF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and !((OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[1:1] == 0x1_1 bool_xor (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[2:2] == 0x1_1 bool_xor (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[3:3] == 0x1_1 bool_xor (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[4:4] == 0x1_1 bool_xor (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[5:5] == 0x1_1 bool_xor (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[6:6] == 0x1_1 bool_xor (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[7:7] == 0x1_1 bool_xor (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[8:8] == 0x1_1) bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and PF ; ZF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[64:1] == 0x0_64 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and ZF ; SF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[64:64] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and SF ; OF := (OP2[7:0] & 0x3f_8) == 0x1_8 bool_and OP1[63:63] == 0x1_1 bool_or !((OP2[7:0] & 0x3f_8) == 0x1_8) bool_and OF)
(shr r64, cl) -> (OP1 = (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[64:1] ; CF := (OP2[7:0] & 0x3f_8) >= 0x40_8 bool_and undefined bool_or !((OP2[7:0] & 0x3f_8) >= 0x40_8) bool_and (!((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[0:0] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and CF) ; PF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and !((OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[1:1] == 0x1_1 bool_xor (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[2:2] == 0x1_1 bool_xor (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[3:3] == 0x1_1 bool_xor (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[4:4] == 0x1_1 bool_xor (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[5:5] == 0x1_1 bool_xor (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[6:6] == 0x1_1 bool_xor (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[7:7] == 0x1_1 bool_xor (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[8:8] == 0x1_1) bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and PF ; ZF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[64:1] == 0x0_64 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and ZF ; SF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[64:64] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and SF ; OF := (OP2[7:0] & 0x3f_8) == 0x1_8 bool_and OP1[63:63] == 0x1_1 bool_or !((OP2[7:0] & 0x3f_8) == 0x1_8) bool_and OF)
(shr m64, imm8) -> (OP1 = ((OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[64:1])[63:0] ; CF := (OP2[7:0] & 0x3f_8) >= 0x40_8 bool_and undefined bool_or !((OP2[7:0] & 0x3f_8) >= 0x40_8) bool_and (!((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[0:0] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and CF) ; PF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and !((OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[1:1] == 0x1_1 bool_xor (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[2:2] == 0x1_1 bool_xor (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[3:3] == 0x1_1 bool_xor (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[4:4] == 0x1_1 bool_xor (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[5:5] == 0x1_1 bool_xor (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[6:6] == 0x1_1 bool_xor (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[7:7] == 0x1_1 bool_xor (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[8:8] == 0x1_1) bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and PF ; ZF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[64:1] == 0x0_64 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and ZF ; SF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[64:64] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and SF ; OF := (OP2[7:0] & 0x3f_8) == 0x1_8 bool_and OP1[63:63] == 0x1_1 bool_or !((OP2[7:0] & 0x3f_8) == 0x1_8) bool_and OF)
(shr m64, cl) -> (OP1 = ((OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[64:1])[63:0] ; CF := (OP2[7:0] & 0x3f_8) >= 0x40_8 bool_and undefined bool_or !((OP2[7:0] & 0x3f_8) >= 0x40_8) bool_and (!((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[0:0] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and CF) ; PF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and !((OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[1:1] == 0x1_1 bool_xor (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[2:2] == 0x1_1 bool_xor (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[3:3] == 0x1_1 bool_xor (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[4:4] == 0x1_1 bool_xor (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[5:5] == 0x1_1 bool_xor (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[6:6] == 0x1_1 bool_xor (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[7:7] == 0x1_1 bool_xor (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[8:8] == 0x1_1) bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and PF ; ZF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[64:1] == 0x0_64 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and ZF ; SF := !((OP2[7:0] & 0x3f_8) == 0x0_8) bool_and (OP1 o 0x0_1 >> 0x0_57 o (OP2[7:0] & 0x3f_8))[64:64] == 0x1_1 bool_or !(!((OP2[7:0] & 0x3f_8) == 0x0_8)) bool_and SF ; OF := (OP2[7:0] & 0x3f_8) == 0x1_8 bool_and OP1[63:63] == 0x1_1 bool_or !((OP2[7:0] & 0x3f_8) == 0x1_8) bool_and OF)
(shrx r32, r32, r32) -> (OP1 = (0x0_32 o OP2[31:0] o 0x0_1 >> 0x0_57 o (((OP3[7:0] | (0x0_1 o (0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[63:63] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[62:62]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[61:61] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[60:60])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[59:59] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[58:58]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[57:57] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[56:56]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[55:55] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[54:54]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[53:53] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[52:52])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[51:51] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[50:50]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[49:49] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[48:48])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[47:47] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[46:46]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[45:45] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[44:44])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[43:43] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[42:42]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[41:41] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[40:40]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[39:39] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[38:38]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[37:37] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[36:36])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[35:35] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[34:34]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[33:33] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[32:32]))))) + 0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[31:31] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[30:30]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[29:29] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[28:28])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[27:27] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[26:26]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[25:25] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[24:24]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[23:23] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[22:22]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[21:21] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[20:20])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[19:19] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[18:18]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[17:17] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[16:16])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[15:15] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[14:14]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[13:13] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[12:12])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[11:11] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[10:10]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[9:9] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[8:8]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[7:7] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[6:6]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[5:5] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[4:4])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[3:3] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[2:2]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[1:1] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[0:0]))))))[31:0] + 0xffffffff_33)[7:0]) ^ (0x0_1 o (0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[63:63] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[62:62]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[61:61] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[60:60])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[59:59] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[58:58]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[57:57] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[56:56]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[55:55] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[54:54]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[53:53] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[52:52])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[51:51] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[50:50]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[49:49] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[48:48])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[47:47] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[46:46]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[45:45] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[44:44])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[43:43] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[42:42]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[41:41] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[40:40]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[39:39] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[38:38]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[37:37] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[36:36])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[35:35] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[34:34]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[33:33] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[32:32]))))) + 0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[31:31] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[30:30]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[29:29] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[28:28])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[27:27] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[26:26]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[25:25] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[24:24]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[23:23] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[22:22]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[21:21] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[20:20])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[19:19] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[18:18]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[17:17] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[16:16])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[15:15] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[14:14]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[13:13] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[12:12])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[11:11] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[10:10]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[9:9] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[8:8]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[7:7] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[6:6]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[5:5] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[4:4])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[3:3] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[2:2]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[1:1] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[0:0]))))))[31:0] + 0xffffffff_33)[7:0]) & 0x3f_8))[64:1])
(shrx r32, m32, r32) -> (OP1 = (0x0_32 o OP2[31:0] o 0x0_1 >> 0x0_57 o (((OP3[7:0] | (0x0_1 o (0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[63:63] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[62:62]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[61:61] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[60:60])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[59:59] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[58:58]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[57:57] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[56:56]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[55:55] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[54:54]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[53:53] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[52:52])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[51:51] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[50:50]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[49:49] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[48:48])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[47:47] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[46:46]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[45:45] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[44:44])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[43:43] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[42:42]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[41:41] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[40:40]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[39:39] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[38:38]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[37:37] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[36:36])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[35:35] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[34:34]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[33:33] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[32:32]))))) + 0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[31:31] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[30:30]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[29:29] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[28:28])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[27:27] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[26:26]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[25:25] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[24:24]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[23:23] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[22:22]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[21:21] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[20:20])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[19:19] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[18:18]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[17:17] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[16:16])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[15:15] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[14:14]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[13:13] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[12:12])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[11:11] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[10:10]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[9:9] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[8:8]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[7:7] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[6:6]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[5:5] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[4:4])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[3:3] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[2:2]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[1:1] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[0:0]))))))[31:0] + 0xffffffff_33)[7:0]) ^ (0x0_1 o (0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[63:63] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[62:62]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[61:61] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[60:60])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[59:59] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[58:58]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[57:57] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[56:56]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[55:55] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[54:54]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[53:53] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[52:52])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[51:51] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[50:50]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[49:49] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[48:48])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[47:47] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[46:46]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[45:45] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[44:44])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[43:43] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[42:42]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[41:41] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[40:40]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[39:39] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[38:38]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[37:37] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[36:36])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[35:35] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[34:34]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[33:33] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[32:32]))))) + 0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[31:31] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[30:30]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[29:29] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[28:28])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[27:27] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[26:26]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[25:25] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[24:24]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[23:23] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[22:22]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[21:21] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[20:20])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[19:19] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[18:18]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[17:17] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[16:16])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[15:15] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[14:14]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[13:13] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[12:12])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[11:11] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[10:10]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[9:9] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[8:8]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[7:7] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[6:6]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[5:5] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[4:4])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[3:3] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[2:2]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[1:1] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]) + 0x1_65 : 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0])) + 0x0_1 o (0x0_64 ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o 0x0_64)[31:0]))[0:0]))))))[31:0] + 0xffffffff_33)[7:0]) & 0x3f_8))[64:1])
(shrx r64, r64, r64) -> (OP1 = (OP2 o 0x0_1 >> 0x0_57 o (OP3[7:0] & 0x3f_8))[64:1])
(shrx r64, m64, r64) -> (OP1 = (OP2 o 0x0_1 >> 0x0_57 o (OP3[7:0] & 0x3f_8))[64:1])
(sqrtpd xmm, m128) -> (OP1 = OP1[255:128] o (sqrt_double(OP2[127:64]) o sqrt_double(OP2[63:0])))
(sqrtpd xmm, xmm) -> (OP1 = OP1[255:128] o (sqrt_double(OP2[127:64]) o sqrt_double(OP2[63:0])))
(sqrtps xmm, m128) -> (OP1 = OP1[255:128] o (sqrt_single(OP2[127:96]) o (sqrt_single(OP2[95:64]) o (sqrt_single(OP2[63:32]) o sqrt_single(OP2[31:0])))))
(sqrtps xmm, xmm) -> (OP1 = OP1[255:128] o (sqrt_single(OP2[127:96]) o (sqrt_single(OP2[95:64]) o (sqrt_single(OP2[63:32]) o sqrt_single(OP2[31:0])))))
(sqrtsd xmm, m64) -> (OP1 = OP1[255:128] o (OP1[127:64] o sqrt_double(OP2[63:0])))
(sqrtsd xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:64] o sqrt_double(OP2[63:0])))
(sqrtss xmm, m32) -> (OP1 = OP1[255:128] o (OP1[127:32] o sqrt_single(OP2[31:0])))
(sqrtss xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:32] o sqrt_single(OP2[31:0])))
(stc) -> (CF := true)
(sub rh, imm8) -> (OP1 = OP1[63:16] o (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:0] o OP1[7:0] ; CF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[8:8] == 0x1_1) ; PF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:0] == 0x0_8 ; SF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:7] == 0x1_1 ; OF := (!OP2[7:7] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[7:7] == 0x1_1 bool_iff (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:7] == 0x1_1))
(sub rh, rh) -> (OP1 = OP1[63:16] o (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[15:8])[7:0] o OP1[7:0] ; CF := !((0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[15:8])[8:8] == 0x1_1) ; PF := !((0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[15:8])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[15:8])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[15:8])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[15:8])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[15:8])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[15:8])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[15:8])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[15:8])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[15:8])[7:0] == 0x0_8 ; SF := (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[15:8])[7:7] == 0x1_1 ; OF := (!OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[15:15] == 0x1_1 bool_iff (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[15:8])[7:7] == 0x1_1))
(sub rh, r8) -> (OP1 = OP1[63:16] o (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:0] o OP1[7:0] ; CF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[8:8] == 0x1_1) ; PF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:0] == 0x0_8 ; SF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:7] == 0x1_1 ; OF := (!OP2[7:7] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[7:7] == 0x1_1 bool_iff (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:7] == 0x1_1))
(sub rh, m8) -> (OP1 = OP1[63:16] o (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:0] o OP1[7:0] ; CF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[8:8] == 0x1_1) ; PF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:0] == 0x0_8 ; SF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:7] == 0x1_1 ; OF := (!OP2[7:7] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[7:7] == 0x1_1 bool_iff (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[15:8])[7:7] == 0x1_1))
(sub al, imm8) -> (OP1 = OP1[63:8] o (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:0] ; CF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[8:8] == 0x1_1) ; PF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (!OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(!OP2[7:7] == 0x1_1 bool_iff (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(sub r8, imm8) -> (OP1 = OP1[63:8] o (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:0] ; CF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[8:8] == 0x1_1) ; PF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (!OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(!OP2[7:7] == 0x1_1 bool_iff (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(sub r8, rh) -> (OP1 = OP1[63:8] o (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[7:0] ; CF := !((0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[8:8] == 0x1_1) ; PF := !((0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (!OP2[15:15] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(!OP2[15:15] == 0x1_1 bool_iff (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(sub r8, r8) -> (OP1 = OP1[63:8] o (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:0] ; CF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[8:8] == 0x1_1) ; PF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (!OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(!OP2[7:7] == 0x1_1 bool_iff (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(sub r8, m8) -> (OP1 = OP1[63:8] o (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:0] ; CF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[8:8] == 0x1_1) ; PF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (!OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(!OP2[7:7] == 0x1_1 bool_iff (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(sub m8, imm8) -> (OP1 = (OP1[63:8] o (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:0])[7:0] ; CF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[8:8] == 0x1_1) ; PF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (!OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(!OP2[7:7] == 0x1_1 bool_iff (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(sub m8, rh) -> (OP1 = (OP1[63:8] o (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[7:0])[7:0] ; CF := !((0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[8:8] == 0x1_1) ; PF := !((0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (!OP2[15:15] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(!OP2[15:15] == 0x1_1 bool_iff (0x0_1 o !OP2[15:8] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(sub m8, r8) -> (OP1 = (OP1[63:8] o (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:0])[7:0] ; CF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[8:8] == 0x1_1) ; PF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (!OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(!OP2[7:7] == 0x1_1 bool_iff (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(sub eax, imm32) -> (OP1 = 0x0_32 o (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] ; CF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[32:32] == 0x1_1) ; PF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (!OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(!OP2[31:31] == 0x1_1 bool_iff (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(sub r32, imm8) -> (OP1 = 0x0_32 o (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] ; CF := !((0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[32:32] == 0x1_1) ; PF := !((0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (!(sign-extend-32(OP2))[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(!(sign-extend-32(OP2))[31:31] == 0x1_1 bool_iff (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(sub r32, imm32) -> (OP1 = 0x0_32 o (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] ; CF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[32:32] == 0x1_1) ; PF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (!OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(!OP2[31:31] == 0x1_1 bool_iff (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(sub r32, r32) -> (OP1 = 0x0_32 o (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] ; CF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[32:32] == 0x1_1) ; PF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (!OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(!OP2[31:31] == 0x1_1 bool_iff (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(sub r32, m32) -> (OP1 = 0x0_32 o (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] ; CF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[32:32] == 0x1_1) ; PF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (!OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(!OP2[31:31] == 0x1_1 bool_iff (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(sub m32, imm8) -> (OP1 = 0x0_32 o (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] ; CF := !((0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[32:32] == 0x1_1) ; PF := !((0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (!(sign-extend-32(OP2))[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(!(sign-extend-32(OP2))[31:31] == 0x1_1 bool_iff (0x0_1 o !(sign-extend-32(OP2))[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(sub m32, imm32) -> (OP1 = (0x0_32 o (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0])[31:0] ; CF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[32:32] == 0x1_1) ; PF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (!OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(!OP2[31:31] == 0x1_1 bool_iff (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(sub m32, r32) -> (OP1 = (0x0_32 o (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0])[31:0] ; CF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[32:32] == 0x1_1) ; PF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (!OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(!OP2[31:31] == 0x1_1 bool_iff (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(sub rax, imm32) -> (OP1 = (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:0] ; CF := !((0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[64:64] == 0x1_1) ; PF := !((0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1))
(sub r64, imm8) -> (OP1 = (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:0] ; CF := !((0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[64:64] == 0x1_1) ; PF := !((0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1))
(sub r64, imm32) -> (OP1 = (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:0] ; CF := !((0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[64:64] == 0x1_1) ; PF := !((0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1))
(sub r64, r64) -> (OP1 = (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[63:0] ; CF := !((0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[64:64] == 0x1_1) ; PF := !((0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (!OP2[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(!OP2[63:63] == 0x1_1 bool_iff (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1))
(sub r64, m64) -> (OP1 = (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[63:0] ; CF := !((0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[64:64] == 0x1_1) ; PF := !((0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (!OP2[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(!OP2[63:63] == 0x1_1 bool_iff (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1))
(sub m64, imm8) -> (OP1 = (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:0] ; CF := !((0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[64:64] == 0x1_1) ; PF := !((0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1))
(sub m64, imm32) -> (OP1 = (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:0] ; CF := !((0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[64:64] == 0x1_1) ; PF := !((0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(!(sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff (0x0_1 o !(sign-extend-64(OP2)) + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1))
(sub m64, r64) -> (OP1 = ((0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[63:0])[63:0] ; CF := !((0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[64:64] == 0x1_1) ; PF := !((0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (!OP2[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(!OP2[63:63] == 0x1_1 bool_iff (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1))
(sub ax, imm16) -> (OP1 = OP1[63:16] o (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:0] ; CF := !((0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[16:16] == 0x1_1) ; PF := !((0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (!OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[15:15] == 0x1_1 bool_iff (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(sub r16, imm8) -> (OP1 = OP1[63:16] o (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:0] ; CF := !((0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[16:16] == 0x1_1) ; PF := !((0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (!(sign-extend-16(OP2))[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!(sign-extend-16(OP2))[15:15] == 0x1_1 bool_iff (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(sub r16, imm16) -> (OP1 = OP1[63:16] o (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:0] ; CF := !((0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[16:16] == 0x1_1) ; PF := !((0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (!OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[15:15] == 0x1_1 bool_iff (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(sub r16, r16) -> (OP1 = OP1[63:16] o (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:0] ; CF := !((0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[16:16] == 0x1_1) ; PF := !((0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (!OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[15:15] == 0x1_1 bool_iff (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(sub r16, m16) -> (OP1 = OP1[63:16] o (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:0] ; CF := !((0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[16:16] == 0x1_1) ; PF := !((0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (!OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[15:15] == 0x1_1 bool_iff (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(sub m16, imm8) -> (OP1 = OP1[63:16] o (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:0] ; CF := !((0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[16:16] == 0x1_1) ; PF := !((0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (!(sign-extend-16(OP2))[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!(sign-extend-16(OP2))[15:15] == 0x1_1 bool_iff (0x0_1 o !(sign-extend-16(OP2))[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(sub m16, imm16) -> (OP1 = (OP1[63:16] o (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:0])[15:0] ; CF := !((0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[16:16] == 0x1_1) ; PF := !((0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (!OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[15:15] == 0x1_1 bool_iff (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(sub m16, r16) -> (OP1 = (OP1[63:16] o (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:0])[15:0] ; CF := !((0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[16:16] == 0x1_1) ; PF := !((0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (!OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(!OP2[15:15] == 0x1_1 bool_iff (0x0_1 o !OP2[15:0] + 0x1_17 + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(subpd xmm, m128) -> (OP1 = OP1[255:128] o (sub_double(OP1[127:64], OP2[127:64]) o sub_double(OP1[63:0], OP2[63:0])))
(subpd xmm, xmm) -> (OP1 = OP1[255:128] o (sub_double(OP1[127:64], OP2[127:64]) o sub_double(OP1[63:0], OP2[63:0])))
(subps xmm, m128) -> (OP1 = OP1[255:128] o (sub_single(OP1[127:96], OP2[127:96]) o (sub_single(OP1[95:64], OP2[95:64]) o (sub_single(OP1[63:32], OP2[63:32]) o sub_single(OP1[31:0], OP2[31:0])))))
(subps xmm, xmm) -> (OP1 = OP1[255:128] o (sub_single(OP1[127:96], OP2[127:96]) o (sub_single(OP1[95:64], OP2[95:64]) o (sub_single(OP1[63:32], OP2[63:32]) o sub_single(OP1[31:0], OP2[31:0])))))
(subsd xmm, m64) -> (OP1 = OP1[255:128] o (OP1[127:64] o sub_double(OP1[63:0], OP2[63:0])))
(subsd xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:64] o sub_double(OP1[63:0], OP2[63:0])))
(subss xmm, m32) -> (OP1 = OP1[255:128] o (OP1[127:32] o sub_single(OP1[31:0], OP2[31:0])))
(subss xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:32] o sub_single(OP1[31:0], OP2[31:0])))
(test rh, imm8) -> (CF := false ; PF := !((OP1[8:8] & OP2[0:0]) == 0x1_1 bool_xor (OP1[9:9] & OP2[1:1]) == 0x1_1 bool_xor (OP1[10:10] & OP2[2:2]) == 0x1_1 bool_xor (OP1[11:11] & OP2[3:3]) == 0x1_1 bool_xor (OP1[12:12] & OP2[4:4]) == 0x1_1 bool_xor (OP1[13:13] & OP2[5:5]) == 0x1_1 bool_xor (OP1[14:14] & OP2[6:6]) == 0x1_1 bool_xor (OP1[15:15] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:8] & OP2[7:0]) == 0x0_8 ; SF := (OP1[15:15] & OP2[7:7]) == 0x1_1 ; OF := false)
(test rh, rh) -> (CF := false ; PF := !((OP1[8:8] & OP2[8:8]) == 0x1_1 bool_xor (OP1[9:9] & OP2[9:9]) == 0x1_1 bool_xor (OP1[10:10] & OP2[10:10]) == 0x1_1 bool_xor (OP1[11:11] & OP2[11:11]) == 0x1_1 bool_xor (OP1[12:12] & OP2[12:12]) == 0x1_1 bool_xor (OP1[13:13] & OP2[13:13]) == 0x1_1 bool_xor (OP1[14:14] & OP2[14:14]) == 0x1_1 bool_xor (OP1[15:15] & OP2[15:15]) == 0x1_1) ; ZF := (OP1[15:8] & OP2[15:8]) == 0x0_8 ; SF := (OP1[15:15] & OP2[15:15]) == 0x1_1 ; OF := false)
(test rh, r8) -> (CF := false ; PF := !((OP1[8:8] & OP2[0:0]) == 0x1_1 bool_xor (OP1[9:9] & OP2[1:1]) == 0x1_1 bool_xor (OP1[10:10] & OP2[2:2]) == 0x1_1 bool_xor (OP1[11:11] & OP2[3:3]) == 0x1_1 bool_xor (OP1[12:12] & OP2[4:4]) == 0x1_1 bool_xor (OP1[13:13] & OP2[5:5]) == 0x1_1 bool_xor (OP1[14:14] & OP2[6:6]) == 0x1_1 bool_xor (OP1[15:15] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:8] & OP2[7:0]) == 0x0_8 ; SF := (OP1[15:15] & OP2[7:7]) == 0x1_1 ; OF := false)
(test al, imm8) -> (CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[7:0] & OP2[7:0]) == 0x0_8 ; SF := (OP1[7:7] & OP2[7:7]) == 0x1_1 ; OF := false)
(test r8, imm8) -> (CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[7:0] & OP2[7:0]) == 0x0_8 ; SF := (OP1[7:7] & OP2[7:7]) == 0x1_1 ; OF := false)
(test r8, rh) -> (CF := false ; PF := !((OP1[0:0] & OP2[8:8]) == 0x1_1 bool_xor (OP1[1:1] & OP2[9:9]) == 0x1_1 bool_xor (OP1[2:2] & OP2[10:10]) == 0x1_1 bool_xor (OP1[3:3] & OP2[11:11]) == 0x1_1 bool_xor (OP1[4:4] & OP2[12:12]) == 0x1_1 bool_xor (OP1[5:5] & OP2[13:13]) == 0x1_1 bool_xor (OP1[6:6] & OP2[14:14]) == 0x1_1 bool_xor (OP1[7:7] & OP2[15:15]) == 0x1_1) ; ZF := (OP1[7:0] & OP2[15:8]) == 0x0_8 ; SF := (OP1[7:7] & OP2[15:15]) == 0x1_1 ; OF := false)
(test r8, r8) -> (CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[7:0] & OP2[7:0]) == 0x0_8 ; SF := (OP1[7:7] & OP2[7:7]) == 0x1_1 ; OF := false)
(test m8, imm8) -> (CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[7:0] & OP2[7:0]) == 0x0_8 ; SF := (OP1[7:7] & OP2[7:7]) == 0x1_1 ; OF := false)
(test m8, rh) -> (CF := false ; PF := !((OP1[0:0] & OP2[8:8]) == 0x1_1 bool_xor (OP1[1:1] & OP2[9:9]) == 0x1_1 bool_xor (OP1[2:2] & OP2[10:10]) == 0x1_1 bool_xor (OP1[3:3] & OP2[11:11]) == 0x1_1 bool_xor (OP1[4:4] & OP2[12:12]) == 0x1_1 bool_xor (OP1[5:5] & OP2[13:13]) == 0x1_1 bool_xor (OP1[6:6] & OP2[14:14]) == 0x1_1 bool_xor (OP1[7:7] & OP2[15:15]) == 0x1_1) ; ZF := (OP1[7:0] & OP2[15:8]) == 0x0_8 ; SF := (OP1[7:7] & OP2[15:15]) == 0x1_1 ; OF := false)
(test m8, r8) -> (CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[7:0] & OP2[7:0]) == 0x0_8 ; SF := (OP1[7:7] & OP2[7:7]) == 0x1_1 ; OF := false)
(test eax, imm32) -> (CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[31:0] & OP2[31:0]) == 0x0_32 ; SF := (OP1[31:31] & OP2[31:31]) == 0x1_1 ; OF := false)
(test r32, imm32) -> (CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[31:0] & OP2[31:0]) == 0x0_32 ; SF := (OP1[31:31] & OP2[31:31]) == 0x1_1 ; OF := false)
(test r32, r32) -> (CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[31:0] & OP2[31:0]) == 0x0_32 ; SF := (OP1[31:31] & OP2[31:31]) == 0x1_1 ; OF := false)
(test m32, imm32) -> (CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[31:0] & OP2[31:0]) == 0x0_32 ; SF := (OP1[31:31] & OP2[31:31]) == 0x1_1 ; OF := false)
(test m32, r32) -> (CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[31:0] & OP2[31:0]) == 0x0_32 ; SF := (OP1[31:31] & OP2[31:31]) == 0x1_1 ; OF := false)
(test rax, imm32) -> (CF := false ; PF := !((OP1[0:0] & (sign-extend-64(OP2))[0:0]) == 0x1_1 bool_xor (OP1[1:1] & (sign-extend-64(OP2))[1:1]) == 0x1_1 bool_xor (OP1[2:2] & (sign-extend-64(OP2))[2:2]) == 0x1_1 bool_xor (OP1[3:3] & (sign-extend-64(OP2))[3:3]) == 0x1_1 bool_xor (OP1[4:4] & (sign-extend-64(OP2))[4:4]) == 0x1_1 bool_xor (OP1[5:5] & (sign-extend-64(OP2))[5:5]) == 0x1_1 bool_xor (OP1[6:6] & (sign-extend-64(OP2))[6:6]) == 0x1_1 bool_xor (OP1[7:7] & (sign-extend-64(OP2))[7:7]) == 0x1_1) ; ZF := (OP1 & (sign-extend-64(OP2))) == 0x0_64 ; SF := (OP1[63:63] & (sign-extend-64(OP2))[63:63]) == 0x1_1 ; OF := false)
(test r64, imm32) -> (CF := false ; PF := !((OP1[0:0] & (sign-extend-64(OP2))[0:0]) == 0x1_1 bool_xor (OP1[1:1] & (sign-extend-64(OP2))[1:1]) == 0x1_1 bool_xor (OP1[2:2] & (sign-extend-64(OP2))[2:2]) == 0x1_1 bool_xor (OP1[3:3] & (sign-extend-64(OP2))[3:3]) == 0x1_1 bool_xor (OP1[4:4] & (sign-extend-64(OP2))[4:4]) == 0x1_1 bool_xor (OP1[5:5] & (sign-extend-64(OP2))[5:5]) == 0x1_1 bool_xor (OP1[6:6] & (sign-extend-64(OP2))[6:6]) == 0x1_1 bool_xor (OP1[7:7] & (sign-extend-64(OP2))[7:7]) == 0x1_1) ; ZF := (OP1 & (sign-extend-64(OP2))) == 0x0_64 ; SF := (OP1[63:63] & (sign-extend-64(OP2))[63:63]) == 0x1_1 ; OF := false)
(test r64, r64) -> (CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1 & OP2) == 0x0_64 ; SF := (OP1[63:63] & OP2[63:63]) == 0x1_1 ; OF := false)
(test m64, imm32) -> (CF := false ; PF := !((OP1[0:0] & (sign-extend-64(OP2))[0:0]) == 0x1_1 bool_xor (OP1[1:1] & (sign-extend-64(OP2))[1:1]) == 0x1_1 bool_xor (OP1[2:2] & (sign-extend-64(OP2))[2:2]) == 0x1_1 bool_xor (OP1[3:3] & (sign-extend-64(OP2))[3:3]) == 0x1_1 bool_xor (OP1[4:4] & (sign-extend-64(OP2))[4:4]) == 0x1_1 bool_xor (OP1[5:5] & (sign-extend-64(OP2))[5:5]) == 0x1_1 bool_xor (OP1[6:6] & (sign-extend-64(OP2))[6:6]) == 0x1_1 bool_xor (OP1[7:7] & (sign-extend-64(OP2))[7:7]) == 0x1_1) ; ZF := (OP1 & (sign-extend-64(OP2))) == 0x0_64 ; SF := (OP1[63:63] & (sign-extend-64(OP2))[63:63]) == 0x1_1 ; OF := false)
(test m64, r64) -> (CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1 & OP2) == 0x0_64 ; SF := (OP1[63:63] & OP2[63:63]) == 0x1_1 ; OF := false)
(test ax, imm16) -> (CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:0] & OP2[15:0]) == 0x0_16 ; SF := (OP1[15:15] & OP2[15:15]) == 0x1_1 ; OF := false)
(test r16, imm16) -> (CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:0] & OP2[15:0]) == 0x0_16 ; SF := (OP1[15:15] & OP2[15:15]) == 0x1_1 ; OF := false)
(test r16, r16) -> (CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:0] & OP2[15:0]) == 0x0_16 ; SF := (OP1[15:15] & OP2[15:15]) == 0x1_1 ; OF := false)
(test m16, imm16) -> (CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:0] & OP2[15:0]) == 0x0_16 ; SF := (OP1[15:15] & OP2[15:15]) == 0x1_1 ; OF := false)
(test m16, r16) -> (CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:0] & OP2[15:0]) == 0x0_16 ; SF := (OP1[15:15] & OP2[15:15]) == 0x1_1 ; OF := false)
(tzcnt r32, r32) -> (OP1 = 0x0_32 o (0x0_1 o (0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[63:63] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[62:62]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[61:61] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[60:60])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[59:59] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[58:58]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[57:57] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[56:56]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[55:55] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[54:54]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[53:53] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[52:52])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[51:51] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[50:50]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[49:49] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[48:48])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[47:47] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[46:46]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[45:45] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[44:44])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[43:43] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[42:42]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[41:41] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[40:40]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[39:39] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[38:38]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[37:37] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[36:36])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[35:35] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[34:34]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[33:33] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[32:32]))))) + 0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[31:31] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[30:30]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[29:29] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[28:28])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[27:27] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[26:26]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[25:25] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[24:24]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[23:23] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[22:22]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[21:21] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[20:20])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[19:19] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[18:18]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[17:17] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[16:16])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[15:15] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[14:14]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[13:13] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[12:12])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[11:11] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[10:10]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[9:9] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[8:8]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[7:7] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[6:6]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[5:5] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[4:4])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[3:3] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[2:2]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[1:1] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[0:0]))))))[31:0] + 0xffffffff_33)[31:0] ; CF := (0x0_1 o (sign-extend-64((((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[7:0] o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[7:0]) o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[8:1] + 0x0_1 o (sign-extend-64((((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[7:0] o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[7:0]) o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[8:1])[8:8] == 0x1_1 ; ZF := (0x0_1 o (0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[63:63] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[62:62]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[61:61] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[60:60])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[59:59] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[58:58]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[57:57] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[56:56]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[55:55] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[54:54]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[53:53] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[52:52])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[51:51] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[50:50]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[49:49] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[48:48])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[47:47] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[46:46]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[45:45] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[44:44])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[43:43] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[42:42]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[41:41] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[40:40]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[39:39] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[38:38]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[37:37] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[36:36])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[35:35] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[34:34]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[33:33] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[32:32]))))) + 0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[31:31] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[30:30]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[29:29] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[28:28])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[27:27] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[26:26]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[25:25] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[24:24]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[23:23] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[22:22]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[21:21] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[20:20])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[19:19] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[18:18]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[17:17] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[16:16])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[15:15] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[14:14]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[13:13] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[12:12])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[11:11] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[10:10]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[9:9] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[8:8]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[7:7] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[6:6]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[5:5] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[4:4])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[3:3] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[2:2]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[1:1] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[0:0]))))))[31:0] + 0xffffffff_33)[31:0] == 0x0_32)
(tzcnt r32, m32) -> (OP1 = 0x0_32 o (0x0_1 o (0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[63:63] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[62:62]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[61:61] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[60:60])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[59:59] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[58:58]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[57:57] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[56:56]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[55:55] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[54:54]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[53:53] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[52:52])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[51:51] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[50:50]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[49:49] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[48:48])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[47:47] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[46:46]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[45:45] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[44:44])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[43:43] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[42:42]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[41:41] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[40:40]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[39:39] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[38:38]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[37:37] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[36:36])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[35:35] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[34:34]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[33:33] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[32:32]))))) + 0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[31:31] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[30:30]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[29:29] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[28:28])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[27:27] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[26:26]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[25:25] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[24:24]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[23:23] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[22:22]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[21:21] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[20:20])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[19:19] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[18:18]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[17:17] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[16:16])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[15:15] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[14:14]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[13:13] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[12:12])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[11:11] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[10:10]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[9:9] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[8:8]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[7:7] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[6:6]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[5:5] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[4:4])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[3:3] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[2:2]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[1:1] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[0:0]))))))[31:0] + 0xffffffff_33)[31:0] ; CF := (0x0_1 o (sign-extend-64((((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[7:0] o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[7:0]) o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[8:1] + 0x0_1 o (sign-extend-64((((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[7:0] o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[7:0]) o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[8:1])[8:8] == 0x1_1 ; ZF := (0x0_1 o (0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[63:63] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[62:62]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[61:61] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[60:60])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[59:59] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[58:58]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[57:57] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[56:56]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[55:55] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[54:54]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[53:53] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[52:52])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[51:51] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[50:50]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[49:49] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[48:48])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[47:47] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[46:46]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[45:45] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[44:44])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[43:43] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[42:42]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[41:41] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[40:40]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[39:39] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[38:38]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[37:37] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[36:36])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[35:35] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[34:34]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[33:33] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[32:32]))))) + 0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[31:31] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[30:30]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[29:29] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[28:28])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[27:27] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[26:26]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[25:25] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[24:24]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[23:23] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[22:22]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[21:21] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[20:20])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[19:19] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[18:18]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[17:17] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[16:16])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[15:15] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[14:14]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[13:13] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[12:12])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[11:11] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[10:10]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[9:9] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[8:8]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[7:7] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[6:6]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[5:5] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[4:4])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[3:3] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[2:2]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[1:1] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0])) + 0x0_1 o (0x0_32 o OP2[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o OP2[31:0]))[31:0]))[0:0]))))))[31:0] + 0xffffffff_33)[31:0] == 0x0_32)
(tzcnt r16, r16) -> (OP1 = OP1[63:16] o (((0x0_1 o (sign-extend-64((((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[7:0] o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[7:0]) o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[8:1] + 0x0_1 o (sign-extend-64((((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[7:0] o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[7:0]) o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[8:1])[8:8] == 0x1_1 ? 0x100_16 : 0x0_16) == 0x0_16 ? (0x0_1 o (0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[63:63] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[62:62]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[61:61] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[60:60])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[59:59] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[58:58]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[57:57] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[56:56]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[55:55] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[54:54]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[53:53] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[52:52])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[51:51] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[50:50]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[49:49] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[48:48])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[47:47] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[46:46]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[45:45] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[44:44])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[43:43] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[42:42]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[41:41] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[40:40]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[39:39] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[38:38]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[37:37] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[36:36])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[35:35] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[34:34]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[33:33] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[32:32]))))) + 0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[31:31] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[30:30]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[29:29] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[28:28])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[27:27] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[26:26]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[25:25] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[24:24]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[23:23] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[22:22]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[21:21] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[20:20])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[19:19] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[18:18]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[17:17] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[16:16])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[15:15] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[14:14]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[13:13] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[12:12])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[11:11] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[10:10]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[9:9] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[8:8]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[7:7] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[6:6]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[5:5] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[4:4])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[3:3] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[2:2]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[1:1] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[0:0]))))))[31:0] + 0xffffffff_33)[15:0] : 0x10_16) ; CF := (0x0_1 o (sign-extend-64((((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[7:0] o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[7:0]) o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[8:1] + 0x0_1 o (sign-extend-64((((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[7:0] o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[7:0]) o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[8:1])[8:8] == 0x1_1 ; ZF := (0x0_1 o (0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[63:63] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[62:62]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[61:61] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[60:60])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[59:59] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[58:58]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[57:57] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[56:56]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[55:55] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[54:54]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[53:53] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[52:52])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[51:51] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[50:50]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[49:49] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[48:48])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[47:47] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[46:46]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[45:45] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[44:44])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[43:43] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[42:42]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[41:41] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[40:40]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[39:39] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[38:38]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[37:37] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[36:36])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[35:35] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[34:34]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[33:33] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[32:32]))))) + 0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[31:31] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[30:30]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[29:29] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[28:28])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[27:27] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[26:26]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[25:25] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[24:24]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[23:23] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[22:22]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[21:21] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[20:20])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[19:19] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[18:18]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[17:17] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[16:16])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[15:15] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[14:14]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[13:13] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[12:12])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[11:11] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[10:10]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[9:9] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[8:8]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[7:7] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[6:6]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[5:5] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[4:4])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[3:3] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[2:2]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[1:1] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[0:0]))))))[31:0] + 0xffffffff_33)[31:0] == 0x0_32)
(tzcnt r16, m16) -> (OP1 = OP1[63:16] o (((0x0_1 o (sign-extend-64((((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[7:0] o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[7:0]) o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[8:1] + 0x0_1 o (sign-extend-64((((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[7:0] o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[7:0]) o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[8:1])[8:8] == 0x1_1 ? 0x100_16 : 0x0_16) == 0x0_16 ? (0x0_1 o (0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[63:63] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[62:62]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[61:61] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[60:60])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[59:59] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[58:58]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[57:57] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[56:56]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[55:55] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[54:54]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[53:53] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[52:52])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[51:51] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[50:50]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[49:49] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[48:48])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[47:47] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[46:46]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[45:45] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[44:44])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[43:43] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[42:42]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[41:41] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[40:40]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[39:39] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[38:38]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[37:37] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[36:36])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[35:35] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[34:34]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[33:33] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[32:32]))))) + 0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[31:31] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[30:30]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[29:29] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[28:28])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[27:27] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[26:26]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[25:25] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[24:24]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[23:23] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[22:22]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[21:21] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[20:20])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[19:19] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[18:18]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[17:17] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[16:16])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[15:15] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[14:14]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[13:13] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[12:12])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[11:11] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[10:10]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[9:9] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[8:8]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[7:7] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[6:6]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[5:5] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[4:4])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[3:3] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[2:2]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[1:1] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[0:0]))))))[31:0] + 0xffffffff_33)[15:0] : 0x10_16) ; CF := (0x0_1 o (sign-extend-64((((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[7:0] o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[7:0]) o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[8:1] + 0x0_1 o (sign-extend-64((((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[7:0] o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[7:0]) o 0x0_1 sign_shift_right 0x0_57 o 0x1_8)[8:1])[8:8] == 0x1_1 ; ZF := (0x0_1 o (0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[63:63] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[62:62]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[61:61] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[60:60])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[59:59] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[58:58]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[57:57] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[56:56]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[55:55] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[54:54]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[53:53] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[52:52])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[51:51] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[50:50]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[49:49] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[48:48])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[47:47] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[46:46]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[45:45] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[44:44])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[43:43] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[42:42]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[41:41] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[40:40]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[39:39] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[38:38]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[37:37] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[36:36])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[35:35] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[34:34]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[33:33] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[32:32]))))) + 0x0_32 o (0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[31:31] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[30:30]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[29:29] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[28:28])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[27:27] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[26:26]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[25:25] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[24:24]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[23:23] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[22:22]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[21:21] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[20:20])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[19:19] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[18:18]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[17:17] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[16:16])))) + 0x0_16 o (0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[15:15] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[14:14]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[13:13] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[12:12])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[11:11] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[10:10]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[9:9] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[8:8]))) + 0x0_8 o (0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[7:7] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[6:6]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[5:5] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[4:4])) + 0x0_4 o (0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[3:3] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[2:2]) + 0x0_2 o (0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[1:1] + 0x0_1 o (((0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40] + 0x0_1 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[47:40])[8:8] == 0x1_1 ? 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]) + 0x1_65 : 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0])) + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0] ^ 0x0_32 o (0x0_1 o 0xffffffffffffffff_64 + 0x0_1 o (0x0_32 o sign-extend-64(OP2[15:0])[31:0]))[31:0]))[0:0]))))))[31:0] + 0xffffffff_33)[31:0] == 0x0_32)
(unpckhpd xmm, m128) -> (OP1 = OP1[255:128] o (OP2[127:64] o OP1[127:64]))
(unpckhpd xmm, xmm) -> (OP1 = OP1[255:128] o (OP2[127:64] o OP1[127:64]))
(unpckhps xmm, m128) -> (OP1 = OP1[255:128] o (OP2[127:96] o OP1[127:96] o OP2[95:64] o OP1[95:64]))
(unpckhps xmm, xmm) -> (OP1 = OP1[255:128] o (OP2[127:96] o OP1[127:96] o OP2[95:64] o OP1[95:64]))
(unpcklpd xmm, m128) -> (OP1 = OP1[255:128] o (OP2[63:0] o OP1[63:0]))
(unpcklpd xmm, xmm) -> (OP1 = OP1[255:128] o (OP2[63:0] o OP1[63:0]))
(unpcklps xmm, m128) -> (OP1 = OP1[255:128] o (OP2[63:32] o OP1[63:32] o OP2[31:0] o OP1[31:0]))
(unpcklps xmm, xmm) -> (OP1 = OP1[255:128] o (OP2[63:32] o OP1[63:32] o OP2[31:0] o OP1[31:0]))
(vaddpd xmm, xmm, m128) -> (OP1 = 0x0_128 o (add_double(OP2[127:64], OP3[127:64]) o add_double(OP2[63:0], OP3[63:0])))
(vaddpd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (add_double(OP2[127:64], OP3[127:64]) o add_double(OP2[63:0], OP3[63:0])))
(vaddpd ymm, ymm, m256) -> (OP1 = add_double(OP2[255:192], OP3[255:192]) o (add_double(OP2[191:128], OP3[191:128]) o (add_double(OP2[127:64], OP3[127:64]) o add_double(OP2[63:0], OP3[63:0]))))
(vaddpd ymm, ymm, ymm) -> (OP1 = add_double(OP2[255:192], OP3[255:192]) o (add_double(OP2[191:128], OP3[191:128]) o (add_double(OP2[127:64], OP3[127:64]) o add_double(OP2[63:0], OP3[63:0]))))
(vaddps xmm, xmm, m128) -> (OP1 = 0x0_128 o (add_single(OP2[127:96], OP3[127:96]) o (add_single(OP2[95:64], OP3[95:64]) o (add_single(OP2[63:32], OP3[63:32]) o add_single(OP2[31:0], OP3[31:0])))))
(vaddps xmm, xmm, xmm) -> (OP1 = 0x0_128 o (add_single(OP2[127:96], OP3[127:96]) o (add_single(OP2[95:64], OP3[95:64]) o (add_single(OP2[63:32], OP3[63:32]) o add_single(OP2[31:0], OP3[31:0])))))
(vaddps ymm, ymm, m256) -> (OP1 = add_single(OP2[255:224], OP3[255:224]) o (add_single(OP2[223:192], OP3[223:192]) o (add_single(OP2[191:160], OP3[191:160]) o (add_single(OP2[159:128], OP3[159:128]) o (add_single(OP2[127:96], OP3[127:96]) o (add_single(OP2[95:64], OP3[95:64]) o (add_single(OP2[63:32], OP3[63:32]) o add_single(OP2[31:0], OP3[31:0]))))))))
(vaddps ymm, ymm, ymm) -> (OP1 = add_single(OP2[255:224], OP3[255:224]) o (add_single(OP2[223:192], OP3[223:192]) o (add_single(OP2[191:160], OP3[191:160]) o (add_single(OP2[159:128], OP3[159:128]) o (add_single(OP2[127:96], OP3[127:96]) o (add_single(OP2[95:64], OP3[95:64]) o (add_single(OP2[63:32], OP3[63:32]) o add_single(OP2[31:0], OP3[31:0]))))))))
(vaddsd xmm, xmm, m64) -> (OP1 = 0x0_128 o (OP1[127:64] o add_double(OP2[63:0], OP3[63:0])))
(vaddsd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:64] o add_double(OP2[63:0], OP3[63:0])))
(vaddss xmm, xmm, m32) -> (OP1 = 0x0_128 o (OP1[127:32] o add_single(OP2[31:0], OP3[31:0])))
(vaddss xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:32] o add_single(OP2[31:0], OP3[31:0])))
(vaddsubpd xmm, xmm, m128) -> (OP1 = 0x0_128 o (sub_double(OP2[63:0], OP3[63:0]) o add_double(OP2[127:64], OP3[127:64])))
(vaddsubpd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (sub_double(OP2[63:0], OP3[63:0]) o add_double(OP2[127:64], OP3[127:64])))
(vaddsubps xmm, xmm, m128) -> (OP1 = 0x0_128 o (sub_single(OP2[95:64], OP3[95:64]) o add_single(OP2[127:96], OP3[127:96]) o (sub_single(OP2[31:0], OP3[31:0]) o add_single(OP2[63:32], OP3[63:32]))))
(vaddsubps xmm, xmm, xmm) -> (OP1 = 0x0_128 o (sub_single(OP2[95:64], OP3[95:64]) o add_single(OP2[127:96], OP3[127:96]) o (sub_single(OP2[31:0], OP3[31:0]) o add_single(OP2[63:32], OP3[63:32]))))
(vandnpd xmm, xmm, m128) -> (OP1 = 0x0_128 o (!OP2[127:0] & OP3[127:0]))
(vandnpd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (!OP2[127:0] & OP3[127:0]))
(vandnpd ymm, ymm, m256) -> (OP1 = !OP2 & OP3)
(vandnpd ymm, ymm, ymm) -> (OP1 = !OP2 & OP3)
(vandnps xmm, xmm, m128) -> (OP1 = 0x0_128 o (!OP2[127:0] & OP3[127:0]))
(vandnps xmm, xmm, xmm) -> (OP1 = 0x0_128 o (!OP2[127:0] & OP3[127:0]))
(vandnps ymm, ymm, m256) -> (OP1 = !OP2 & OP3)
(vandnps ymm, ymm, ymm) -> (OP1 = !OP2 & OP3)
(vandpd xmm, xmm, m128) -> (OP1 = 0x0_128 o (OP2[127:0] & OP3[127:0]))
(vandpd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP2[127:0] & OP3[127:0]))
(vandpd ymm, ymm, m256) -> (OP1 = OP2 & OP3)
(vandpd ymm, ymm, ymm) -> (OP1 = OP2 & OP3)
(vandps xmm, xmm, m128) -> (OP1 = 0x0_128 o (OP2[127:0] & OP3[127:0]))
(vandps xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP2[127:0] & OP3[127:0]))
(vandps ymm, ymm, m256) -> (OP1 = OP2 & OP3)
(vandps ymm, ymm, ymm) -> (OP1 = OP2 & OP3)
(vbroadcastsd ymm, m64) -> (OP1 = OP2[63:0] o OP2[63:0] o OP2[63:0] o OP2[63:0])
(vbroadcastsd ymm, xmm) -> (OP1 = OP2[63:0] o OP2[63:0] o OP2[63:0] o OP2[63:0])
(vbroadcastss xmm, m32) -> (OP1 = 0x0_128 o (OP2[31:0] o OP2[31:0] o OP2[31:0] o OP2[31:0]))
(vbroadcastss xmm, xmm) -> (OP1 = 0x0_128 o (OP2[31:0] o OP2[31:0] o OP2[31:0] o OP2[31:0]))
(vbroadcastss ymm, m32) -> (OP1 = OP2[31:0] o OP2[31:0] o OP2[31:0] o OP2[31:0] o OP2[31:0] o OP2[31:0] o OP2[31:0] o OP2[31:0])
(vbroadcastss ymm, xmm) -> (OP1 = OP2[31:0] o OP2[31:0] o OP2[31:0] o OP2[31:0] o OP2[31:0] o OP2[31:0] o OP2[31:0] o OP2[31:0])
(vcvtdq2pd xmm, m64) -> (OP1 = 0x0_128 o (cvt_int32_to_double(OP2[63:32]) o cvt_int32_to_double(OP2[31:0])))
(vcvtdq2pd xmm, xmm) -> (OP1 = 0x0_128 o (cvt_int32_to_double(OP2[63:32]) o cvt_int32_to_double(OP2[31:0])))
(vcvtdq2pd ymm, ymm) -> (OP1 = cvt_int32_to_double(OP2[127:96]) o (cvt_int32_to_double(OP2[95:64]) o (cvt_int32_to_double(OP2[63:32]) o cvt_int32_to_double(OP2[31:0]))))
(vcvtdq2ps xmm, m128) -> (OP1 = 0x0_128 o (cvt_int32_to_single(OP2[127:96]) o (cvt_int32_to_single(OP2[95:64]) o (cvt_int32_to_single(OP2[63:32]) o cvt_int32_to_single(OP2[31:0])))))
(vcvtdq2ps xmm, xmm) -> (OP1 = 0x0_128 o (cvt_int32_to_single(OP2[127:96]) o (cvt_int32_to_single(OP2[95:64]) o (cvt_int32_to_single(OP2[63:32]) o cvt_int32_to_single(OP2[31:0])))))
(vcvtdq2ps ymm, m256) -> (OP1 = cvt_int32_to_single(OP2[255:224]) o (cvt_int32_to_single(OP2[223:192]) o (cvt_int32_to_single(OP2[191:160]) o (cvt_int32_to_single(OP2[159:128]) o (cvt_int32_to_single(OP2[127:96]) o (cvt_int32_to_single(OP2[95:64]) o (cvt_int32_to_single(OP2[63:32]) o cvt_int32_to_single(OP2[31:0]))))))))
(vcvtdq2ps ymm, ymm) -> (OP1 = cvt_int32_to_single(OP2[255:224]) o (cvt_int32_to_single(OP2[223:192]) o (cvt_int32_to_single(OP2[191:160]) o (cvt_int32_to_single(OP2[159:128]) o (cvt_int32_to_single(OP2[127:96]) o (cvt_int32_to_single(OP2[95:64]) o (cvt_int32_to_single(OP2[63:32]) o cvt_int32_to_single(OP2[31:0]))))))))
(vcvtpd2dq xmm, m256) -> (OP1 = 0x0_128 o (cvt_double_to_int32(OP2[255:192]) o (cvt_double_to_int32(OP2[191:128]) o (cvt_double_to_int32(OP2[127:64]) o cvt_double_to_int32(OP2[63:0])))))
(vcvtpd2dq xmm, ymm) -> (OP1 = 0x0_128 o (cvt_double_to_int32(OP2[255:192]) o (cvt_double_to_int32(OP2[191:128]) o (cvt_double_to_int32(OP2[127:64]) o cvt_double_to_int32(OP2[63:0])))))
(vcvtpd2dq xmm, m128) -> (OP1 = 0x0_128 o (0x0_64 o (cvt_double_to_int32(OP2[127:64]) o cvt_double_to_int32(OP2[63:0]))))
(vcvtpd2dq xmm, xmm) -> (OP1 = 0x0_128 o (0x0_64 o (cvt_double_to_int32(OP2[127:64]) o cvt_double_to_int32(OP2[63:0]))))
(vcvtpd2ps xmm, m128) -> (OP1 = 0x0_128 o (OP1[127:64] o (cvt_double_to_single(OP2[127:64]) o cvt_double_to_single(OP2[63:0]))))
(vcvtpd2ps xmm, m256) -> (OP1 = 0x0_128 o (cvt_double_to_single(OP2[255:192]) o (cvt_double_to_single(OP2[191:128]) o (cvt_double_to_single(OP2[127:64]) o cvt_double_to_single(OP2[63:0])))))
(vcvtpd2ps xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:64] o (cvt_double_to_single(OP2[127:64]) o cvt_double_to_single(OP2[63:0]))))
(vcvtpd2ps xmm, ymm) -> (OP1 = 0x0_128 o (cvt_double_to_single(OP2[255:192]) o (cvt_double_to_single(OP2[191:128]) o (cvt_double_to_single(OP2[127:64]) o cvt_double_to_single(OP2[63:0])))))
(vcvtps2dq xmm, m128) -> (OP1 = 0x0_128 o (cvt_single_to_int32(OP2[127:96]) o (cvt_single_to_int32(OP2[95:64]) o (cvt_single_to_int32(OP2[63:32]) o cvt_single_to_int32(OP2[31:0])))))
(vcvtps2dq xmm, xmm) -> (OP1 = 0x0_128 o (cvt_single_to_int32(OP2[127:96]) o (cvt_single_to_int32(OP2[95:64]) o (cvt_single_to_int32(OP2[63:32]) o cvt_single_to_int32(OP2[31:0])))))
(vcvtps2dq ymm, m256) -> (OP1 = cvt_single_to_int32(OP2[255:224]) o (cvt_single_to_int32(OP2[223:192]) o (cvt_single_to_int32(OP2[191:160]) o (cvt_single_to_int32(OP2[159:128]) o (cvt_single_to_int32(OP2[127:96]) o (cvt_single_to_int32(OP2[95:64]) o (cvt_single_to_int32(OP2[63:32]) o cvt_single_to_int32(OP2[31:0]))))))))
(vcvtps2dq ymm, ymm) -> (OP1 = cvt_single_to_int32(OP2[255:224]) o (cvt_single_to_int32(OP2[223:192]) o (cvt_single_to_int32(OP2[191:160]) o (cvt_single_to_int32(OP2[159:128]) o (cvt_single_to_int32(OP2[127:96]) o (cvt_single_to_int32(OP2[95:64]) o (cvt_single_to_int32(OP2[63:32]) o cvt_single_to_int32(OP2[31:0]))))))))
(vcvtps2pd xmm, m64) -> (OP1 = 0x0_128 o (cvt_single_to_double(OP2[63:32]) o cvt_single_to_double(OP2[31:0])))
(vcvtps2pd xmm, xmm) -> (OP1 = 0x0_128 o (cvt_single_to_double(OP2[63:32]) o cvt_single_to_double(OP2[31:0])))
(vcvtps2pd ymm, m128) -> (OP1 = cvt_single_to_double(OP2[127:96]) o (cvt_single_to_double(OP2[95:64]) o (cvt_single_to_double(OP2[63:32]) o cvt_single_to_double(OP2[31:0]))))
(vcvtps2pd ymm, xmm) -> (OP1 = cvt_single_to_double(OP2[127:96]) o (cvt_single_to_double(OP2[95:64]) o (cvt_single_to_double(OP2[63:32]) o cvt_single_to_double(OP2[31:0]))))
(vcvtsd2si r32, m64) -> (OP1 = 0x0_32 o cvt_double_to_int32(OP2[63:0]))
(vcvtsd2si r32, xmm) -> (OP1 = 0x0_32 o cvt_double_to_int32(OP2[63:0]))
(vcvtsd2ss xmm, xmm, m64) -> (OP1 = 0x0_128 o (OP1[127:32] o cvt_double_to_single(OP3[63:0])))
(vcvtsd2ss xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:32] o cvt_double_to_single(OP3[63:0])))
(vcvtsi2sd xmm, xmm, r32) -> (OP1 = 0x0_128 o (OP1[127:64] o cvt_int32_to_double(OP3[31:0])))
(vcvtsi2sd xmm, xmm, m32) -> (OP1 = 0x0_128 o (OP1[127:64] o cvt_int32_to_double(OP3[31:0])))
(vcvtsi2ss xmm, xmm, r32) -> (OP1 = 0x0_128 o (OP1[127:32] o cvt_int32_to_single(OP3[31:0])))
(vcvtsi2ss xmm, xmm, m32) -> (OP1 = 0x0_128 o (OP1[127:32] o cvt_int32_to_single(OP3[31:0])))
(vcvtss2sd xmm, xmm, m32) -> (OP1 = 0x0_128 o (OP1[127:64] o cvt_single_to_double(OP3[31:0])))
(vcvtss2sd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:64] o cvt_single_to_double(OP3[31:0])))
(vcvtss2si r32, m32) -> (OP1 = 0x0_32 o cvt_single_to_int32(OP2[31:0]))
(vcvtss2si r32, xmm) -> (OP1 = 0x0_32 o cvt_single_to_int32(OP2[31:0]))
(vcvttpd2dq xmm, m128) -> (OP1 = 0x0_128 o (OP1[127:64] o (cvt_double_to_int32_truncate(OP2[127:64]) o cvt_double_to_int32_truncate(OP2[63:0]))))
(vcvttpd2dq xmm, m256) -> (OP1 = 0x0_128 o (cvt_double_to_int32_truncate(OP2[255:192]) o (cvt_double_to_int32_truncate(OP2[191:128]) o (cvt_double_to_int32_truncate(OP2[127:64]) o cvt_double_to_int32_truncate(OP2[63:0])))))
(vcvttpd2dq xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:64] o (cvt_double_to_int32_truncate(OP2[127:64]) o cvt_double_to_int32_truncate(OP2[63:0]))))
(vcvttpd2dq xmm, ymm) -> (OP1 = 0x0_128 o (cvt_double_to_int32_truncate(OP2[255:192]) o (cvt_double_to_int32_truncate(OP2[191:128]) o (cvt_double_to_int32_truncate(OP2[127:64]) o cvt_double_to_int32_truncate(OP2[63:0])))))
(vcvttps2dq xmm, m128) -> (OP1 = 0x0_128 o (cvt_single_to_int32_truncate(OP2[127:96]) o (cvt_single_to_int32_truncate(OP2[95:64]) o (cvt_single_to_int32_truncate(OP2[63:32]) o cvt_single_to_int32_truncate(OP2[31:0])))))
(vcvttps2dq xmm, xmm) -> (OP1 = 0x0_128 o (cvt_single_to_int32_truncate(OP2[127:96]) o (cvt_single_to_int32_truncate(OP2[95:64]) o (cvt_single_to_int32_truncate(OP2[63:32]) o cvt_single_to_int32_truncate(OP2[31:0])))))
(vcvttps2dq ymm, m256) -> (OP1 = cvt_single_to_int32_truncate(OP2[255:224]) o (cvt_single_to_int32_truncate(OP2[223:192]) o (cvt_single_to_int32_truncate(OP2[191:160]) o (cvt_single_to_int32_truncate(OP2[159:128]) o (cvt_single_to_int32_truncate(OP2[127:96]) o (cvt_single_to_int32_truncate(OP2[95:64]) o (cvt_single_to_int32_truncate(OP2[63:32]) o cvt_single_to_int32_truncate(OP2[31:0]))))))))
(vcvttps2dq ymm, ymm) -> (OP1 = cvt_single_to_int32_truncate(OP2[255:224]) o (cvt_single_to_int32_truncate(OP2[223:192]) o (cvt_single_to_int32_truncate(OP2[191:160]) o (cvt_single_to_int32_truncate(OP2[159:128]) o (cvt_single_to_int32_truncate(OP2[127:96]) o (cvt_single_to_int32_truncate(OP2[95:64]) o (cvt_single_to_int32_truncate(OP2[63:32]) o cvt_single_to_int32_truncate(OP2[31:0]))))))))
(vcvttsd2si r32, m64) -> (OP1 = 0x0_32 o cvt_double_to_int32_truncate(OP2[63:0]))
(vcvttsd2si r32, xmm) -> (OP1 = 0x0_32 o cvt_double_to_int32_truncate(OP2[63:0]))
(vcvttss2si r32, m32) -> (OP1 = 0x0_32 o cvt_single_to_int32_truncate(OP2[31:0]))
(vcvttss2si r32, xmm) -> (OP1 = 0x0_32 o cvt_single_to_int32_truncate(OP2[31:0]))
(vdivpd xmm, xmm, m128) -> (OP1 = 0x0_128 o (div_double(OP2[127:64], OP3[127:64]) o div_double(OP2[63:0], OP3[63:0])))
(vdivpd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (div_double(OP2[127:64], OP3[127:64]) o div_double(OP2[63:0], OP3[63:0])))
(vdivpd ymm, ymm, m256) -> (OP1 = div_double(OP2[255:192], OP3[255:192]) o (div_double(OP2[191:128], OP3[191:128]) o (div_double(OP2[127:64], OP3[127:64]) o div_double(OP2[63:0], OP3[63:0]))))
(vdivpd ymm, ymm, ymm) -> (OP1 = div_double(OP2[255:192], OP3[255:192]) o (div_double(OP2[191:128], OP3[191:128]) o (div_double(OP2[127:64], OP3[127:64]) o div_double(OP2[63:0], OP3[63:0]))))
(vdivps xmm, xmm, m128) -> (OP1 = 0x0_128 o (div_single(OP2[127:96], OP3[127:96]) o (div_single(OP2[95:64], OP3[95:64]) o (div_single(OP2[63:32], OP3[63:32]) o div_single(OP2[31:0], OP3[31:0])))))
(vdivps xmm, xmm, xmm) -> (OP1 = 0x0_128 o (div_single(OP2[127:96], OP3[127:96]) o (div_single(OP2[95:64], OP3[95:64]) o (div_single(OP2[63:32], OP3[63:32]) o div_single(OP2[31:0], OP3[31:0])))))
(vdivps ymm, ymm, m256) -> (OP1 = div_single(OP2[255:224], OP3[255:224]) o (div_single(OP2[223:192], OP3[223:192]) o (div_single(OP2[191:160], OP3[191:160]) o (div_single(OP2[159:128], OP3[159:128]) o (div_single(OP2[127:96], OP3[127:96]) o (div_single(OP2[95:64], OP3[95:64]) o (div_single(OP2[63:32], OP3[63:32]) o div_single(OP2[31:0], OP3[31:0]))))))))
(vdivps ymm, ymm, ymm) -> (OP1 = div_single(OP2[255:224], OP3[255:224]) o (div_single(OP2[223:192], OP3[223:192]) o (div_single(OP2[191:160], OP3[191:160]) o (div_single(OP2[159:128], OP3[159:128]) o (div_single(OP2[127:96], OP3[127:96]) o (div_single(OP2[95:64], OP3[95:64]) o (div_single(OP2[63:32], OP3[63:32]) o div_single(OP2[31:0], OP3[31:0]))))))))
(vdivsd xmm, xmm, m64) -> (OP1 = 0x0_128 o (OP1[127:64] o div_double(OP2[63:0], OP3[63:0])))
(vdivsd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:64] o div_double(OP2[63:0], OP3[63:0])))
(vdivss xmm, xmm, m32) -> (OP1 = 0x0_128 o (OP1[127:32] o div_single(OP2[31:0], OP3[31:0])))
(vdivss xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:32] o div_single(OP2[31:0], OP3[31:0])))
(vfmadd132pd xmm, xmm, m128) -> (OP1 = 0x0_128 o (vfmsub132_double(OP1[127:64], vnfmsub132_double(0x0_64, OP2[127:64], 0x0_64), OP3[127:64]) o vfmsub132_double(OP1[63:0], vnfmsub132_double(0x0_64, OP2[63:0], 0x0_64), OP3[63:0])))
(vfmadd132pd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (vfmsub132_double(OP1[127:64], vnfmsub132_double(0x0_64, OP2[127:64], 0x0_64), OP3[127:64]) o vfmsub132_double(OP1[63:0], vnfmsub132_double(0x0_64, OP2[63:0], 0x0_64), OP3[63:0])))
(vfmadd132pd ymm, ymm, m256) -> (OP1 = vfmadd132_double(OP1[255:192], OP2[255:192], OP3[255:192]) o (vfmadd132_double(OP1[191:128], OP2[191:128], OP3[191:128]) o (vfmadd132_double(OP1[127:64], OP2[127:64], OP3[127:64]) o vfmadd132_double(OP1[63:0], OP2[63:0], OP3[63:0]))))
(vfmadd132pd ymm, ymm, ymm) -> (OP1 = vfmadd132_double(OP1[255:192], OP2[255:192], OP3[255:192]) o (vfmadd132_double(OP1[191:128], OP2[191:128], OP3[191:128]) o (vfmadd132_double(OP1[127:64], OP2[127:64], OP3[127:64]) o vfmadd132_double(OP1[63:0], OP2[63:0], OP3[63:0]))))
(vfmadd132ps xmm, xmm, m128) -> (OP1 = 0x0_128 o ((0x0_64 | (vfmsub132_single(OP1[127:96], vfnmsub132_single(0x0_32 ^ OP2[127:96] ^ (0x0_32 | 0x0_32 ^ OP2[127:96]), OP2[127:96], OP2[127:96]), OP3[127:96]) o vfmsub132_single(OP1[95:64], vfnmsub132_single(0x0_32 ^ OP2[95:64] ^ (0x0_32 | 0x0_32 ^ OP2[95:64]), OP2[95:64], OP2[95:64]), OP3[95:64]) | 0x0_64 ^ OP2[127:64] ^ (0x0_64 | 0x0_64 ^ OP2[127:64]))) o (0x0_64 | (vfmsub132_single(OP1[63:32], vfnmsub132_single(0x0_32 ^ OP2[63:32] ^ (0x0_32 | 0x0_32 ^ OP2[63:32]), OP2[63:32], OP2[63:32]), OP3[63:32]) o vfmsub132_single(OP1[31:0], vfnmsub132_single(0x0_32 ^ OP2[31:0] ^ (0x0_32 | 0x0_32 ^ OP2[31:0]), OP2[31:0], OP2[31:0]), OP3[31:0]) | 0x0_64 ^ OP2[63:0] ^ (0x0_64 | 0x0_64 ^ OP2[63:0])))))
(vfmadd132ps xmm, xmm, xmm) -> (OP1 = 0x0_128 o ((0x0_64 | (vfmsub132_single(OP1[127:96], vfnmsub132_single(0x0_32 ^ OP2[127:96] ^ (0x0_32 | 0x0_32 ^ OP2[127:96]), OP2[127:96], OP2[127:96]), OP3[127:96]) o vfmsub132_single(OP1[95:64], vfnmsub132_single(0x0_32 ^ OP2[95:64] ^ (0x0_32 | 0x0_32 ^ OP2[95:64]), OP2[95:64], OP2[95:64]), OP3[95:64]) | 0x0_64 ^ OP2[127:64] ^ (0x0_64 | 0x0_64 ^ OP2[127:64]))) o (0x0_64 | (vfmsub132_single(OP1[63:32], vfnmsub132_single(0x0_32 ^ OP2[63:32] ^ (0x0_32 | 0x0_32 ^ OP2[63:32]), OP2[63:32], OP2[63:32]), OP3[63:32]) o vfmsub132_single(OP1[31:0], vfnmsub132_single(0x0_32 ^ OP2[31:0] ^ (0x0_32 | 0x0_32 ^ OP2[31:0]), OP2[31:0], OP2[31:0]), OP3[31:0]) | 0x0_64 ^ OP2[63:0] ^ (0x0_64 | 0x0_64 ^ OP2[63:0])))))
(vfmadd132ps ymm, ymm, m256) -> (OP1 = vfmadd132_single(OP1[255:224], OP2[255:224], OP3[255:224]) o (vfmadd132_single(OP1[223:192], OP2[223:192], OP3[223:192]) o (vfmadd132_single(OP1[191:160], OP2[191:160], OP3[191:160]) o (vfmadd132_single(OP1[159:128], OP2[159:128], OP3[159:128]) o (vfmadd132_single(OP1[127:96], OP2[127:96], OP3[127:96]) o (vfmadd132_single(OP1[95:64], OP2[95:64], OP3[95:64]) o (vfmadd132_single(OP1[63:32], OP2[63:32], OP3[63:32]) o vfmadd132_single(OP1[31:0], OP2[31:0], OP3[31:0]))))))))
(vfmadd132ps ymm, ymm, ymm) -> (OP1 = vfmadd132_single(OP1[255:224], OP2[255:224], OP3[255:224]) o (vfmadd132_single(OP1[223:192], OP2[223:192], OP3[223:192]) o (vfmadd132_single(OP1[191:160], OP2[191:160], OP3[191:160]) o (vfmadd132_single(OP1[159:128], OP2[159:128], OP3[159:128]) o (vfmadd132_single(OP1[127:96], OP2[127:96], OP3[127:96]) o (vfmadd132_single(OP1[95:64], OP2[95:64], OP3[95:64]) o (vfmadd132_single(OP1[63:32], OP2[63:32], OP3[63:32]) o vfmadd132_single(OP1[31:0], OP2[31:0], OP3[31:0]))))))))
(vfmadd132sd xmm, xmm, m64) -> (OP1 = 0x0_128 o (OP1[127:64] o vfmadd132_double(OP1[63:0], OP2[63:0], OP3[63:0])))
(vfmadd132sd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:64] o vfmadd132_double(OP1[63:0], OP2[63:0], OP3[63:0])))
(vfmadd132ss xmm, xmm, m32) -> (OP1 = 0x0_128 o (OP1[127:32] o vfmadd132_single(OP1[31:0], OP2[31:0], OP3[31:0])))
(vfmadd132ss xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:32] o vfmadd132_single(OP1[31:0], OP2[31:0], OP3[31:0])))
(vfmadd213pd xmm, xmm, m128) -> (OP1 = 0x0_128 o (vfmsub132_double(OP2[127:64], vnfmsub132_double(0x0_64, OP3[127:64], 0x0_64), OP1[127:64]) o vfmsub132_double(OP2[63:0], vnfmsub132_double(0x0_64, OP3[63:0], 0x0_64), OP1[63:0])))
(vfmadd213pd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (vfmsub132_double(OP2[127:64], vnfmsub132_double(0x0_64, OP3[127:64], 0x0_64), OP1[127:64]) o vfmsub132_double(OP2[63:0], vnfmsub132_double(0x0_64, OP3[63:0], 0x0_64), OP1[63:0])))
(vfmadd213pd ymm, ymm, m256) -> (OP1 = vfmadd132_double(OP2[255:192], OP3[255:192], OP1[255:192]) o (vfmadd132_double(OP2[191:128], OP3[191:128], OP1[191:128]) o (vfmadd132_double(OP2[127:64], OP3[127:64], OP1[127:64]) o vfmadd132_double(OP2[63:0], OP3[63:0], OP1[63:0]))))
(vfmadd213pd ymm, ymm, ymm) -> (OP1 = vfmadd132_double(OP2[255:192], OP3[255:192], OP1[255:192]) o (vfmadd132_double(OP2[191:128], OP3[191:128], OP1[191:128]) o (vfmadd132_double(OP2[127:64], OP3[127:64], OP1[127:64]) o vfmadd132_double(OP2[63:0], OP3[63:0], OP1[63:0]))))
(vfmadd213ps xmm, xmm, m128) -> (OP1 = (vfmsub132_single(0x0_32, 0x0_32, 0x0_32) o vfmsub132_single(0x0_32, 0x0_32, 0x0_32) | 0x0_64) o (vfmsub132_single(0x0_32, 0x0_32, 0x0_32) o vfmsub132_single(0x0_32, 0x0_32, 0x0_32) | 0x0_64) o ((vfmsub132_single(OP2[127:96], vfnmsub132_single(0x0_32 ^ OP3[127:96] ^ (0x0_32 | 0x0_32 ^ OP3[127:96]), OP3[127:96], OP3[127:96]), OP1[127:96]) o vfmsub132_single(OP2[95:64], vfnmsub132_single(0x0_32 ^ OP3[95:64] ^ (0x0_32 | 0x0_32 ^ OP3[95:64]), OP3[95:64], OP3[95:64]), OP1[95:64]) | 0x0_64 ^ OP3[127:64] ^ (0x0_64 | 0x0_64 ^ OP3[127:64])) o (vfmsub132_single(OP2[63:32], vfnmsub132_single(0x0_32 ^ OP3[63:32] ^ (0x0_32 | 0x0_32 ^ OP3[63:32]), OP3[63:32], OP3[63:32]), OP1[63:32]) o vfmsub132_single(OP2[31:0], vfnmsub132_single(0x0_32 ^ OP3[31:0] ^ (0x0_32 | 0x0_32 ^ OP3[31:0]), OP3[31:0], OP3[31:0]), OP1[31:0]) | 0x0_64 ^ OP3[63:0] ^ (0x0_64 | 0x0_64 ^ OP3[63:0]))))
(vfmadd213ps xmm, xmm, xmm) -> (OP1 = (vfmsub132_single(0x0_32, 0x0_32, 0x0_32) o vfmsub132_single(0x0_32, 0x0_32, 0x0_32) | 0x0_64) o (vfmsub132_single(0x0_32, 0x0_32, 0x0_32) o vfmsub132_single(0x0_32, 0x0_32, 0x0_32) | 0x0_64) o ((vfmsub132_single(OP2[127:96], vfnmsub132_single(0x0_32 ^ OP3[127:96] ^ (0x0_32 | 0x0_32 ^ OP3[127:96]), OP3[127:96], OP3[127:96]), OP1[127:96]) o vfmsub132_single(OP2[95:64], vfnmsub132_single(0x0_32 ^ OP3[95:64] ^ (0x0_32 | 0x0_32 ^ OP3[95:64]), OP3[95:64], OP3[95:64]), OP1[95:64]) | 0x0_64 ^ OP3[127:64] ^ (0x0_64 | 0x0_64 ^ OP3[127:64])) o (vfmsub132_single(OP2[63:32], vfnmsub132_single(0x0_32 ^ OP3[63:32] ^ (0x0_32 | 0x0_32 ^ OP3[63:32]), OP3[63:32], OP3[63:32]), OP1[63:32]) o vfmsub132_single(OP2[31:0], vfnmsub132_single(0x0_32 ^ OP3[31:0] ^ (0x0_32 | 0x0_32 ^ OP3[31:0]), OP3[31:0], OP3[31:0]), OP1[31:0]) | 0x0_64 ^ OP3[63:0] ^ (0x0_64 | 0x0_64 ^ OP3[63:0]))))
(vfmadd213ps ymm, ymm, m256) -> (OP1 = vfmadd132_single(OP2[255:224], OP3[255:224], OP1[255:224]) o vfmadd132_single(OP2[223:192], OP3[223:192], OP1[223:192]) o (vfmadd132_single(OP2[191:160], OP3[191:160], OP1[191:160]) o (vfmadd132_single(OP2[159:128], OP3[159:128], OP1[159:128]) o (vfmadd132_single(OP2[127:96], OP3[127:96], OP1[127:96]) o (vfmadd132_single(OP2[95:64], OP3[95:64], OP1[95:64]) o (vfmadd132_single(OP2[63:32], OP3[63:32], OP1[63:32]) o vfmadd132_single(OP2[31:0], OP3[31:0], OP1[31:0])))))))
(vfmadd213ps ymm, ymm, ymm) -> (OP1 = vfmadd132_single(OP2[255:224], OP3[255:224], OP1[255:224]) o vfmadd132_single(OP2[223:192], OP3[223:192], OP1[223:192]) o (vfmadd132_single(OP2[191:160], OP3[191:160], OP1[191:160]) o (vfmadd132_single(OP2[159:128], OP3[159:128], OP1[159:128]) o (vfmadd132_single(OP2[127:96], OP3[127:96], OP1[127:96]) o (vfmadd132_single(OP2[95:64], OP3[95:64], OP1[95:64]) o (vfmadd132_single(OP2[63:32], OP3[63:32], OP1[63:32]) o vfmadd132_single(OP2[31:0], OP3[31:0], OP1[31:0])))))))
(vfmadd213sd xmm, xmm, m64) -> (OP1 = 0x0_128 o (OP1[127:64] o vfmsub132_double(OP2[63:0], vnfmsub132_double(0x0_64, OP3[63:0], 0x0_64), OP1[63:0])))
(vfmadd213sd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:64] o vfmsub132_double(OP2[63:0], vnfmsub132_double(0x0_64, OP3[63:0], 0x0_64), OP1[63:0])))
(vfmadd213ss xmm, xmm, m32) -> (OP1 = 0x0_128 o (OP1[127:32] o vfmadd132_single(OP2[31:0], OP3[31:0], OP1[31:0])))
(vfmadd213ss xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:32] o vfmadd132_single(OP2[31:0], OP3[31:0], OP1[31:0])))
(vfmadd231pd xmm, xmm, m128) -> (OP1 = 0x0_128 o (vfmsub132_double(OP2[127:64], vnfmsub132_double(0x0_64, OP1[127:64], 0x0_64), OP3[127:64]) o vfmsub132_double(OP2[63:0], vnfmsub132_double(0x0_64, OP1[63:0], 0x0_64), OP3[63:0])))
(vfmadd231pd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (vfmsub132_double(OP2[127:64], vnfmsub132_double(0x0_64, OP1[127:64], 0x0_64), OP3[127:64]) o vfmsub132_double(OP2[63:0], vnfmsub132_double(0x0_64, OP1[63:0], 0x0_64), OP3[63:0])))
(vfmadd231pd ymm, ymm, m256) -> (OP1 = vfmadd132_double(OP2[255:192], OP1[255:192], OP3[255:192]) o (vfmadd132_double(OP2[191:128], OP1[191:128], OP3[191:128]) o (vfmadd132_double(OP2[127:64], OP1[127:64], OP3[127:64]) o vfmadd132_double(OP2[63:0], OP1[63:0], OP3[63:0]))))
(vfmadd231pd ymm, ymm, ymm) -> (OP1 = vfmadd132_double(OP2[255:192], OP1[255:192], OP3[255:192]) o (vfmadd132_double(OP2[191:128], OP1[191:128], OP3[191:128]) o (vfmadd132_double(OP2[127:64], OP1[127:64], OP3[127:64]) o vfmadd132_double(OP2[63:0], OP1[63:0], OP3[63:0]))))
(vfmadd231ps xmm, xmm, m128) -> (OP1 = vfmadd132_single(0x0_32, 0x0_32, 0x0_32) o vfmadd132_single(0x0_32, 0x0_32, 0x0_32) o (vfmadd132_single(0x0_32, 0x0_32, 0x0_32) o (vfmadd132_single(0x0_32, 0x0_32, 0x0_32) o (vfmadd132_single(OP2[127:96], OP1[127:96], OP3[127:96]) o (vfmadd132_single(OP2[95:64], OP1[95:64], OP3[95:64]) o (vfmadd132_single(OP2[63:32], OP1[63:32], OP3[63:32]) o vfmadd132_single(OP2[31:0], OP1[31:0], OP3[31:0])))))))
(vfmadd231ps xmm, xmm, xmm) -> (OP1 = vfmadd132_single(0x0_32, 0x0_32, 0x0_32) o vfmadd132_single(0x0_32, 0x0_32, 0x0_32) o (vfmadd132_single(0x0_32, 0x0_32, 0x0_32) o (vfmadd132_single(0x0_32, 0x0_32, 0x0_32) o (vfmadd132_single(OP2[127:96], OP1[127:96], OP3[127:96]) o (vfmadd132_single(OP2[95:64], OP1[95:64], OP3[95:64]) o (vfmadd132_single(OP2[63:32], OP1[63:32], OP3[63:32]) o vfmadd132_single(OP2[31:0], OP1[31:0], OP3[31:0])))))))
(vfmadd231ps ymm, ymm, m256) -> (OP1 = vfmadd132_single(OP2[255:224], OP1[255:224], OP3[255:224]) o vfmadd132_single(OP2[223:192], OP1[223:192], OP3[223:192]) o (vfmadd132_single(OP2[191:160], OP1[191:160], OP3[191:160]) o vfmadd132_single(OP2[159:128], OP1[159:128], OP3[159:128]) o (vfmadd132_single(OP2[127:96], OP1[127:96], OP3[127:96]) o (vfmadd132_single(OP2[95:64], OP1[95:64], OP3[95:64]) o (vfmadd132_single(OP2[63:32], OP1[63:32], OP3[63:32]) o vfmadd132_single(OP2[31:0], OP1[31:0], OP3[31:0]))))))
(vfmadd231ps ymm, ymm, ymm) -> (OP1 = vfmadd132_single(OP2[255:224], OP1[255:224], OP3[255:224]) o vfmadd132_single(OP2[223:192], OP1[223:192], OP3[223:192]) o (vfmadd132_single(OP2[191:160], OP1[191:160], OP3[191:160]) o vfmadd132_single(OP2[159:128], OP1[159:128], OP3[159:128]) o (vfmadd132_single(OP2[127:96], OP1[127:96], OP3[127:96]) o (vfmadd132_single(OP2[95:64], OP1[95:64], OP3[95:64]) o (vfmadd132_single(OP2[63:32], OP1[63:32], OP3[63:32]) o vfmadd132_single(OP2[31:0], OP1[31:0], OP3[31:0]))))))
(vfmadd231sd xmm, xmm, m64) -> (OP1 = 0x0_128 o (OP1[127:64] o vfmsub132_double(OP2[63:0], vnfmsub132_double(0x0_64, OP1[63:0], 0x0_64), OP3[63:0])))
(vfmadd231sd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:64] o vfmsub132_double(OP2[63:0], vnfmsub132_double(0x0_64, OP1[63:0], 0x0_64), OP3[63:0])))
(vfmadd231ss xmm, xmm, m32) -> (OP1 = 0x0_128 o (OP1[127:32] o vfmadd132_single(OP2[31:0], OP1[31:0], OP3[31:0])))
(vfmadd231ss xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:32] o vfmadd132_single(OP2[31:0], OP1[31:0], OP3[31:0])))
(vfmaddsub132pd xmm, xmm, m128) -> (OP1 = 0x0_128 o (vfmsub132_double(OP1[127:64], vnfmsub132_double(0x0_64, OP2[127:64], 0x0_64), OP3[127:64]) o vfmsub132_double(OP1[63:0], OP2[63:0], OP3[63:0])))
(vfmaddsub132pd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (vfmsub132_double(OP1[127:64], vnfmsub132_double(0x0_64, OP2[127:64], 0x0_64), OP3[127:64]) o vfmsub132_double(OP1[63:0], OP2[63:0], OP3[63:0])))
(vfmaddsub132ps xmm, xmm, m128) -> (OP1 = 0x0_128 o ((0x0_64 | (vfmsub132_single(OP1[127:96], vfnmsub132_single(0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[127:96]) ^ (0x0_32 | 0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[127:96])), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[127:96]), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[127:96])), OP3[127:96]) o vfmsub132_single(OP1[95:64], vfnmsub132_single(0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[95:64]) ^ (0x0_32 | 0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[95:64])), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[95:64]), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[95:64])), OP3[95:64]) | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[127:96]) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[95:64]) ^ (0x0_64 | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[127:96]) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[95:64])))) o (0x0_64 | (vfmsub132_single(OP1[63:32], vfnmsub132_single(0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[63:32]) ^ (0x0_32 | 0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[63:32])), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[63:32]), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[63:32])), OP3[63:32]) o vfmsub132_single(OP1[31:0], vfnmsub132_single(0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[31:0]) ^ (0x0_32 | 0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[31:0])), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[31:0]), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[31:0])), OP3[31:0]) | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[63:32]) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[31:0]) ^ (0x0_64 | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[63:32]) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[31:0]))))))
(vfmaddsub132ps xmm, xmm, xmm) -> (OP1 = 0x0_128 o ((0x0_64 | (vfmsub132_single(OP1[127:96], vfnmsub132_single(0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[127:96]) ^ (0x0_32 | 0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[127:96])), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[127:96]), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[127:96])), OP3[127:96]) o vfmsub132_single(OP1[95:64], vfnmsub132_single(0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[95:64]) ^ (0x0_32 | 0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[95:64])), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[95:64]), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[95:64])), OP3[95:64]) | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[127:96]) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[95:64]) ^ (0x0_64 | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[127:96]) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[95:64])))) o (0x0_64 | (vfmsub132_single(OP1[63:32], vfnmsub132_single(0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[63:32]) ^ (0x0_32 | 0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[63:32])), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[63:32]), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[63:32])), OP3[63:32]) o vfmsub132_single(OP1[31:0], vfnmsub132_single(0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[31:0]) ^ (0x0_32 | 0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[31:0])), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[31:0]), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[31:0])), OP3[31:0]) | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[63:32]) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[31:0]) ^ (0x0_64 | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[63:32]) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP2[31:0]))))))
(vfmaddsub213pd xmm, xmm, m128) -> (OP1 = 0x0_128 o (vfmsub132_double(OP2[127:64], vnfmsub132_double((maxcmp_single(0x0_32, 0x0_32 ^ (OP3[127:96] | 0x0_32) ^ (OP3[127:96] | 0x0_32 ^ (OP3[127:96] | 0x0_32))) == 0x1_1 ? 0x0_32 : 0x0_32 ^ (OP3[127:96] | 0x0_32) ^ (OP3[127:96] | 0x0_32 ^ (OP3[127:96] | 0x0_32))) o (maxcmp_single(0x0_32, 0x0_32 ^ (OP3[95:64] | 0x0_32) ^ (OP3[95:64] | 0x0_32 ^ (OP3[95:64] | 0x0_32))) == 0x1_1 ? 0x0_32 : 0x0_32 ^ (OP3[95:64] | 0x0_32) ^ (OP3[95:64] | 0x0_32 ^ (OP3[95:64] | 0x0_32))), OP3[127:64], 0x0_64), OP1[127:64]) o vfmsub132_double(OP2[63:0], vnfmsub132_double(vnfmsub132_double((maxcmp_single(OP1[63:32], 0x0_32 ^ (OP3[63:32] | 0x0_32) ^ (OP3[63:32] | 0x0_32 ^ (OP3[63:32] | 0x0_32))) == 0x1_1 ? OP1[63:32] : 0x0_32 ^ (OP3[63:32] | 0x0_32) ^ (OP3[63:32] | 0x0_32 ^ (OP3[63:32] | 0x0_32))) o (maxcmp_single(OP1[31:0], 0x0_32 ^ (OP3[31:0] | 0x0_32) ^ (OP3[31:0] | 0x0_32 ^ (OP3[31:0] | 0x0_32))) == 0x1_1 ? OP1[31:0] : 0x0_32 ^ (OP3[31:0] | 0x0_32) ^ (OP3[31:0] | 0x0_32 ^ (OP3[31:0] | 0x0_32))), OP3[63:0], 0x0_64), vnfmsub132_double((maxcmp_single(OP1[63:32], 0x0_32 ^ (OP3[63:32] | 0x0_32) ^ (OP3[63:32] | 0x0_32 ^ (OP3[63:32] | 0x0_32))) == 0x1_1 ? OP1[63:32] : 0x0_32 ^ (OP3[63:32] | 0x0_32) ^ (OP3[63:32] | 0x0_32 ^ (OP3[63:32] | 0x0_32))) o (maxcmp_single(OP1[31:0], 0x0_32 ^ (OP3[31:0] | 0x0_32) ^ (OP3[31:0] | 0x0_32 ^ (OP3[31:0] | 0x0_32))) == 0x1_1 ? OP1[31:0] : 0x0_32 ^ (OP3[31:0] | 0x0_32) ^ (OP3[31:0] | 0x0_32 ^ (OP3[31:0] | 0x0_32))), OP3[63:0], 0x0_64), 0x0_32 o vnfmsub132_double((maxcmp_single(0x0_32, 0x0_32 ^ (OP3[127:96] | 0x0_32) ^ (OP3[127:96] | 0x0_32 ^ (OP3[127:96] | 0x0_32))) == 0x1_1 ? 0x0_32 : 0x0_32 ^ (OP3[127:96] | 0x0_32) ^ (OP3[127:96] | 0x0_32 ^ (OP3[127:96] | 0x0_32))) o (maxcmp_single(0x0_32, 0x0_32 ^ (OP3[95:64] | 0x0_32) ^ (OP3[95:64] | 0x0_32 ^ (OP3[95:64] | 0x0_32))) == 0x1_1 ? 0x0_32 : 0x0_32 ^ (OP3[95:64] | 0x0_32) ^ (OP3[95:64] | 0x0_32 ^ (OP3[95:64] | 0x0_32))), OP3[127:64], 0x0_64)[63:32]), OP1[63:0])))
(vfmaddsub213pd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (vfmsub132_double(OP2[127:64], vnfmsub132_double((maxcmp_single(0x0_32, 0x0_32 ^ (OP3[127:96] | 0x0_32) ^ (OP3[127:96] | 0x0_32 ^ (OP3[127:96] | 0x0_32))) == 0x1_1 ? 0x0_32 : 0x0_32 ^ (OP3[127:96] | 0x0_32) ^ (OP3[127:96] | 0x0_32 ^ (OP3[127:96] | 0x0_32))) o (maxcmp_single(0x0_32, 0x0_32 ^ (OP3[95:64] | 0x0_32) ^ (OP3[95:64] | 0x0_32 ^ (OP3[95:64] | 0x0_32))) == 0x1_1 ? 0x0_32 : 0x0_32 ^ (OP3[95:64] | 0x0_32) ^ (OP3[95:64] | 0x0_32 ^ (OP3[95:64] | 0x0_32))), OP3[127:64], 0x0_64), OP1[127:64]) o vfmsub132_double(OP2[63:0], vnfmsub132_double(vnfmsub132_double((maxcmp_single(OP1[63:32], 0x0_32 ^ (OP3[63:32] | 0x0_32) ^ (OP3[63:32] | 0x0_32 ^ (OP3[63:32] | 0x0_32))) == 0x1_1 ? OP1[63:32] : 0x0_32 ^ (OP3[63:32] | 0x0_32) ^ (OP3[63:32] | 0x0_32 ^ (OP3[63:32] | 0x0_32))) o (maxcmp_single(OP1[31:0], 0x0_32 ^ (OP3[31:0] | 0x0_32) ^ (OP3[31:0] | 0x0_32 ^ (OP3[31:0] | 0x0_32))) == 0x1_1 ? OP1[31:0] : 0x0_32 ^ (OP3[31:0] | 0x0_32) ^ (OP3[31:0] | 0x0_32 ^ (OP3[31:0] | 0x0_32))), OP3[63:0], 0x0_64), vnfmsub132_double((maxcmp_single(OP1[63:32], 0x0_32 ^ (OP3[63:32] | 0x0_32) ^ (OP3[63:32] | 0x0_32 ^ (OP3[63:32] | 0x0_32))) == 0x1_1 ? OP1[63:32] : 0x0_32 ^ (OP3[63:32] | 0x0_32) ^ (OP3[63:32] | 0x0_32 ^ (OP3[63:32] | 0x0_32))) o (maxcmp_single(OP1[31:0], 0x0_32 ^ (OP3[31:0] | 0x0_32) ^ (OP3[31:0] | 0x0_32 ^ (OP3[31:0] | 0x0_32))) == 0x1_1 ? OP1[31:0] : 0x0_32 ^ (OP3[31:0] | 0x0_32) ^ (OP3[31:0] | 0x0_32 ^ (OP3[31:0] | 0x0_32))), OP3[63:0], 0x0_64), 0x0_32 o vnfmsub132_double((maxcmp_single(0x0_32, 0x0_32 ^ (OP3[127:96] | 0x0_32) ^ (OP3[127:96] | 0x0_32 ^ (OP3[127:96] | 0x0_32))) == 0x1_1 ? 0x0_32 : 0x0_32 ^ (OP3[127:96] | 0x0_32) ^ (OP3[127:96] | 0x0_32 ^ (OP3[127:96] | 0x0_32))) o (maxcmp_single(0x0_32, 0x0_32 ^ (OP3[95:64] | 0x0_32) ^ (OP3[95:64] | 0x0_32 ^ (OP3[95:64] | 0x0_32))) == 0x1_1 ? 0x0_32 : 0x0_32 ^ (OP3[95:64] | 0x0_32) ^ (OP3[95:64] | 0x0_32 ^ (OP3[95:64] | 0x0_32))), OP3[127:64], 0x0_64)[63:32]), OP1[63:0])))
(vfmaddsub213ps xmm, xmm, m128) -> (OP1 = (vfmsub132_single(0x0_32, 0x0_32, 0x0_32) o vfmsub132_single(0x0_32, 0x0_32, 0x0_32) | 0x0_64) o (vfmsub132_single(0x0_32, 0x0_32, 0x0_32) o vfmsub132_single(0x0_32, 0x0_32, 0x0_32) | 0x0_64) o ((vfmsub132_single(OP2[127:96], vfnmsub132_single(0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[127:96]) ^ (0x0_32 | 0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[127:96])), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[127:96]), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[127:96])), OP1[127:96]) o vfmsub132_single(OP2[95:64], vfnmsub132_single(0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[95:64]) ^ (0x0_32 | 0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[95:64])), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[95:64]), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[95:64])), OP1[95:64]) | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[127:96]) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[95:64]) ^ (0x0_64 | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[127:96]) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[95:64]))) o (vfmsub132_single(OP2[63:32], vfnmsub132_single(0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[63:32]) ^ (0x0_32 | 0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[63:32])), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[63:32]), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[63:32])), OP1[63:32]) o vfmsub132_single(OP2[31:0], vfnmsub132_single(0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[31:0]) ^ (0x0_32 | 0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[31:0])), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[31:0]), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[31:0])), OP1[31:0]) | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[63:32]) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[31:0]) ^ (0x0_64 | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[63:32]) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[31:0])))))
(vfmaddsub213ps xmm, xmm, xmm) -> (OP1 = (vfmsub132_single(0x0_32, 0x0_32, 0x0_32) o vfmsub132_single(0x0_32, 0x0_32, 0x0_32) | 0x0_64) o (vfmsub132_single(0x0_32, 0x0_32, 0x0_32) o vfmsub132_single(0x0_32, 0x0_32, 0x0_32) | 0x0_64) o ((vfmsub132_single(OP2[127:96], vfnmsub132_single(0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[127:96]) ^ (0x0_32 | 0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[127:96])), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[127:96]), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[127:96])), OP1[127:96]) o vfmsub132_single(OP2[95:64], vfnmsub132_single(0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[95:64]) ^ (0x0_32 | 0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[95:64])), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[95:64]), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[95:64])), OP1[95:64]) | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[127:96]) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[95:64]) ^ (0x0_64 | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[127:96]) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[95:64]))) o (vfmsub132_single(OP2[63:32], vfnmsub132_single(0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[63:32]) ^ (0x0_32 | 0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[63:32])), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[63:32]), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[63:32])), OP1[63:32]) o vfmsub132_single(OP2[31:0], vfnmsub132_single(0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[31:0]) ^ (0x0_32 | 0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[31:0])), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[31:0]), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[31:0])), OP1[31:0]) | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[63:32]) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[31:0]) ^ (0x0_64 | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[63:32]) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP3[31:0])))))
(vfmaddsub231pd xmm, xmm, m128) -> (OP1 = 0x0_128 o (vfmsub132_double(OP2[127:64], vnfmsub132_double((maxcmp_single(0x0_32, 0x0_32 ^ (OP1[127:96] | 0x0_32) ^ (OP1[127:96] | 0x0_32 ^ (OP1[127:96] | 0x0_32))) == 0x1_1 ? 0x0_32 : 0x0_32 ^ (OP1[127:96] | 0x0_32) ^ (OP1[127:96] | 0x0_32 ^ (OP1[127:96] | 0x0_32))) o (maxcmp_single(0x0_32, 0x0_32 ^ (OP1[95:64] | 0x0_32) ^ (OP1[95:64] | 0x0_32 ^ (OP1[95:64] | 0x0_32))) == 0x1_1 ? 0x0_32 : 0x0_32 ^ (OP1[95:64] | 0x0_32) ^ (OP1[95:64] | 0x0_32 ^ (OP1[95:64] | 0x0_32))), OP1[127:64], 0x0_64), OP3[127:64]) o vfmsub132_double(OP2[63:0], vnfmsub132_double(vnfmsub132_double((maxcmp_single(OP3[63:32], 0x0_32 ^ (OP1[63:32] | 0x0_32) ^ (OP1[63:32] | 0x0_32 ^ (OP1[63:32] | 0x0_32))) == 0x1_1 ? OP3[63:32] : 0x0_32 ^ (OP1[63:32] | 0x0_32) ^ (OP1[63:32] | 0x0_32 ^ (OP1[63:32] | 0x0_32))) o (maxcmp_single(OP3[31:0], 0x0_32 ^ (OP1[31:0] | 0x0_32) ^ (OP1[31:0] | 0x0_32 ^ (OP1[31:0] | 0x0_32))) == 0x1_1 ? OP3[31:0] : 0x0_32 ^ (OP1[31:0] | 0x0_32) ^ (OP1[31:0] | 0x0_32 ^ (OP1[31:0] | 0x0_32))), OP1[63:0], 0x0_64), vnfmsub132_double((maxcmp_single(OP3[63:32], 0x0_32 ^ (OP1[63:32] | 0x0_32) ^ (OP1[63:32] | 0x0_32 ^ (OP1[63:32] | 0x0_32))) == 0x1_1 ? OP3[63:32] : 0x0_32 ^ (OP1[63:32] | 0x0_32) ^ (OP1[63:32] | 0x0_32 ^ (OP1[63:32] | 0x0_32))) o (maxcmp_single(OP3[31:0], 0x0_32 ^ (OP1[31:0] | 0x0_32) ^ (OP1[31:0] | 0x0_32 ^ (OP1[31:0] | 0x0_32))) == 0x1_1 ? OP3[31:0] : 0x0_32 ^ (OP1[31:0] | 0x0_32) ^ (OP1[31:0] | 0x0_32 ^ (OP1[31:0] | 0x0_32))), OP1[63:0], 0x0_64), 0x0_32 o vnfmsub132_double((maxcmp_single(0x0_32, 0x0_32 ^ (OP1[127:96] | 0x0_32) ^ (OP1[127:96] | 0x0_32 ^ (OP1[127:96] | 0x0_32))) == 0x1_1 ? 0x0_32 : 0x0_32 ^ (OP1[127:96] | 0x0_32) ^ (OP1[127:96] | 0x0_32 ^ (OP1[127:96] | 0x0_32))) o (maxcmp_single(0x0_32, 0x0_32 ^ (OP1[95:64] | 0x0_32) ^ (OP1[95:64] | 0x0_32 ^ (OP1[95:64] | 0x0_32))) == 0x1_1 ? 0x0_32 : 0x0_32 ^ (OP1[95:64] | 0x0_32) ^ (OP1[95:64] | 0x0_32 ^ (OP1[95:64] | 0x0_32))), OP1[127:64], 0x0_64)[63:32]), OP3[63:0])))
(vfmaddsub231pd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (vfmsub132_double(OP2[127:64], vnfmsub132_double((maxcmp_single(0x0_32, 0x0_32 ^ (OP1[127:96] | 0x0_32) ^ (OP1[127:96] | 0x0_32 ^ (OP1[127:96] | 0x0_32))) == 0x1_1 ? 0x0_32 : 0x0_32 ^ (OP1[127:96] | 0x0_32) ^ (OP1[127:96] | 0x0_32 ^ (OP1[127:96] | 0x0_32))) o (maxcmp_single(0x0_32, 0x0_32 ^ (OP1[95:64] | 0x0_32) ^ (OP1[95:64] | 0x0_32 ^ (OP1[95:64] | 0x0_32))) == 0x1_1 ? 0x0_32 : 0x0_32 ^ (OP1[95:64] | 0x0_32) ^ (OP1[95:64] | 0x0_32 ^ (OP1[95:64] | 0x0_32))), OP1[127:64], 0x0_64), OP3[127:64]) o vfmsub132_double(OP2[63:0], vnfmsub132_double(vnfmsub132_double((maxcmp_single(OP3[63:32], 0x0_32 ^ (OP1[63:32] | 0x0_32) ^ (OP1[63:32] | 0x0_32 ^ (OP1[63:32] | 0x0_32))) == 0x1_1 ? OP3[63:32] : 0x0_32 ^ (OP1[63:32] | 0x0_32) ^ (OP1[63:32] | 0x0_32 ^ (OP1[63:32] | 0x0_32))) o (maxcmp_single(OP3[31:0], 0x0_32 ^ (OP1[31:0] | 0x0_32) ^ (OP1[31:0] | 0x0_32 ^ (OP1[31:0] | 0x0_32))) == 0x1_1 ? OP3[31:0] : 0x0_32 ^ (OP1[31:0] | 0x0_32) ^ (OP1[31:0] | 0x0_32 ^ (OP1[31:0] | 0x0_32))), OP1[63:0], 0x0_64), vnfmsub132_double((maxcmp_single(OP3[63:32], 0x0_32 ^ (OP1[63:32] | 0x0_32) ^ (OP1[63:32] | 0x0_32 ^ (OP1[63:32] | 0x0_32))) == 0x1_1 ? OP3[63:32] : 0x0_32 ^ (OP1[63:32] | 0x0_32) ^ (OP1[63:32] | 0x0_32 ^ (OP1[63:32] | 0x0_32))) o (maxcmp_single(OP3[31:0], 0x0_32 ^ (OP1[31:0] | 0x0_32) ^ (OP1[31:0] | 0x0_32 ^ (OP1[31:0] | 0x0_32))) == 0x1_1 ? OP3[31:0] : 0x0_32 ^ (OP1[31:0] | 0x0_32) ^ (OP1[31:0] | 0x0_32 ^ (OP1[31:0] | 0x0_32))), OP1[63:0], 0x0_64), 0x0_32 o vnfmsub132_double((maxcmp_single(0x0_32, 0x0_32 ^ (OP1[127:96] | 0x0_32) ^ (OP1[127:96] | 0x0_32 ^ (OP1[127:96] | 0x0_32))) == 0x1_1 ? 0x0_32 : 0x0_32 ^ (OP1[127:96] | 0x0_32) ^ (OP1[127:96] | 0x0_32 ^ (OP1[127:96] | 0x0_32))) o (maxcmp_single(0x0_32, 0x0_32 ^ (OP1[95:64] | 0x0_32) ^ (OP1[95:64] | 0x0_32 ^ (OP1[95:64] | 0x0_32))) == 0x1_1 ? 0x0_32 : 0x0_32 ^ (OP1[95:64] | 0x0_32) ^ (OP1[95:64] | 0x0_32 ^ (OP1[95:64] | 0x0_32))), OP1[127:64], 0x0_64)[63:32]), OP3[63:0])))
(vfmaddsub231ps xmm, xmm, m128) -> (OP1 = 0x0_128 o ((vfmsub132_single(OP2[127:96], vfnmsub132_single(0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[127:96]) ^ (0x0_32 | 0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[127:96])), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[127:96]), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[127:96])), OP3[127:96]) o vfmsub132_single(OP2[95:64], vfnmsub132_single(0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[95:64]) ^ (0x0_32 | 0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[95:64])), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[95:64]), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[95:64])), OP3[95:64]) | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[127:96]) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[95:64]) ^ (0x0_64 | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[127:96]) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[95:64]))) o (vfmsub132_single(OP2[63:32], vfnmsub132_single(0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[63:32]) ^ (0x0_32 | 0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[63:32])), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[63:32]), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[63:32])), OP3[63:32]) o vfmsub132_single(OP2[31:0], vfnmsub132_single(0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[31:0]) ^ (0x0_32 | 0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[31:0])), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[31:0]), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[31:0])), OP3[31:0]) | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[63:32]) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[31:0]) ^ (0x0_64 | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[63:32]) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[31:0])))))
(vfmaddsub231ps xmm, xmm, xmm) -> (OP1 = 0x0_128 o ((vfmsub132_single(OP2[127:96], vfnmsub132_single(0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[127:96]) ^ (0x0_32 | 0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[127:96])), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[127:96]), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[127:96])), OP3[127:96]) o vfmsub132_single(OP2[95:64], vfnmsub132_single(0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[95:64]) ^ (0x0_32 | 0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[95:64])), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[95:64]), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[95:64])), OP3[95:64]) | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[127:96]) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[95:64]) ^ (0x0_64 | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[127:96]) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[95:64]))) o (vfmsub132_single(OP2[63:32], vfnmsub132_single(0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[63:32]) ^ (0x0_32 | 0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[63:32])), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[63:32]), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[63:32])), OP3[63:32]) o vfmsub132_single(OP2[31:0], vfnmsub132_single(0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[31:0]) ^ (0x0_32 | 0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[31:0])), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[31:0]), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[31:0])), OP3[31:0]) | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[63:32]) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[31:0]) ^ (0x0_64 | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[63:32]) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), OP1[31:0])))))
(vfmsub132pd xmm, xmm, m128) -> (OP1 = 0x0_128 o (vfmsub132_double(OP1[127:64], OP2[127:64], OP3[127:64]) o vfmsub132_double(OP1[63:0], OP2[63:0], OP3[63:0])))
(vfmsub132pd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (vfmsub132_double(OP1[127:64], OP2[127:64], OP3[127:64]) o vfmsub132_double(OP1[63:0], OP2[63:0], OP3[63:0])))
(vfmsub132pd ymm, ymm, m256) -> (OP1 = vfmsub132_double(OP1[255:192], OP2[255:192], OP3[255:192]) o (vfmsub132_double(OP1[191:128], OP2[191:128], OP3[191:128]) o (vfmsub132_double(OP1[127:64], OP2[127:64], OP3[127:64]) o vfmsub132_double(OP1[63:0], OP2[63:0], OP3[63:0]))))
(vfmsub132pd ymm, ymm, ymm) -> (OP1 = vfmsub132_double(OP1[255:192], OP2[255:192], OP3[255:192]) o (vfmsub132_double(OP1[191:128], OP2[191:128], OP3[191:128]) o (vfmsub132_double(OP1[127:64], OP2[127:64], OP3[127:64]) o vfmsub132_double(OP1[63:0], OP2[63:0], OP3[63:0]))))
(vfmsub132ps xmm, xmm, m128) -> (OP1 = vfmsub132_single(0x0_32, 0x0_32, 0x0_32) o (vfmsub132_single(0x0_32, 0x0_32, 0x0_32) o (vfmsub132_single(0x0_32, 0x0_32, 0x0_32) o (vfmsub132_single(0x0_32, 0x0_32, 0x0_32) o (vfmsub132_single(OP1[127:96], OP2[127:96], OP3[127:96]) o (vfmsub132_single(OP1[95:64], OP2[95:64], OP3[95:64]) o (vfmsub132_single(OP1[63:32], OP2[63:32], OP3[63:32]) o vfmsub132_single(OP1[31:0], OP2[31:0], OP3[31:0]))))))))
(vfmsub132ps xmm, xmm, xmm) -> (OP1 = vfmsub132_single(0x0_32, 0x0_32, 0x0_32) o (vfmsub132_single(0x0_32, 0x0_32, 0x0_32) o (vfmsub132_single(0x0_32, 0x0_32, 0x0_32) o (vfmsub132_single(0x0_32, 0x0_32, 0x0_32) o (vfmsub132_single(OP1[127:96], OP2[127:96], OP3[127:96]) o (vfmsub132_single(OP1[95:64], OP2[95:64], OP3[95:64]) o (vfmsub132_single(OP1[63:32], OP2[63:32], OP3[63:32]) o vfmsub132_single(OP1[31:0], OP2[31:0], OP3[31:0]))))))))
(vfmsub132ps ymm, ymm, m256) -> (OP1 = vfmsub132_single(OP1[255:224], OP2[255:224], OP3[255:224]) o (vfmsub132_single(OP1[223:192], OP2[223:192], OP3[223:192]) o (vfmsub132_single(OP1[191:160], OP2[191:160], OP3[191:160]) o (vfmsub132_single(OP1[159:128], OP2[159:128], OP3[159:128]) o (vfmsub132_single(OP1[127:96], OP2[127:96], OP3[127:96]) o (vfmsub132_single(OP1[95:64], OP2[95:64], OP3[95:64]) o (vfmsub132_single(OP1[63:32], OP2[63:32], OP3[63:32]) o vfmsub132_single(OP1[31:0], OP2[31:0], OP3[31:0]))))))))
(vfmsub132ps ymm, ymm, ymm) -> (OP1 = vfmsub132_single(OP1[255:224], OP2[255:224], OP3[255:224]) o (vfmsub132_single(OP1[223:192], OP2[223:192], OP3[223:192]) o (vfmsub132_single(OP1[191:160], OP2[191:160], OP3[191:160]) o (vfmsub132_single(OP1[159:128], OP2[159:128], OP3[159:128]) o (vfmsub132_single(OP1[127:96], OP2[127:96], OP3[127:96]) o (vfmsub132_single(OP1[95:64], OP2[95:64], OP3[95:64]) o (vfmsub132_single(OP1[63:32], OP2[63:32], OP3[63:32]) o vfmsub132_single(OP1[31:0], OP2[31:0], OP3[31:0]))))))))
(vfmsub132sd xmm, xmm, m64) -> (OP1 = 0x0_128 o (OP1[127:64] o vfmsub132_double(OP1[63:0], OP2[63:0], OP3[63:0])))
(vfmsub132sd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:64] o vfmsub132_double(OP1[63:0], OP2[63:0], OP3[63:0])))
(vfmsub132ss xmm, xmm, m32) -> (OP1 = 0x0_128 o (OP1[127:32] o vfmsub132_single(OP1[31:0], OP2[31:0], OP3[31:0])))
(vfmsub132ss xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:32] o vfmsub132_single(OP1[31:0], OP2[31:0], OP3[31:0])))
(vfmsub213pd xmm, xmm, m128) -> (OP1 = 0x0_128 o vfmsub132_double(OP2[127:64], OP3[127:64], OP1[127:64])[63:8] o vfmsub132_double(OP2[127:64], OP3[127:64], OP1[127:64])[7:0] o vfmsub132_double(OP2[63:0], OP3[63:0], OP1[63:0]))
(vfmsub213pd xmm, xmm, xmm) -> (OP1 = 0x0_128 o vfmsub132_double(OP2[127:64], OP3[127:64], OP1[127:64])[63:8] o vfmsub132_double(OP2[127:64], OP3[127:64], OP1[127:64])[7:0] o vfmsub132_double(OP2[63:0], OP3[63:0], OP1[63:0]))
(vfmsub213pd ymm, ymm, m256) -> (OP1 = vfmsub132_double(OP2[255:192], OP3[255:192], OP1[255:192]) o (vfmsub132_double(OP2[191:128], OP3[191:128], OP1[191:128]) o (vfmsub132_double(OP2[127:64], OP3[127:64], OP1[127:64]) o vfmsub132_double(OP2[63:0], OP3[63:0], OP1[63:0]))))
(vfmsub213pd ymm, ymm, ymm) -> (OP1 = vfmsub132_double(OP2[255:192], OP3[255:192], OP1[255:192]) o (vfmsub132_double(OP2[191:128], OP3[191:128], OP1[191:128]) o (vfmsub132_double(OP2[127:64], OP3[127:64], OP1[127:64]) o vfmsub132_double(OP2[63:0], OP3[63:0], OP1[63:0]))))
(vfmsub213ps xmm, xmm, m128) -> (OP1 = 0x0_128 o (vfmsub132_single(OP2[127:96], OP3[127:96], OP1[127:96]) o (vfmsub132_single(OP2[95:64], OP3[95:64], OP1[95:64]) o (vfmsub132_single(OP2[63:32], OP3[63:32], OP1[63:32]) o vfmsub132_single(OP2[31:0], OP3[31:0], OP1[31:0])))))
(vfmsub213ps xmm, xmm, xmm) -> (OP1 = 0x0_128 o (vfmsub132_single(OP2[127:96], OP3[127:96], OP1[127:96]) o (vfmsub132_single(OP2[95:64], OP3[95:64], OP1[95:64]) o (vfmsub132_single(OP2[63:32], OP3[63:32], OP1[63:32]) o vfmsub132_single(OP2[31:0], OP3[31:0], OP1[31:0])))))
(vfmsub213ps ymm, ymm, m256) -> (OP1 = vfmsub132_single(OP2[255:224], OP3[255:224], OP1[255:224]) o vfmsub132_single(OP2[223:192], OP3[223:192], OP1[223:192]) o (vfmsub132_single(OP2[191:160], OP3[191:160], OP1[191:160]) o (vfmsub132_single(OP2[159:128], OP3[159:128], OP1[159:128]) o (vfmsub132_single(OP2[127:96], OP3[127:96], OP1[127:96]) o (vfmsub132_single(OP2[95:64], OP3[95:64], OP1[95:64]) o (vfmsub132_single(OP2[63:32], OP3[63:32], OP1[63:32]) o vfmsub132_single(OP2[31:0], OP3[31:0], OP1[31:0])))))))
(vfmsub213ps ymm, ymm, ymm) -> (OP1 = vfmsub132_single(OP2[255:224], OP3[255:224], OP1[255:224]) o vfmsub132_single(OP2[223:192], OP3[223:192], OP1[223:192]) o (vfmsub132_single(OP2[191:160], OP3[191:160], OP1[191:160]) o (vfmsub132_single(OP2[159:128], OP3[159:128], OP1[159:128]) o (vfmsub132_single(OP2[127:96], OP3[127:96], OP1[127:96]) o (vfmsub132_single(OP2[95:64], OP3[95:64], OP1[95:64]) o (vfmsub132_single(OP2[63:32], OP3[63:32], OP1[63:32]) o vfmsub132_single(OP2[31:0], OP3[31:0], OP1[31:0])))))))
(vfmsub213sd xmm, xmm, m64) -> (OP1 = 0x0_128 o (OP1[127:64] o vfmsub132_double(OP2[63:0], OP3[63:0], OP1[63:0])))
(vfmsub213sd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:64] o vfmsub132_double(OP2[63:0], OP3[63:0], OP1[63:0])))
(vfmsub213ss xmm, xmm, m32) -> (OP1 = 0x0_128 o (OP1[127:32] o vfmadd132_single(OP2[31:0], vfnmsub132_single(OP3[31:0], OP3[31:0], 0x0_24 o OP3[7:0]), OP1[31:0])))
(vfmsub213ss xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:32] o vfmadd132_single(OP2[31:0], vfnmsub132_single(OP3[31:0], OP3[31:0], 0x0_24 o OP3[7:0]), OP1[31:0])))
(vfmsub231pd xmm, xmm, m128) -> (OP1 = 0x0_128 o (vfmsub132_double(OP2[127:64], OP1[127:64], OP3[127:64]) o vfmsub132_double(OP2[63:0], OP1[63:0], OP3[63:0])))
(vfmsub231pd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (vfmsub132_double(OP2[127:64], OP1[127:64], OP3[127:64]) o vfmsub132_double(OP2[63:0], OP1[63:0], OP3[63:0])))
(vfmsub231pd ymm, ymm, m256) -> (OP1 = vfmsub132_double(OP2[255:192], OP1[255:192], OP3[255:192]) o vfmsub132_double(OP2[191:128], OP1[191:128], OP3[191:128]) o (vfmsub132_double(OP2[127:64], OP1[127:64], OP3[127:64]) o vfmsub132_double(OP2[63:0], OP1[63:0], OP3[63:0])))
(vfmsub231pd ymm, ymm, ymm) -> (OP1 = vfmsub132_double(OP2[255:192], OP1[255:192], OP3[255:192]) o vfmsub132_double(OP2[191:128], OP1[191:128], OP3[191:128]) o (vfmsub132_double(OP2[127:64], OP1[127:64], OP3[127:64]) o vfmsub132_double(OP2[63:0], OP1[63:0], OP3[63:0])))
(vfmsub231ps xmm, xmm, m128) -> (OP1 = 0x0_128 o (vfmsub132_single(OP2[127:96], OP1[127:96], OP3[127:96]) o (vfmsub132_single(OP2[95:64], OP1[95:64], OP3[95:64]) o (vfmsub132_single(OP2[63:32], OP1[63:32], OP3[63:32]) o vfmsub132_single(OP2[31:0], OP1[31:0], OP3[31:0])))))
(vfmsub231ps xmm, xmm, xmm) -> (OP1 = 0x0_128 o (vfmsub132_single(OP2[127:96], OP1[127:96], OP3[127:96]) o (vfmsub132_single(OP2[95:64], OP1[95:64], OP3[95:64]) o (vfmsub132_single(OP2[63:32], OP1[63:32], OP3[63:32]) o vfmsub132_single(OP2[31:0], OP1[31:0], OP3[31:0])))))
(vfmsub231ps ymm, ymm, m256) -> (OP1 = vfmsub132_single(OP2[255:224], OP1[255:224], OP3[255:224]) o (vfmsub132_single(OP2[223:192], OP1[223:192], OP3[223:192]) o (vfmsub132_single(OP2[191:160], OP1[191:160], OP3[191:160]) o (vfmsub132_single(OP2[159:128], OP1[159:128], OP3[159:128]) o (vfmsub132_single(OP2[127:96], OP1[127:96], OP3[127:96]) o (vfmsub132_single(OP2[95:64], OP1[95:64], OP3[95:64]) o (vfmsub132_single(OP2[63:32], OP1[63:32], OP3[63:32]) o vfmsub132_single(OP2[31:0], OP1[31:0], OP3[31:0]))))))))
(vfmsub231ps ymm, ymm, ymm) -> (OP1 = vfmsub132_single(OP2[255:224], OP1[255:224], OP3[255:224]) o (vfmsub132_single(OP2[223:192], OP1[223:192], OP3[223:192]) o (vfmsub132_single(OP2[191:160], OP1[191:160], OP3[191:160]) o (vfmsub132_single(OP2[159:128], OP1[159:128], OP3[159:128]) o (vfmsub132_single(OP2[127:96], OP1[127:96], OP3[127:96]) o (vfmsub132_single(OP2[95:64], OP1[95:64], OP3[95:64]) o (vfmsub132_single(OP2[63:32], OP1[63:32], OP3[63:32]) o vfmsub132_single(OP2[31:0], OP1[31:0], OP3[31:0]))))))))
(vfmsub231sd xmm, xmm, m64) -> (OP1 = 0x0_128 o (OP1[127:64] o vfmsub132_double(OP2[63:0], OP1[63:0], OP3[63:0])))
(vfmsub231sd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:64] o vfmsub132_double(OP2[63:0], OP1[63:0], OP3[63:0])))
(vfmsub231ss xmm, xmm, m32) -> (OP1 = 0x0_128 o (OP1[127:32] o vfmsub132_single(OP2[31:0], OP1[31:0], OP3[31:0])))
(vfmsub231ss xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:32] o vfmsub132_single(OP2[31:0], OP1[31:0], OP3[31:0])))
(vfmsubadd132pd xmm, xmm, m128) -> (OP1 = 0x0_128 o (vfmsub132_double(OP1[127:64], OP2[127:64], OP3[127:64]) o vfmsub132_double(OP1[63:0], vnfmsub132_double(OP2[63:0], OP2[63:0], 0x0_32 o OP2[127:96]), OP3[63:0])))
(vfmsubadd132pd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (vfmsub132_double(OP1[127:64], OP2[127:64], OP3[127:64]) o vfmsub132_double(OP1[63:0], vnfmsub132_double(OP2[63:0], OP2[63:0], 0x0_32 o OP2[127:96]), OP3[63:0])))
(vfmsubadd132ps xmm, xmm, m128) -> (OP1 = 0x0_128 o ((vfmsub132_single(OP1[127:96], vfnmsub132_single(0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[31:24], OP2[127:96], OP2[127:96])) ^ (0x0_32 | 0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[31:24], OP2[127:96], OP2[127:96]))), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[31:24], OP2[127:96], OP2[127:96])), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[31:24], OP2[127:96], OP2[127:96]))), OP3[127:96]) o vfmsub132_single(OP1[95:64], vfnmsub132_single(0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[23:16], OP2[95:64], OP2[95:64])) ^ (0x0_32 | 0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[23:16], OP2[95:64], OP2[95:64]))), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[23:16], OP2[95:64], OP2[95:64])), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[23:16], OP2[95:64], OP2[95:64]))), OP3[95:64]) | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[31:24], OP2[127:96], OP2[127:96])) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[23:16], OP2[95:64], OP2[95:64])) ^ (0x0_64 | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[31:24], OP2[127:96], OP2[127:96])) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[23:16], OP2[95:64], OP2[95:64])))) o (vfmsub132_single(OP1[63:32], vfnmsub132_single(0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[15:8], OP2[63:32], OP2[63:32])) ^ (0x0_32 | 0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[15:8], OP2[63:32], OP2[63:32]))), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[15:8], OP2[63:32], OP2[63:32])), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[15:8], OP2[63:32], OP2[63:32]))), OP3[63:32]) o vfmsub132_single(OP1[31:0], vfnmsub132_single(0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[7:0], OP2[31:0], OP2[31:0])) ^ (0x0_32 | 0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[7:0], OP2[31:0], OP2[31:0]))), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[7:0], OP2[31:0], OP2[31:0])), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[7:0], OP2[31:0], OP2[31:0]))), OP3[31:0]) | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[15:8], OP2[63:32], OP2[63:32])) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[7:0], OP2[31:0], OP2[31:0])) ^ (0x0_64 | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[15:8], OP2[63:32], OP2[63:32])) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[7:0], OP2[31:0], OP2[31:0]))))))
(vfmsubadd132ps xmm, xmm, xmm) -> (OP1 = 0x0_128 o ((vfmsub132_single(OP1[127:96], vfnmsub132_single(0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[31:24], OP2[127:96], OP2[127:96])) ^ (0x0_32 | 0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[31:24], OP2[127:96], OP2[127:96]))), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[31:24], OP2[127:96], OP2[127:96])), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[31:24], OP2[127:96], OP2[127:96]))), OP3[127:96]) o vfmsub132_single(OP1[95:64], vfnmsub132_single(0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[23:16], OP2[95:64], OP2[95:64])) ^ (0x0_32 | 0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[23:16], OP2[95:64], OP2[95:64]))), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[23:16], OP2[95:64], OP2[95:64])), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[23:16], OP2[95:64], OP2[95:64]))), OP3[95:64]) | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[31:24], OP2[127:96], OP2[127:96])) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[23:16], OP2[95:64], OP2[95:64])) ^ (0x0_64 | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[31:24], OP2[127:96], OP2[127:96])) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[23:16], OP2[95:64], OP2[95:64])))) o (vfmsub132_single(OP1[63:32], vfnmsub132_single(0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[15:8], OP2[63:32], OP2[63:32])) ^ (0x0_32 | 0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[15:8], OP2[63:32], OP2[63:32]))), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[15:8], OP2[63:32], OP2[63:32])), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[15:8], OP2[63:32], OP2[63:32]))), OP3[63:32]) o vfmsub132_single(OP1[31:0], vfnmsub132_single(0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[7:0], OP2[31:0], OP2[31:0])) ^ (0x0_32 | 0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[7:0], OP2[31:0], OP2[31:0]))), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[7:0], OP2[31:0], OP2[31:0])), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[7:0], OP2[31:0], OP2[31:0]))), OP3[31:0]) | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[15:8], OP2[63:32], OP2[63:32])) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[7:0], OP2[31:0], OP2[31:0])) ^ (0x0_64 | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[15:8], OP2[63:32], OP2[63:32])) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP2[7:0], OP2[31:0], OP2[31:0]))))))
(vfmsubadd213pd xmm, xmm, m128) -> (OP1 = 0x0_128 o vfmsub132_double(OP2[127:64], OP3[127:64] ^ 0x0_64, OP1[127:64])[63:8] o vfmsub132_double(OP2[127:64], OP3[127:64] ^ 0x0_64, OP1[127:64])[7:0] o vfmsub132_double(OP2[63:0], vfmsub132_double(vnfmsub132_double(mincmp_double(0x0_64, 0x0_32 o OP3[127:96]) == 0x1_1 ? 0x0_64 : 0x0_32 o OP3[127:96], 0x0_32 o OP3[127:96], mincmp_double(0x0_64, 0x0_32 o OP3[127:96]) == 0x1_1 ? 0x0_64 : 0x0_32 o OP3[127:96]), OP3[63:0], OP3[63:0]), OP1[63:0]))
(vfmsubadd213pd xmm, xmm, xmm) -> (OP1 = 0x0_128 o vfmsub132_double(OP2[127:64], OP3[127:64] ^ 0x0_64, OP1[127:64])[63:8] o vfmsub132_double(OP2[127:64], OP3[127:64] ^ 0x0_64, OP1[127:64])[7:0] o vfmsub132_double(OP2[63:0], vfmsub132_double(vnfmsub132_double(mincmp_double(0x0_64, 0x0_32 o OP3[127:96]) == 0x1_1 ? 0x0_64 : 0x0_32 o OP3[127:96], 0x0_32 o OP3[127:96], mincmp_double(0x0_64, 0x0_32 o OP3[127:96]) == 0x1_1 ? 0x0_64 : 0x0_32 o OP3[127:96]), OP3[63:0], OP3[63:0]), OP1[63:0]))
(vfmsubadd213ps xmm, xmm, m128) -> (OP1 = 0x0_128 o ((vfmsub132_single(OP2[127:96], vfnmsub132_single(0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[31:24], OP3[127:96], OP3[127:96])) ^ (0x0_32 | 0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[31:24], OP3[127:96], OP3[127:96]))), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[31:24], OP3[127:96], OP3[127:96])), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[31:24], OP3[127:96], OP3[127:96]))), OP1[127:96]) o vfmsub132_single(OP2[95:64], vfnmsub132_single(0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[23:16], OP3[95:64], OP3[95:64])) ^ (0x0_32 | 0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[23:16], OP3[95:64], OP3[95:64]))), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[23:16], OP3[95:64], OP3[95:64])), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[23:16], OP3[95:64], OP3[95:64]))), OP1[95:64]) | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[31:24], OP3[127:96], OP3[127:96])) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[23:16], OP3[95:64], OP3[95:64])) ^ (0x0_64 | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[31:24], OP3[127:96], OP3[127:96])) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[23:16], OP3[95:64], OP3[95:64])))) o (vfmsub132_single(OP2[63:32], vfnmsub132_single(0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[15:8], OP3[63:32], OP3[63:32])) ^ (0x0_32 | 0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[15:8], OP3[63:32], OP3[63:32]))), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[15:8], OP3[63:32], OP3[63:32])), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[15:8], OP3[63:32], OP3[63:32]))), OP1[63:32]) o vfmsub132_single(OP2[31:0], vfnmsub132_single(0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[7:0], OP3[31:0], OP3[31:0])) ^ (0x0_32 | 0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[7:0], OP3[31:0], OP3[31:0]))), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[7:0], OP3[31:0], OP3[31:0])), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[7:0], OP3[31:0], OP3[31:0]))), OP1[31:0]) | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[15:8], OP3[63:32], OP3[63:32])) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[7:0], OP3[31:0], OP3[31:0])) ^ (0x0_64 | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[15:8], OP3[63:32], OP3[63:32])) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[7:0], OP3[31:0], OP3[31:0]))))))
(vfmsubadd213ps xmm, xmm, xmm) -> (OP1 = 0x0_128 o ((vfmsub132_single(OP2[127:96], vfnmsub132_single(0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[31:24], OP3[127:96], OP3[127:96])) ^ (0x0_32 | 0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[31:24], OP3[127:96], OP3[127:96]))), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[31:24], OP3[127:96], OP3[127:96])), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[31:24], OP3[127:96], OP3[127:96]))), OP1[127:96]) o vfmsub132_single(OP2[95:64], vfnmsub132_single(0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[23:16], OP3[95:64], OP3[95:64])) ^ (0x0_32 | 0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[23:16], OP3[95:64], OP3[95:64]))), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[23:16], OP3[95:64], OP3[95:64])), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[23:16], OP3[95:64], OP3[95:64]))), OP1[95:64]) | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[31:24], OP3[127:96], OP3[127:96])) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[23:16], OP3[95:64], OP3[95:64])) ^ (0x0_64 | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[31:24], OP3[127:96], OP3[127:96])) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[23:16], OP3[95:64], OP3[95:64])))) o (vfmsub132_single(OP2[63:32], vfnmsub132_single(0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[15:8], OP3[63:32], OP3[63:32])) ^ (0x0_32 | 0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[15:8], OP3[63:32], OP3[63:32]))), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[15:8], OP3[63:32], OP3[63:32])), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[15:8], OP3[63:32], OP3[63:32]))), OP1[63:32]) o vfmsub132_single(OP2[31:0], vfnmsub132_single(0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[7:0], OP3[31:0], OP3[31:0])) ^ (0x0_32 | 0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[7:0], OP3[31:0], OP3[31:0]))), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[7:0], OP3[31:0], OP3[31:0])), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[7:0], OP3[31:0], OP3[31:0]))), OP1[31:0]) | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[15:8], OP3[63:32], OP3[63:32])) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[7:0], OP3[31:0], OP3[31:0])) ^ (0x0_64 | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[15:8], OP3[63:32], OP3[63:32])) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP3[7:0], OP3[31:0], OP3[31:0]))))))
(vfmsubadd231pd xmm, xmm, m128) -> (OP1 = 0x0_128 o (vfmsub132_double(OP2[127:64], OP1[127:64], OP3[127:64]) o vfmsub132_double(OP2[63:0], vnfmsub132_double(OP1[63:0], OP1[63:0], 0x0_32 o OP1[127:96]), OP3[63:0])))
(vfmsubadd231pd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (vfmsub132_double(OP2[127:64], OP1[127:64], OP3[127:64]) o vfmsub132_double(OP2[63:0], vnfmsub132_double(OP1[63:0], OP1[63:0], 0x0_32 o OP1[127:96]), OP3[63:0])))
(vfmsubadd231ps xmm, xmm, m128) -> (OP1 = 0x0_128 o ((vfmsub132_single(OP2[127:96], vfnmsub132_single(0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[31:24], OP1[127:96], OP1[127:96])) ^ (0x0_32 | 0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[31:24], OP1[127:96], OP1[127:96]))), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[31:24], OP1[127:96], OP1[127:96])), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[31:24], OP1[127:96], OP1[127:96]))), OP3[127:96]) o vfmsub132_single(OP2[95:64], vfnmsub132_single(0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[23:16], OP1[95:64], OP1[95:64])) ^ (0x0_32 | 0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[23:16], OP1[95:64], OP1[95:64]))), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[23:16], OP1[95:64], OP1[95:64])), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[23:16], OP1[95:64], OP1[95:64]))), OP3[95:64]) | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[31:24], OP1[127:96], OP1[127:96])) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[23:16], OP1[95:64], OP1[95:64])) ^ (0x0_64 | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[31:24], OP1[127:96], OP1[127:96])) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[23:16], OP1[95:64], OP1[95:64])))) o (vfmsub132_single(OP2[63:32], vfnmsub132_single(0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[15:8], OP1[63:32], OP1[63:32])) ^ (0x0_32 | 0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[15:8], OP1[63:32], OP1[63:32]))), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[15:8], OP1[63:32], OP1[63:32])), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[15:8], OP1[63:32], OP1[63:32]))), OP3[63:32]) o vfmsub132_single(OP2[31:0], vfnmsub132_single(0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[7:0], OP1[31:0], OP1[31:0])) ^ (0x0_32 | 0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[7:0], OP1[31:0], OP1[31:0]))), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[7:0], OP1[31:0], OP1[31:0])), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[7:0], OP1[31:0], OP1[31:0]))), OP3[31:0]) | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[15:8], OP1[63:32], OP1[63:32])) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[7:0], OP1[31:0], OP1[31:0])) ^ (0x0_64 | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[15:8], OP1[63:32], OP1[63:32])) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[7:0], OP1[31:0], OP1[31:0]))))))
(vfmsubadd231ps xmm, xmm, xmm) -> (OP1 = 0x0_128 o ((vfmsub132_single(OP2[127:96], vfnmsub132_single(0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[31:24], OP1[127:96], OP1[127:96])) ^ (0x0_32 | 0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[31:24], OP1[127:96], OP1[127:96]))), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[31:24], OP1[127:96], OP1[127:96])), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[31:24], OP1[127:96], OP1[127:96]))), OP3[127:96]) o vfmsub132_single(OP2[95:64], vfnmsub132_single(0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[23:16], OP1[95:64], OP1[95:64])) ^ (0x0_32 | 0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[23:16], OP1[95:64], OP1[95:64]))), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[23:16], OP1[95:64], OP1[95:64])), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[23:16], OP1[95:64], OP1[95:64]))), OP3[95:64]) | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[31:24], OP1[127:96], OP1[127:96])) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[23:16], OP1[95:64], OP1[95:64])) ^ (0x0_64 | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[31:24], OP1[127:96], OP1[127:96])) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[23:16], OP1[95:64], OP1[95:64])))) o (vfmsub132_single(OP2[63:32], vfnmsub132_single(0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[15:8], OP1[63:32], OP1[63:32])) ^ (0x0_32 | 0x0_32 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[15:8], OP1[63:32], OP1[63:32]))), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[15:8], OP1[63:32], OP1[63:32])), add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[15:8], OP1[63:32], OP1[63:32]))), OP3[63:32]) o vfmsub132_single(OP2[31:0], vfnmsub132_single(0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[7:0], OP1[31:0], OP1[31:0])) ^ (0x0_32 | 0x0_32 ^ sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[7:0], OP1[31:0], OP1[31:0]))), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[7:0], OP1[31:0], OP1[31:0])), sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[7:0], OP1[31:0], OP1[31:0]))), OP3[31:0]) | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[15:8], OP1[63:32], OP1[63:32])) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[7:0], OP1[31:0], OP1[31:0])) ^ (0x0_64 | 0x0_64 ^ add_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[15:8], OP1[63:32], OP1[63:32])) o sub_single(vfnmsub132_single(0x0_32, 0x0_32, 0x0_32), vfnmsub132_single(0x0_24 o OP1[7:0], OP1[31:0], OP1[31:0]))))))
(vfnmadd132pd xmm, xmm, m128) -> (OP1 = 0x0_32 o (0x0_32 o 0x0_64) o (vnfmsub132_double(OP1[127:64], vnfmsub132_double(0x0_64, OP2[127:64], 0x0_64), OP3[127:64]) o vnfmsub132_double(OP1[63:0], vnfmsub132_double(0x0_64, OP2[63:0], 0x0_32 o OP1[95:64]), OP3[63:0])))
(vfnmadd132pd xmm, xmm, xmm) -> (OP1 = 0x0_32 o (0x0_32 o 0x0_64) o (vnfmsub132_double(OP1[127:64], vnfmsub132_double(0x0_64, OP2[127:64], 0x0_64), OP3[127:64]) o vnfmsub132_double(OP1[63:0], vnfmsub132_double(0x0_64, OP2[63:0], 0x0_32 o OP1[95:64]), OP3[63:0])))
(vfnmadd132pd ymm, ymm, m256) -> (OP1 = vfnmadd132_double(OP1[255:192], OP2[255:192], OP3[255:192]) o (vfnmadd132_double(OP1[191:128], OP2[191:128], OP3[191:128]) o (vfnmadd132_double(OP1[127:64], OP2[127:64], OP3[127:64]) o vfnmadd132_double(OP1[63:0], OP2[63:0], OP3[63:0]))))
(vfnmadd132pd ymm, ymm, ymm) -> (OP1 = vfnmadd132_double(OP1[255:192], OP2[255:192], OP3[255:192]) o (vfnmadd132_double(OP1[191:128], OP2[191:128], OP3[191:128]) o (vfnmadd132_double(OP1[127:64], OP2[127:64], OP3[127:64]) o vfnmadd132_double(OP1[63:0], OP2[63:0], OP3[63:0]))))
(vfnmadd132ps xmm, xmm, m128) -> (OP1 = 0x0_128 o (vfnmadd132_single(OP1[127:96], OP2[127:96], 0x0_32 | OP3[127:96]) o (vfnmadd132_single(OP1[95:64], OP2[95:64], 0x0_32 | OP3[95:64]) o (vfnmadd132_single(OP1[63:32], OP2[63:32], OP3[63:32]) o vfnmadd132_single(OP1[31:0], OP2[31:0], OP3[31:0])))))
(vfnmadd132ps xmm, xmm, xmm) -> (OP1 = 0x0_128 o (vfnmadd132_single(OP1[127:96], OP2[127:96], 0x0_32 | OP3[127:96]) o (vfnmadd132_single(OP1[95:64], OP2[95:64], 0x0_32 | OP3[95:64]) o (vfnmadd132_single(OP1[63:32], OP2[63:32], OP3[63:32]) o vfnmadd132_single(OP1[31:0], OP2[31:0], OP3[31:0])))))
(vfnmadd132ps ymm, ymm, m256) -> (OP1 = vfnmadd132_single(OP1[255:224], OP2[255:224], OP3[255:224]) o (vfnmadd132_single(OP1[223:192], OP2[223:192], OP3[223:192]) o (vfnmadd132_single(OP1[191:160], OP2[191:160], OP3[191:160]) o (vfnmadd132_single(OP1[159:128], OP2[159:128], OP3[159:128]) o (vfnmadd132_single(OP1[127:96], OP2[127:96], OP3[127:96]) o (vfnmadd132_single(OP1[95:64], OP2[95:64], OP3[95:64]) o (vfnmadd132_single(OP1[63:32], OP2[63:32], OP3[63:32]) o vfnmadd132_single(OP1[31:0], OP2[31:0], OP3[31:0]))))))))
(vfnmadd132ps ymm, ymm, ymm) -> (OP1 = vfnmadd132_single(OP1[255:224], OP2[255:224], OP3[255:224]) o (vfnmadd132_single(OP1[223:192], OP2[223:192], OP3[223:192]) o (vfnmadd132_single(OP1[191:160], OP2[191:160], OP3[191:160]) o (vfnmadd132_single(OP1[159:128], OP2[159:128], OP3[159:128]) o (vfnmadd132_single(OP1[127:96], OP2[127:96], OP3[127:96]) o (vfnmadd132_single(OP1[95:64], OP2[95:64], OP3[95:64]) o (vfnmadd132_single(OP1[63:32], OP2[63:32], OP3[63:32]) o vfnmadd132_single(OP1[31:0], OP2[31:0], OP3[31:0]))))))))
(vfnmadd132sd xmm, xmm, m64) -> (OP1 = 0x0_128 o (OP1[127:64] o vfnmadd132_double(OP1[63:0], OP2[63:0], OP3[63:0])))
(vfnmadd132sd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:64] o vfnmadd132_double(OP1[63:0], OP2[63:0], OP3[63:0])))
(vfnmadd132ss xmm, xmm, m32) -> (OP1 = 0x0_128 o (OP1[127:32] o vfnmadd132_single(OP1[31:0], OP2[31:0], OP3[31:0])))
(vfnmadd132ss xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:32] o vfnmadd132_single(OP1[31:0], OP2[31:0], OP3[31:0])))
(vfnmadd213pd xmm, xmm, m128) -> (OP1 = 0x0_128 o (vfnmadd132_double(OP2[127:64], OP3[127:64], OP1[127:64]) o vfnmadd132_double(OP2[63:0], OP3[63:0], OP1[63:0])))
(vfnmadd213pd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (vfnmadd132_double(OP2[127:64], OP3[127:64], OP1[127:64]) o vfnmadd132_double(OP2[63:0], OP3[63:0], OP1[63:0])))
(vfnmadd213pd ymm, ymm, m256) -> (OP1 = vfnmadd132_double(OP2[255:192], OP3[255:192], OP1[255:192]) o (vfnmadd132_double(OP2[191:128], OP3[191:128], OP1[191:128]) o (vfnmadd132_double(OP2[127:64], OP3[127:64], OP1[127:64]) o vfnmadd132_double(OP2[63:0], OP3[63:0], OP1[63:0]))))
(vfnmadd213pd ymm, ymm, ymm) -> (OP1 = vfnmadd132_double(OP2[255:192], OP3[255:192], OP1[255:192]) o (vfnmadd132_double(OP2[191:128], OP3[191:128], OP1[191:128]) o (vfnmadd132_double(OP2[127:64], OP3[127:64], OP1[127:64]) o vfnmadd132_double(OP2[63:0], OP3[63:0], OP1[63:0]))))
(vfnmadd213ps xmm, xmm, m128) -> (OP1 = vfnmadd132_single(0x0_32, 0x0_32, 0x0_32) o (vfnmadd132_single(0x0_32, 0x0_32, 0x0_32) o (vfnmadd132_single(0x0_32, 0x0_32, 0x0_32) o vfnmadd132_single(0x0_32, 0x0_32, 0x0_32))) o (vfnmadd132_single(OP2[127:96], OP3[127:96], 0x0_32 | OP1[127:96]) o (vfnmadd132_single(OP2[95:64], OP3[95:64], 0x0_32 | OP1[95:64]) o (vfnmadd132_single(OP2[63:32], OP3[63:32], OP1[63:32]) o vfnmadd132_single(OP2[31:0], OP3[31:0], OP1[31:0])))))
(vfnmadd213ps xmm, xmm, xmm) -> (OP1 = vfnmadd132_single(0x0_32, 0x0_32, 0x0_32) o (vfnmadd132_single(0x0_32, 0x0_32, 0x0_32) o (vfnmadd132_single(0x0_32, 0x0_32, 0x0_32) o vfnmadd132_single(0x0_32, 0x0_32, 0x0_32))) o (vfnmadd132_single(OP2[127:96], OP3[127:96], 0x0_32 | OP1[127:96]) o (vfnmadd132_single(OP2[95:64], OP3[95:64], 0x0_32 | OP1[95:64]) o (vfnmadd132_single(OP2[63:32], OP3[63:32], OP1[63:32]) o vfnmadd132_single(OP2[31:0], OP3[31:0], OP1[31:0])))))
(vfnmadd213ps ymm, ymm, m256) -> (OP1 = vfnmadd132_single(OP2[255:224], OP3[255:224], OP1[255:224]) o vfnmadd132_single(OP2[223:192], OP3[223:192], OP1[223:192]) o (vfnmadd132_single(OP2[191:160], OP3[191:160], OP1[191:160]) o (vfnmadd132_single(OP2[159:128], OP3[159:128], OP1[159:128]) o (vfnmadd132_single(OP2[127:96], OP3[127:96], OP1[127:96]) o (vfnmadd132_single(OP2[95:64], OP3[95:64], OP1[95:64]) o (vfnmadd132_single(OP2[63:32], OP3[63:32], OP1[63:32]) o vfnmadd132_single(OP2[31:0], OP3[31:0], OP1[31:0])))))))
(vfnmadd213ps ymm, ymm, ymm) -> (OP1 = vfnmadd132_single(OP2[255:224], OP3[255:224], OP1[255:224]) o vfnmadd132_single(OP2[223:192], OP3[223:192], OP1[223:192]) o (vfnmadd132_single(OP2[191:160], OP3[191:160], OP1[191:160]) o (vfnmadd132_single(OP2[159:128], OP3[159:128], OP1[159:128]) o (vfnmadd132_single(OP2[127:96], OP3[127:96], OP1[127:96]) o (vfnmadd132_single(OP2[95:64], OP3[95:64], OP1[95:64]) o (vfnmadd132_single(OP2[63:32], OP3[63:32], OP1[63:32]) o vfnmadd132_single(OP2[31:0], OP3[31:0], OP1[31:0])))))))
(vfnmadd213sd xmm, xmm, m64) -> (OP1 = 0x0_128 o ((OP1[127:64] ^ 0x0_64) o vfmsub132_double(vnfmsub132_double(mincmp_double(0x0_32 o OP2[95:64], 0x0_32 o OP2[31:0]) == 0x1_1 ? 0x0_32 o OP2[95:64] : 0x0_32 o OP2[31:0], OP2[63:0], mincmp_double(0x0_32 o OP2[95:64], 0x0_32 o OP2[31:0]) == 0x1_1 ? 0x0_32 o OP2[95:64] : 0x0_32 o OP2[31:0]), vfmsub132_double(vnfmsub132_double(0x0_64, 0x0_64, 0x0_64), OP3[63:0], 0x0_64), OP1[63:0])))
(vfnmadd213sd xmm, xmm, xmm) -> (OP1 = 0x0_128 o ((OP1[127:64] ^ 0x0_64) o vfmsub132_double(vnfmsub132_double(mincmp_double(0x0_32 o OP2[95:64], 0x0_32 o OP2[31:0]) == 0x1_1 ? 0x0_32 o OP2[95:64] : 0x0_32 o OP2[31:0], OP2[63:0], mincmp_double(0x0_32 o OP2[95:64], 0x0_32 o OP2[31:0]) == 0x1_1 ? 0x0_32 o OP2[95:64] : 0x0_32 o OP2[31:0]), vfmsub132_double(vnfmsub132_double(0x0_64, 0x0_64, 0x0_64), OP3[63:0], 0x0_64), OP1[63:0])))
(vfnmadd213ss xmm, xmm, m32) -> (OP1 = 0x0_128 o (OP1[127:32] o vfnmsub132_single(OP2[31:0], vfnmsub132_single(0x0_32, OP3[31:0], OP3[31:0]), OP1[31:0])))
(vfnmadd213ss xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:32] o vfnmsub132_single(OP2[31:0], vfnmsub132_single(0x0_32, OP3[31:0], OP3[31:0]), OP1[31:0])))
(vfnmadd231pd xmm, xmm, m128) -> (OP1 = vfnmadd132_double(0x0_64, 0x0_64, 0x0_64) o vfnmadd132_double(0x0_64, 0x0_64, 0x0_64) o (vfnmadd132_double(OP2[127:64], OP1[127:64], OP3[127:64]) o vfnmadd132_double(OP2[63:0], OP1[63:0], OP3[63:0])))
(vfnmadd231pd xmm, xmm, xmm) -> (OP1 = vfnmadd132_double(0x0_64, 0x0_64, 0x0_64) o vfnmadd132_double(0x0_64, 0x0_64, 0x0_64) o (vfnmadd132_double(OP2[127:64], OP1[127:64], OP3[127:64]) o vfnmadd132_double(OP2[63:0], OP1[63:0], OP3[63:0])))
(vfnmadd231pd ymm, ymm, m256) -> (OP1 = vfnmadd132_double(OP2[255:192], OP1[255:192], OP3[255:192]) o vfnmadd132_double(OP2[191:128], OP1[191:128], OP3[191:128]) o (vfnmadd132_double(OP2[127:64], OP1[127:64], OP3[127:64]) o vfnmadd132_double(OP2[63:0], OP1[63:0], OP3[63:0])))
(vfnmadd231pd ymm, ymm, ymm) -> (OP1 = vfnmadd132_double(OP2[255:192], OP1[255:192], OP3[255:192]) o vfnmadd132_double(OP2[191:128], OP1[191:128], OP3[191:128]) o (vfnmadd132_double(OP2[127:64], OP1[127:64], OP3[127:64]) o vfnmadd132_double(OP2[63:0], OP1[63:0], OP3[63:0])))
(vfnmadd231ps xmm, xmm, m128) -> (OP1 = 0x0_128 o (vfnmadd132_single(OP2[127:96], OP1[127:96], 0x0_32 | OP3[127:96]) o (vfnmadd132_single(OP2[95:64], OP1[95:64], 0x0_32 | OP3[95:64]) o (vfnmadd132_single(OP2[63:32], OP1[63:32], OP3[63:32]) o vfnmadd132_single(OP2[31:0], OP1[31:0], OP3[31:0])))))
(vfnmadd231ps xmm, xmm, xmm) -> (OP1 = 0x0_128 o (vfnmadd132_single(OP2[127:96], OP1[127:96], 0x0_32 | OP3[127:96]) o (vfnmadd132_single(OP2[95:64], OP1[95:64], 0x0_32 | OP3[95:64]) o (vfnmadd132_single(OP2[63:32], OP1[63:32], OP3[63:32]) o vfnmadd132_single(OP2[31:0], OP1[31:0], OP3[31:0])))))
(vfnmadd231ps ymm, ymm, m256) -> (OP1 = vfnmadd132_single(OP2[255:224], OP1[255:224], OP3[255:224]) o (vfnmadd132_single(OP2[223:192], OP1[223:192], OP3[223:192]) o (vfnmadd132_single(OP2[191:160], OP1[191:160], OP3[191:160]) o vfnmadd132_single(OP2[159:128], OP1[159:128], OP3[159:128]))) o (vfnmadd132_single(OP2[127:96], OP1[127:96], OP3[127:96]) o (vfnmadd132_single(OP2[95:64], OP1[95:64], OP3[95:64]) o (vfnmadd132_single(OP2[63:32], OP1[63:32], OP3[63:32]) o vfnmadd132_single(OP2[31:0], OP1[31:0], OP3[31:0])))))
(vfnmadd231ps ymm, ymm, ymm) -> (OP1 = vfnmadd132_single(OP2[255:224], OP1[255:224], OP3[255:224]) o (vfnmadd132_single(OP2[223:192], OP1[223:192], OP3[223:192]) o (vfnmadd132_single(OP2[191:160], OP1[191:160], OP3[191:160]) o vfnmadd132_single(OP2[159:128], OP1[159:128], OP3[159:128]))) o (vfnmadd132_single(OP2[127:96], OP1[127:96], OP3[127:96]) o (vfnmadd132_single(OP2[95:64], OP1[95:64], OP3[95:64]) o (vfnmadd132_single(OP2[63:32], OP1[63:32], OP3[63:32]) o vfnmadd132_single(OP2[31:0], OP1[31:0], OP3[31:0])))))
(vfnmadd231sd xmm, xmm, m64) -> (OP1 = 0x0_128 o (OP1[127:64] o vfmsub132_double(vnfmsub132_double(0x0_64, OP2[63:0], 0x0_64), vnfmsub132_double(0x0_64, OP1[63:0], 0x0_64), OP3[63:0])))
(vfnmadd231sd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:64] o vfmsub132_double(vnfmsub132_double(0x0_64, OP2[63:0], 0x0_64), vnfmsub132_double(0x0_64, OP1[63:0], 0x0_64), OP3[63:0])))
(vfnmadd231ss xmm, xmm, m32) -> (OP1 = 0x0_128 o (OP1[127:32] o vfnmsub132_single(OP2[31:0], vfnmsub132_single(0x0_32, OP1[31:0], OP1[31:0]), OP3[31:0])))
(vfnmadd231ss xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:32] o vfnmsub132_single(OP2[31:0], vfnmsub132_single(0x0_32, OP1[31:0], OP1[31:0]), OP3[31:0])))
(vfnmsub132pd xmm, xmm, m128) -> (OP1 = 0x0_32 o (0x0_32 o 0x0_64) o (vnfmsub132_double(OP1[127:64], OP2[127:64], OP3[127:64]) o vnfmsub132_double(OP1[63:0], OP2[63:0], OP3[63:0])))
(vfnmsub132pd xmm, xmm, xmm) -> (OP1 = 0x0_32 o (0x0_32 o 0x0_64) o (vnfmsub132_double(OP1[127:64], OP2[127:64], OP3[127:64]) o vnfmsub132_double(OP1[63:0], OP2[63:0], OP3[63:0])))
(vfnmsub132pd ymm, ymm, m256) -> (OP1 = vnfmsub132_double(OP1[255:192], OP2[255:192], OP3[255:192]) o (vnfmsub132_double(OP1[191:128], OP2[191:128], OP3[191:128]) o (vnfmsub132_double(OP1[127:64], OP2[127:64], OP3[127:64]) o vnfmsub132_double(OP1[63:0], OP2[63:0], OP3[63:0]))))
(vfnmsub132pd ymm, ymm, ymm) -> (OP1 = vnfmsub132_double(OP1[255:192], OP2[255:192], OP3[255:192]) o (vnfmsub132_double(OP1[191:128], OP2[191:128], OP3[191:128]) o (vnfmsub132_double(OP1[127:64], OP2[127:64], OP3[127:64]) o vnfmsub132_double(OP1[63:0], OP2[63:0], OP3[63:0]))))
(vfnmsub132ps xmm, xmm, m128) -> (OP1 = 0x0_128 o (vfnmsub132_single(OP1[127:96], OP2[127:96], OP3[127:96]) o (vfnmsub132_single(OP1[95:64], OP2[95:64], OP3[95:64]) o (vfnmsub132_single(OP1[63:32], OP2[63:32], OP3[63:32]) o vfnmsub132_single(OP1[31:0], OP2[31:0], OP3[31:0])))))
(vfnmsub132ps xmm, xmm, xmm) -> (OP1 = 0x0_128 o (vfnmsub132_single(OP1[127:96], OP2[127:96], OP3[127:96]) o (vfnmsub132_single(OP1[95:64], OP2[95:64], OP3[95:64]) o (vfnmsub132_single(OP1[63:32], OP2[63:32], OP3[63:32]) o vfnmsub132_single(OP1[31:0], OP2[31:0], OP3[31:0])))))
(vfnmsub132ps ymm, ymm, m256) -> (OP1 = vfnmsub132_single(OP1[255:224], OP2[255:224], OP3[255:224]) o (vfnmsub132_single(OP1[223:192], OP2[223:192], OP3[223:192]) o (vfnmsub132_single(OP1[191:160], OP2[191:160], OP3[191:160]) o (vfnmsub132_single(OP1[159:128], OP2[159:128], OP3[159:128]) o (vfnmsub132_single(OP1[127:96], OP2[127:96], OP3[127:96]) o (vfnmsub132_single(OP1[95:64], OP2[95:64], OP3[95:64]) o (vfnmsub132_single(OP1[63:32], OP2[63:32], OP3[63:32]) o vfnmsub132_single(OP1[31:0], OP2[31:0], OP3[31:0]))))))))
(vfnmsub132ps ymm, ymm, ymm) -> (OP1 = vfnmsub132_single(OP1[255:224], OP2[255:224], OP3[255:224]) o (vfnmsub132_single(OP1[223:192], OP2[223:192], OP3[223:192]) o (vfnmsub132_single(OP1[191:160], OP2[191:160], OP3[191:160]) o (vfnmsub132_single(OP1[159:128], OP2[159:128], OP3[159:128]) o (vfnmsub132_single(OP1[127:96], OP2[127:96], OP3[127:96]) o (vfnmsub132_single(OP1[95:64], OP2[95:64], OP3[95:64]) o (vfnmsub132_single(OP1[63:32], OP2[63:32], OP3[63:32]) o vfnmsub132_single(OP1[31:0], OP2[31:0], OP3[31:0]))))))))
(vfnmsub132sd xmm, xmm, m64) -> (OP1 = 0x0_128 o (OP1[127:64] o vnfmsub132_double(OP1[63:0], OP2[63:0], OP3[63:0])))
(vfnmsub132sd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:64] o vnfmsub132_double(OP1[63:0], OP2[63:0], OP3[63:0])))
(vfnmsub132ss xmm, xmm, m32) -> (OP1 = 0x0_128 o (OP1[127:32] o vfnmsub132_single(OP1[31:0], OP2[31:0], OP3[31:0])))
(vfnmsub132ss xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:32] o vfnmsub132_single(OP1[31:0], OP2[31:0], OP3[31:0])))
(vfnmsub213pd xmm, xmm, m128) -> (OP1 = 0x0_128 o (vnfmsub132_double(OP2[127:64], OP3[127:64], OP1[127:64]) o vnfmsub132_double(OP2[63:0], OP3[63:0], OP1[63:0])))
(vfnmsub213pd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (vnfmsub132_double(OP2[127:64], OP3[127:64], OP1[127:64]) o vnfmsub132_double(OP2[63:0], OP3[63:0], OP1[63:0])))
(vfnmsub213pd ymm, ymm, m256) -> (OP1 = vnfmsub132_double(OP2[255:192], OP3[255:192], OP1[255:192]) o (vnfmsub132_double(OP2[191:128], OP3[191:128], OP1[191:128]) o (vnfmsub132_double(OP2[127:64], OP3[127:64], OP1[127:64]) o vnfmsub132_double(OP2[63:0], OP3[63:0], OP1[63:0]))))
(vfnmsub213pd ymm, ymm, ymm) -> (OP1 = vnfmsub132_double(OP2[255:192], OP3[255:192], OP1[255:192]) o (vnfmsub132_double(OP2[191:128], OP3[191:128], OP1[191:128]) o (vnfmsub132_double(OP2[127:64], OP3[127:64], OP1[127:64]) o vnfmsub132_double(OP2[63:0], OP3[63:0], OP1[63:0]))))
(vfnmsub213ps xmm, xmm, m128) -> (OP1 = 0x0_128 o (vfnmsub132_single(OP2[127:96], OP3[127:96], OP1[127:96]) o (vfnmsub132_single(OP2[95:64], OP3[95:64], OP1[95:64]) o (vfnmsub132_single(OP2[63:32], OP3[63:32], OP1[63:32]) o vfnmsub132_single(OP2[31:0], OP3[31:0], OP1[31:0])))))
(vfnmsub213ps xmm, xmm, xmm) -> (OP1 = 0x0_128 o (vfnmsub132_single(OP2[127:96], OP3[127:96], OP1[127:96]) o (vfnmsub132_single(OP2[95:64], OP3[95:64], OP1[95:64]) o (vfnmsub132_single(OP2[63:32], OP3[63:32], OP1[63:32]) o vfnmsub132_single(OP2[31:0], OP3[31:0], OP1[31:0])))))
(vfnmsub213ps ymm, ymm, m256) -> (OP1 = vfnmsub132_single(OP2[255:224], OP3[255:224], OP1[255:224]) o (vfnmsub132_single(OP2[223:192], OP3[223:192], OP1[223:192]) o (vfnmsub132_single(OP2[191:160], OP3[191:160], OP1[191:160]) o (vfnmsub132_single(OP2[159:128], OP3[159:128], OP1[159:128]) o (vfnmsub132_single(OP2[127:96], OP3[127:96], OP1[127:96]) o (vfnmsub132_single(OP2[95:64], OP3[95:64], OP1[95:64]) o (vfnmsub132_single(OP2[63:32], OP3[63:32], OP1[63:32]) o vfnmsub132_single(OP2[31:0], OP3[31:0], OP1[31:0]))))))))
(vfnmsub213ps ymm, ymm, ymm) -> (OP1 = vfnmsub132_single(OP2[255:224], OP3[255:224], OP1[255:224]) o (vfnmsub132_single(OP2[223:192], OP3[223:192], OP1[223:192]) o (vfnmsub132_single(OP2[191:160], OP3[191:160], OP1[191:160]) o (vfnmsub132_single(OP2[159:128], OP3[159:128], OP1[159:128]) o (vfnmsub132_single(OP2[127:96], OP3[127:96], OP1[127:96]) o (vfnmsub132_single(OP2[95:64], OP3[95:64], OP1[95:64]) o (vfnmsub132_single(OP2[63:32], OP3[63:32], OP1[63:32]) o vfnmsub132_single(OP2[31:0], OP3[31:0], OP1[31:0]))))))))
(vfnmsub213sd xmm, xmm, m64) -> (OP1 = 0x0_128 o ((OP1[127:64] ^ 0x0_64) o vfmsub132_double(vnfmsub132_double(mincmp_double(0x0_32 o OP2[95:64], 0x0_32 o OP2[31:0]) == 0x1_1 ? 0x0_32 o OP2[95:64] : 0x0_32 o OP2[31:0], OP2[63:0], mincmp_double(0x0_32 o OP2[95:64], 0x0_32 o OP2[31:0]) == 0x1_1 ? 0x0_32 o OP2[95:64] : 0x0_32 o OP2[31:0]), OP3[63:0], OP1[63:0])))
(vfnmsub213sd xmm, xmm, xmm) -> (OP1 = 0x0_128 o ((OP1[127:64] ^ 0x0_64) o vfmsub132_double(vnfmsub132_double(mincmp_double(0x0_32 o OP2[95:64], 0x0_32 o OP2[31:0]) == 0x1_1 ? 0x0_32 o OP2[95:64] : 0x0_32 o OP2[31:0], OP2[63:0], mincmp_double(0x0_32 o OP2[95:64], 0x0_32 o OP2[31:0]) == 0x1_1 ? 0x0_32 o OP2[95:64] : 0x0_32 o OP2[31:0]), OP3[63:0], OP1[63:0])))
(vfnmsub213ss xmm, xmm, m32) -> (OP1 = 0x0_128 o (OP1[127:32] o vfnmsub132_single(OP2[31:0], OP3[31:0], OP1[31:0])))
(vfnmsub213ss xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:32] o vfnmsub132_single(OP2[31:0], OP3[31:0], OP1[31:0])))
(vfnmsub231pd xmm, xmm, m128) -> (OP1 = 0x0_128 o (vnfmsub132_double(OP2[127:64], OP1[127:64], OP3[127:64]) o vnfmsub132_double(OP2[63:0], OP1[63:0], OP3[63:0])))
(vfnmsub231pd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (vnfmsub132_double(OP2[127:64], OP1[127:64], OP3[127:64]) o vnfmsub132_double(OP2[63:0], OP1[63:0], OP3[63:0])))
(vfnmsub231pd ymm, ymm, m256) -> (OP1 = vnfmsub132_double(OP2[255:192], OP1[255:192], OP3[255:192]) o (vnfmsub132_double(OP2[191:128], OP1[191:128], OP3[191:128]) o (vnfmsub132_double(OP2[127:64], OP1[127:64], OP3[127:64]) o vnfmsub132_double(OP2[63:0], OP1[63:0], OP3[63:0]))))
(vfnmsub231pd ymm, ymm, ymm) -> (OP1 = vnfmsub132_double(OP2[255:192], OP1[255:192], OP3[255:192]) o (vnfmsub132_double(OP2[191:128], OP1[191:128], OP3[191:128]) o (vnfmsub132_double(OP2[127:64], OP1[127:64], OP3[127:64]) o vnfmsub132_double(OP2[63:0], OP1[63:0], OP3[63:0]))))
(vfnmsub231ps xmm, xmm, m128) -> (OP1 = 0x0_128 o (vfnmsub132_single(OP2[127:96], OP1[127:96], OP3[127:96]) o (vfnmsub132_single(OP2[95:64], OP1[95:64], OP3[95:64]) o (vfnmsub132_single(OP2[63:32], OP1[63:32], OP3[63:32]) o vfnmsub132_single(OP2[31:0], OP1[31:0], OP3[31:0])))))
(vfnmsub231ps xmm, xmm, xmm) -> (OP1 = 0x0_128 o (vfnmsub132_single(OP2[127:96], OP1[127:96], OP3[127:96]) o (vfnmsub132_single(OP2[95:64], OP1[95:64], OP3[95:64]) o (vfnmsub132_single(OP2[63:32], OP1[63:32], OP3[63:32]) o vfnmsub132_single(OP2[31:0], OP1[31:0], OP3[31:0])))))
(vfnmsub231ps ymm, ymm, m256) -> (OP1 = vfnmsub132_single(OP2[255:224], OP1[255:224], OP3[255:224]) o (vfnmsub132_single(OP2[223:192], OP1[223:192], OP3[223:192]) o (vfnmsub132_single(OP2[191:160], OP1[191:160], OP3[191:160]) o vfnmsub132_single(OP2[159:128], OP1[159:128], OP3[159:128]))) o (vfnmsub132_single(OP2[127:96], OP1[127:96], OP3[127:96]) o (vfnmsub132_single(OP2[95:64], OP1[95:64], OP3[95:64]) o (vfnmsub132_single(OP2[63:32], OP1[63:32], OP3[63:32]) o vfnmsub132_single(OP2[31:0], OP1[31:0], OP3[31:0])))))
(vfnmsub231ps ymm, ymm, ymm) -> (OP1 = vfnmsub132_single(OP2[255:224], OP1[255:224], OP3[255:224]) o (vfnmsub132_single(OP2[223:192], OP1[223:192], OP3[223:192]) o (vfnmsub132_single(OP2[191:160], OP1[191:160], OP3[191:160]) o vfnmsub132_single(OP2[159:128], OP1[159:128], OP3[159:128]))) o (vfnmsub132_single(OP2[127:96], OP1[127:96], OP3[127:96]) o (vfnmsub132_single(OP2[95:64], OP1[95:64], OP3[95:64]) o (vfnmsub132_single(OP2[63:32], OP1[63:32], OP3[63:32]) o vfnmsub132_single(OP2[31:0], OP1[31:0], OP3[31:0])))))
(vfnmsub231sd xmm, xmm, m64) -> (OP1 = 0x0_128 o (OP1[127:64] o vfmsub132_double(vnfmsub132_double(mincmp_double(0x0_32 o OP2[95:64], 0x0_32 o OP2[31:0]) == 0x1_1 ? 0x0_32 o OP2[95:64] : 0x0_32 o OP2[31:0], OP2[63:0], mincmp_double(0x0_32 o OP2[95:64], 0x0_32 o OP2[31:0]) == 0x1_1 ? 0x0_32 o OP2[95:64] : 0x0_32 o OP2[31:0]), OP1[63:0], OP3[63:0])))
(vfnmsub231sd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:64] o vfmsub132_double(vnfmsub132_double(mincmp_double(0x0_32 o OP2[95:64], 0x0_32 o OP2[31:0]) == 0x1_1 ? 0x0_32 o OP2[95:64] : 0x0_32 o OP2[31:0], OP2[63:0], mincmp_double(0x0_32 o OP2[95:64], 0x0_32 o OP2[31:0]) == 0x1_1 ? 0x0_32 o OP2[95:64] : 0x0_32 o OP2[31:0]), OP1[63:0], OP3[63:0])))
(vfnmsub231ss xmm, xmm, m32) -> (OP1 = 0x0_128 o (OP1[127:32] o vfnmsub132_single(OP2[31:0], OP1[31:0], OP3[31:0])))
(vfnmsub231ss xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:32] o vfnmsub132_single(OP2[31:0], OP1[31:0], OP3[31:0])))
(vhaddpd xmm, xmm, m128) -> (OP1 = 0x0_128 o (add_double(OP3[63:0], OP3[127:64]) o add_double(OP2[63:0], OP2[127:64])))
(vhaddpd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (add_double(OP3[63:0], OP3[127:64]) o add_double(OP2[63:0], OP2[127:64])))
(vhaddpd ymm, ymm, m256) -> (OP1 = add_double(OP3[191:128], OP3[255:192]) o add_double(OP2[191:128], OP2[255:192]) o (add_double(OP3[63:0], OP3[127:64]) o add_double(OP2[63:0], OP2[127:64])))
(vhaddpd ymm, ymm, ymm) -> (OP1 = add_double(OP3[191:128], OP3[255:192]) o add_double(OP2[191:128], OP2[255:192]) o (add_double(OP3[63:0], OP3[127:64]) o add_double(OP2[63:0], OP2[127:64])))
(vhaddps xmm, xmm, m128) -> (OP1 = 0x0_128 o (add_single(OP3[95:64], OP3[127:96]) o add_single(OP3[31:0], OP3[63:32]) o add_single(OP2[95:64], OP2[127:96]) o add_single(OP2[31:0], OP2[63:32])))
(vhaddps xmm, xmm, xmm) -> (OP1 = 0x0_128 o (add_single(OP3[95:64], OP3[127:96]) o add_single(OP3[31:0], OP3[63:32]) o add_single(OP2[95:64], OP2[127:96]) o add_single(OP2[31:0], OP2[63:32])))
(vhaddps ymm, ymm, m256) -> (OP1 = add_single(OP3[223:192], OP3[255:224]) o add_single(OP3[159:128], OP3[191:160]) o add_single(OP2[223:192], OP2[255:224]) o add_single(OP2[159:128], OP2[191:160]) o (add_single(OP3[95:64], OP3[127:96]) o add_single(OP3[31:0], OP3[63:32]) o add_single(OP2[95:64], OP2[127:96]) o add_single(OP2[31:0], OP2[63:32])))
(vhaddps ymm, ymm, ymm) -> (OP1 = add_single(OP3[223:192], OP3[255:224]) o add_single(OP3[159:128], OP3[191:160]) o add_single(OP2[223:192], OP2[255:224]) o add_single(OP2[159:128], OP2[191:160]) o (add_single(OP3[95:64], OP3[127:96]) o add_single(OP3[31:0], OP3[63:32]) o add_single(OP2[95:64], OP2[127:96]) o add_single(OP2[31:0], OP2[63:32])))
(vhsubpd xmm, xmm, m128) -> (OP1 = 0x0_128 o (sub_double(OP3[63:0], OP3[127:64]) o sub_double(OP2[63:0], OP2[127:64])))
(vhsubpd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (sub_double(OP3[63:0], OP3[127:64]) o sub_double(OP2[63:0], OP2[127:64])))
(vhsubpd ymm, ymm, m256) -> (OP1 = sub_double(OP3[191:128], OP3[255:192]) o sub_double(OP2[191:128], OP2[255:192]) o (sub_double(OP3[63:0], OP3[127:64]) o sub_double(OP2[63:0], OP2[127:64])))
(vhsubpd ymm, ymm, ymm) -> (OP1 = sub_double(OP3[191:128], OP3[255:192]) o sub_double(OP2[191:128], OP2[255:192]) o (sub_double(OP3[63:0], OP3[127:64]) o sub_double(OP2[63:0], OP2[127:64])))
(vhsubps xmm, xmm, m128) -> (OP1 = 0x0_128 o (sub_single(OP3[95:64], OP3[127:96]) o sub_single(OP3[31:0], OP3[63:32]) o sub_single(OP2[95:64], OP2[127:96]) o sub_single(OP2[31:0], OP2[63:32])))
(vhsubps xmm, xmm, xmm) -> (OP1 = 0x0_128 o (sub_single(OP3[95:64], OP3[127:96]) o sub_single(OP3[31:0], OP3[63:32]) o sub_single(OP2[95:64], OP2[127:96]) o sub_single(OP2[31:0], OP2[63:32])))
(vhsubps ymm, ymm, m256) -> (OP1 = sub_single(OP3[223:192], OP3[255:224]) o sub_single(OP3[159:128], OP3[191:160]) o sub_single(OP2[223:192], OP2[255:224]) o sub_single(OP2[159:128], OP2[191:160]) o (sub_single(OP3[95:64], OP3[127:96]) o sub_single(OP3[31:0], OP3[63:32]) o sub_single(OP2[95:64], OP2[127:96]) o sub_single(OP2[31:0], OP2[63:32])))
(vhsubps ymm, ymm, ymm) -> (OP1 = sub_single(OP3[223:192], OP3[255:224]) o sub_single(OP3[159:128], OP3[191:160]) o sub_single(OP2[223:192], OP2[255:224]) o sub_single(OP2[159:128], OP2[191:160]) o (sub_single(OP3[95:64], OP3[127:96]) o sub_single(OP3[31:0], OP3[63:32]) o sub_single(OP2[95:64], OP2[127:96]) o sub_single(OP2[31:0], OP2[63:32])))
(vmaxpd xmm, xmm, m128) -> (OP1 = 0x0_128 o ((maxcmp_double(OP2[127:64], OP3[127:64]) == 0x1_1 ? OP2[127:64] : OP3[127:64]) o (maxcmp_double(OP2[63:0], OP3[63:0]) == 0x1_1 ? OP2[63:0] : OP3[63:0])))
(vmaxpd xmm, xmm, xmm) -> (OP1 = 0x0_128 o ((maxcmp_double(OP2[127:64], OP3[127:64]) == 0x1_1 ? OP2[127:64] : OP3[127:64]) o (maxcmp_double(OP2[63:0], OP3[63:0]) == 0x1_1 ? OP2[63:0] : OP3[63:0])))
(vmaxpd ymm, ymm, m256) -> (OP1 = (maxcmp_double(OP2[255:192], OP3[255:192]) == 0x1_1 ? OP2[255:192] : OP3[255:192]) o ((maxcmp_double(OP2[191:128], OP3[191:128]) == 0x1_1 ? OP2[191:128] : OP3[191:128]) o ((maxcmp_double(OP2[127:64], OP3[127:64]) == 0x1_1 ? OP2[127:64] : OP3[127:64]) o (maxcmp_double(OP2[63:0], OP3[63:0]) == 0x1_1 ? OP2[63:0] : OP3[63:0]))))
(vmaxpd ymm, ymm, ymm) -> (OP1 = (maxcmp_double(OP2[255:192], OP3[255:192]) == 0x1_1 ? OP2[255:192] : OP3[255:192]) o ((maxcmp_double(OP2[191:128], OP3[191:128]) == 0x1_1 ? OP2[191:128] : OP3[191:128]) o ((maxcmp_double(OP2[127:64], OP3[127:64]) == 0x1_1 ? OP2[127:64] : OP3[127:64]) o (maxcmp_double(OP2[63:0], OP3[63:0]) == 0x1_1 ? OP2[63:0] : OP3[63:0]))))
(vmaxps xmm, xmm, m128) -> (OP1 = 0x0_128 o ((maxcmp_single(OP2[127:96], OP3[127:96]) == 0x1_1 ? OP2[127:96] : OP3[127:96]) o ((maxcmp_single(OP2[95:64], OP3[95:64]) == 0x1_1 ? OP2[95:64] : OP3[95:64]) o ((maxcmp_single(OP2[63:32], OP3[63:32]) == 0x1_1 ? OP2[63:32] : OP3[63:32]) o (maxcmp_single(OP2[31:0], OP3[31:0]) == 0x1_1 ? OP2[31:0] : OP3[31:0])))))
(vmaxps xmm, xmm, xmm) -> (OP1 = 0x0_128 o ((maxcmp_single(OP2[127:96], OP3[127:96]) == 0x1_1 ? OP2[127:96] : OP3[127:96]) o ((maxcmp_single(OP2[95:64], OP3[95:64]) == 0x1_1 ? OP2[95:64] : OP3[95:64]) o ((maxcmp_single(OP2[63:32], OP3[63:32]) == 0x1_1 ? OP2[63:32] : OP3[63:32]) o (maxcmp_single(OP2[31:0], OP3[31:0]) == 0x1_1 ? OP2[31:0] : OP3[31:0])))))
(vmaxps ymm, ymm, m256) -> (OP1 = (maxcmp_single(OP2[255:224], OP3[255:224]) == 0x1_1 ? OP2[255:224] : OP3[255:224]) o ((maxcmp_single(OP2[223:192], OP3[223:192]) == 0x1_1 ? OP2[223:192] : OP3[223:192]) o ((maxcmp_single(OP2[191:160], OP3[191:160]) == 0x1_1 ? OP2[191:160] : OP3[191:160]) o ((maxcmp_single(OP2[159:128], OP3[159:128]) == 0x1_1 ? OP2[159:128] : OP3[159:128]) o ((maxcmp_single(OP2[127:96], OP3[127:96]) == 0x1_1 ? OP2[127:96] : OP3[127:96]) o ((maxcmp_single(OP2[95:64], OP3[95:64]) == 0x1_1 ? OP2[95:64] : OP3[95:64]) o ((maxcmp_single(OP2[63:32], OP3[63:32]) == 0x1_1 ? OP2[63:32] : OP3[63:32]) o (maxcmp_single(OP2[31:0], OP3[31:0]) == 0x1_1 ? OP2[31:0] : OP3[31:0]))))))))
(vmaxps ymm, ymm, ymm) -> (OP1 = (maxcmp_single(OP2[255:224], OP3[255:224]) == 0x1_1 ? OP2[255:224] : OP3[255:224]) o ((maxcmp_single(OP2[223:192], OP3[223:192]) == 0x1_1 ? OP2[223:192] : OP3[223:192]) o ((maxcmp_single(OP2[191:160], OP3[191:160]) == 0x1_1 ? OP2[191:160] : OP3[191:160]) o ((maxcmp_single(OP2[159:128], OP3[159:128]) == 0x1_1 ? OP2[159:128] : OP3[159:128]) o ((maxcmp_single(OP2[127:96], OP3[127:96]) == 0x1_1 ? OP2[127:96] : OP3[127:96]) o ((maxcmp_single(OP2[95:64], OP3[95:64]) == 0x1_1 ? OP2[95:64] : OP3[95:64]) o ((maxcmp_single(OP2[63:32], OP3[63:32]) == 0x1_1 ? OP2[63:32] : OP3[63:32]) o (maxcmp_single(OP2[31:0], OP3[31:0]) == 0x1_1 ? OP2[31:0] : OP3[31:0]))))))))
(vmaxsd xmm, xmm, m64) -> (OP1 = 0x0_128 o (OP2[127:64] o (maxcmp_double(OP2[63:0], OP3[63:0]) == 0x1_1 ? OP2[63:0] : OP3[63:0])))
(vmaxsd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP2[127:64] o (maxcmp_double(OP2[63:0], OP3[63:0]) == 0x1_1 ? OP2[63:0] : OP3[63:0])))
(vmaxss xmm, xmm, m32) -> (OP1 = 0x0_128 o (OP2[127:32] o (maxcmp_single(OP2[31:0], OP3[31:0]) == 0x1_1 ? OP2[31:0] : OP3[31:0])))
(vmaxss xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP2[127:32] o (maxcmp_single(OP2[31:0], OP3[31:0]) == 0x1_1 ? OP2[31:0] : OP3[31:0])))
(vminpd xmm, xmm, m128) -> (OP1 = 0x0_128 o ((mincmp_double(OP2[127:64], OP3[127:64]) == 0x1_1 ? OP2[127:64] : OP3[127:64]) o (mincmp_double(OP2[63:0], OP3[63:0]) == 0x1_1 ? OP2[63:0] : OP3[63:0])))
(vminpd xmm, xmm, xmm) -> (OP1 = 0x0_128 o ((mincmp_double(OP2[127:64], OP3[127:64]) == 0x1_1 ? OP2[127:64] : OP3[127:64]) o (mincmp_double(OP2[63:0], OP3[63:0]) == 0x1_1 ? OP2[63:0] : OP3[63:0])))
(vminpd ymm, ymm, m256) -> (OP1 = (mincmp_double(OP2[255:192], OP3[255:192]) == 0x1_1 ? OP2[255:192] : OP3[255:192]) o ((mincmp_double(OP2[191:128], OP3[191:128]) == 0x1_1 ? OP2[191:128] : OP3[191:128]) o ((mincmp_double(OP2[127:64], OP3[127:64]) == 0x1_1 ? OP2[127:64] : OP3[127:64]) o (mincmp_double(OP2[63:0], OP3[63:0]) == 0x1_1 ? OP2[63:0] : OP3[63:0]))))
(vminpd ymm, ymm, ymm) -> (OP1 = (mincmp_double(OP2[255:192], OP3[255:192]) == 0x1_1 ? OP2[255:192] : OP3[255:192]) o ((mincmp_double(OP2[191:128], OP3[191:128]) == 0x1_1 ? OP2[191:128] : OP3[191:128]) o ((mincmp_double(OP2[127:64], OP3[127:64]) == 0x1_1 ? OP2[127:64] : OP3[127:64]) o (mincmp_double(OP2[63:0], OP3[63:0]) == 0x1_1 ? OP2[63:0] : OP3[63:0]))))
(vminps xmm, xmm, m128) -> (OP1 = 0x0_128 o ((mincmp_single(OP2[127:96], OP3[127:96]) == 0x1_1 ? OP2[127:96] : OP3[127:96]) o ((mincmp_single(OP2[95:64], OP3[95:64]) == 0x1_1 ? OP2[95:64] : OP3[95:64]) o ((mincmp_single(OP2[63:32], OP3[63:32]) == 0x1_1 ? OP2[63:32] : OP3[63:32]) o (mincmp_single(OP2[31:0], OP3[31:0]) == 0x1_1 ? OP2[31:0] : OP3[31:0])))))
(vminps xmm, xmm, xmm) -> (OP1 = 0x0_128 o ((mincmp_single(OP2[127:96], OP3[127:96]) == 0x1_1 ? OP2[127:96] : OP3[127:96]) o ((mincmp_single(OP2[95:64], OP3[95:64]) == 0x1_1 ? OP2[95:64] : OP3[95:64]) o ((mincmp_single(OP2[63:32], OP3[63:32]) == 0x1_1 ? OP2[63:32] : OP3[63:32]) o (mincmp_single(OP2[31:0], OP3[31:0]) == 0x1_1 ? OP2[31:0] : OP3[31:0])))))
(vminps ymm, ymm, m256) -> (OP1 = (mincmp_single(OP2[255:224], OP3[255:224]) == 0x1_1 ? OP2[255:224] : OP3[255:224]) o ((mincmp_single(OP2[223:192], OP3[223:192]) == 0x1_1 ? OP2[223:192] : OP3[223:192]) o ((mincmp_single(OP2[191:160], OP3[191:160]) == 0x1_1 ? OP2[191:160] : OP3[191:160]) o ((mincmp_single(OP2[159:128], OP3[159:128]) == 0x1_1 ? OP2[159:128] : OP3[159:128]) o ((mincmp_single(OP2[127:96], OP3[127:96]) == 0x1_1 ? OP2[127:96] : OP3[127:96]) o ((mincmp_single(OP2[95:64], OP3[95:64]) == 0x1_1 ? OP2[95:64] : OP3[95:64]) o ((mincmp_single(OP2[63:32], OP3[63:32]) == 0x1_1 ? OP2[63:32] : OP3[63:32]) o (mincmp_single(OP2[31:0], OP3[31:0]) == 0x1_1 ? OP2[31:0] : OP3[31:0]))))))))
(vminps ymm, ymm, ymm) -> (OP1 = (mincmp_single(OP2[255:224], OP3[255:224]) == 0x1_1 ? OP2[255:224] : OP3[255:224]) o ((mincmp_single(OP2[223:192], OP3[223:192]) == 0x1_1 ? OP2[223:192] : OP3[223:192]) o ((mincmp_single(OP2[191:160], OP3[191:160]) == 0x1_1 ? OP2[191:160] : OP3[191:160]) o ((mincmp_single(OP2[159:128], OP3[159:128]) == 0x1_1 ? OP2[159:128] : OP3[159:128]) o ((mincmp_single(OP2[127:96], OP3[127:96]) == 0x1_1 ? OP2[127:96] : OP3[127:96]) o ((mincmp_single(OP2[95:64], OP3[95:64]) == 0x1_1 ? OP2[95:64] : OP3[95:64]) o ((mincmp_single(OP2[63:32], OP3[63:32]) == 0x1_1 ? OP2[63:32] : OP3[63:32]) o (mincmp_single(OP2[31:0], OP3[31:0]) == 0x1_1 ? OP2[31:0] : OP3[31:0]))))))))
(vminsd xmm, xmm, m64) -> (OP1 = 0x0_128 o (OP2[127:64] o (mincmp_double(OP2[63:0], OP3[63:0]) == 0x1_1 ? OP2[63:0] : OP3[63:0])))
(vminsd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP2[127:64] o (mincmp_double(OP2[63:0], OP3[63:0]) == 0x1_1 ? OP2[63:0] : OP3[63:0])))
(vminss xmm, xmm, m32) -> (OP1 = 0x0_128 o (OP2[127:32] o (mincmp_single(OP2[31:0], OP3[31:0]) == 0x1_1 ? OP2[31:0] : OP3[31:0])))
(vminss xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP2[127:32] o (mincmp_single(OP2[31:0], OP3[31:0]) == 0x1_1 ? OP2[31:0] : OP3[31:0])))
(vmovapd m128, xmm) -> (OP1 = (0x0_128 o OP2[127:0])[127:0])
(vmovapd m256, ymm) -> (OP1 = (OP2)[255:0])
(vmovapd xmm, m128) -> (OP1 = 0x0_128 o OP2[127:0])
(vmovapd xmm, xmm) -> (OP1 = 0x0_128 o OP2[127:0])
(vmovapd ymm, m256) -> (OP1 = OP2)
(vmovapd ymm, ymm) -> (OP1 = OP2)
(vmovaps m128, xmm) -> (OP1 = (0x0_128 o OP2[127:0])[127:0])
(vmovaps m256, ymm) -> (OP1 = (OP2)[255:0])
(vmovaps xmm, m128) -> (OP1 = 0x0_128 o OP2[127:0])
(vmovaps xmm, xmm) -> (OP1 = 0x0_128 o OP2[127:0])
(vmovaps ymm, m256) -> (OP1 = OP2)
(vmovaps ymm, ymm) -> (OP1 = OP2)
(vmovd r32, xmm) -> (OP1 = 0x0_32 o OP2[31:0])
(vmovd m32, xmm) -> (OP1 = (0x0_32 o OP2[31:0])[31:0])
(vmovd xmm, r32) -> (OP1 = 0x0_224 o OP2[31:24] o OP2[23:0])
(vmovd xmm, m32) -> (OP1 = 0x0_224 o OP2[31:24] o OP2[23:0])
(vmovddup xmm, m64) -> (OP1 = 0x0_128 o (OP2[63:0] o OP2[63:0]))
(vmovddup xmm, xmm) -> (OP1 = 0x0_128 o (OP2[63:0] o OP2[63:0]))
(vmovddup ymm, m256) -> (OP1 = OP2[191:128] o OP2[191:128] o (OP2[63:0] o OP2[63:0]))
(vmovddup ymm, ymm) -> (OP1 = OP2[191:128] o OP2[191:128] o (OP2[63:0] o OP2[63:0]))
(vmovdqa m128, xmm) -> (OP1 = (0x0_128 o OP2[127:0])[127:0])
(vmovdqa m256, ymm) -> (OP1 = (OP2)[255:0])
(vmovdqa xmm, m128) -> (OP1 = 0x0_128 o OP2[127:0])
(vmovdqa xmm, xmm) -> (OP1 = 0x0_128 o OP2[127:0])
(vmovdqa ymm, m256) -> (OP1 = OP2)
(vmovdqa ymm, ymm) -> (OP1 = OP2)
(vmovdqu m128, xmm) -> (OP1 = (0x0_128 o OP2[127:0])[127:0])
(vmovdqu m256, ymm) -> (OP1 = (OP2)[255:0])
(vmovdqu xmm, m128) -> (OP1 = 0x0_128 o OP2[127:0])
(vmovdqu xmm, xmm) -> (OP1 = 0x0_128 o OP2[127:0])
(vmovdqu ymm, m256) -> (OP1 = OP2)
(vmovdqu ymm, ymm) -> (OP1 = OP2)
(vmovhlps xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP2[127:64] o OP3[127:64]))
(vmovlhps xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP3[63:0] o OP2[63:0]))
(vmovmskpd r32, xmm) -> (OP1 = 0x0_32 o (((((0x0_1 o OP2[63:32] + 0x0_1 o OP2[63:32])[32:32] == 0x1_1 ? 0x0_1 o OP2[63:32] + 0x1_33 : 0x0_1 o OP2[63:32]) + 0x0_1 o OP2[63:32])[32:32] == 0x1_1 ? (((0x0_1 o OP2[127:96] + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x0_1 o OP2[127:96] + 0x1_33 : 0x0_1 o OP2[127:96]) + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o OP2[127:96] + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x0_1 o OP2[127:96] + 0x1_33 : 0x0_1 o OP2[127:96]) + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o OP2[127:96] + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x0_1 o OP2[127:96] + 0x1_33 : 0x0_1 o OP2[127:96]) + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[31:0])
(vmovmskpd r32, ymm) -> (OP1 = 0x0_48 o (0x0_1 o ((((((0x0_1 o OP2[191:160] + 0x0_1 o OP2[191:160])[32:32] == 0x1_1 ? 0x0_1 o OP2[191:160] + 0x1_33 : 0x0_1 o OP2[191:160]) + 0x0_1 o OP2[191:160])[32:32] == 0x1_1 ? (((0x0_1 o OP2[255:224] + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x0_1 o OP2[255:224] + 0x1_33 : 0x0_1 o OP2[255:224]) + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o OP2[255:224] + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x0_1 o OP2[255:224] + 0x1_33 : 0x0_1 o OP2[255:224]) + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o OP2[255:224] + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x0_1 o OP2[255:224] + 0x1_33 : 0x0_1 o OP2[255:224]) + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[15:8] o (0x0_1 o (0x0_1 o (((((0x0_1 o OP2[191:160] + 0x0_1 o OP2[191:160])[32:32] == 0x1_1 ? 0x0_1 o OP2[191:160] + 0x1_33 : 0x0_1 o OP2[191:160]) + 0x0_1 o OP2[191:160])[32:32] == 0x1_1 ? (((0x0_1 o OP2[255:224] + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x0_1 o OP2[255:224] + 0x1_33 : 0x0_1 o OP2[255:224]) + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o OP2[255:224] + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x0_1 o OP2[255:224] + 0x1_33 : 0x0_1 o OP2[255:224]) + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o OP2[255:224] + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x0_1 o OP2[255:224] + 0x1_33 : 0x0_1 o OP2[255:224]) + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[7:0] + 0x0_1 o (((((0x0_1 o OP2[191:160] + 0x0_1 o OP2[191:160])[32:32] == 0x1_1 ? 0x0_1 o OP2[191:160] + 0x1_33 : 0x0_1 o OP2[191:160]) + 0x0_1 o OP2[191:160])[32:32] == 0x1_1 ? (((0x0_1 o OP2[255:224] + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x0_1 o OP2[255:224] + 0x1_33 : 0x0_1 o OP2[255:224]) + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o OP2[255:224] + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x0_1 o OP2[255:224] + 0x1_33 : 0x0_1 o OP2[255:224]) + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o OP2[255:224] + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x0_1 o OP2[255:224] + 0x1_33 : 0x0_1 o OP2[255:224]) + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[7:0])[7:0] + 0x0_1 o (((((0x0_1 o OP2[63:32] + 0x0_1 o OP2[63:32])[32:32] == 0x1_1 ? 0x0_1 o OP2[63:32] + 0x1_33 : 0x0_1 o OP2[63:32]) + 0x0_1 o OP2[63:32])[32:32] == 0x1_1 ? (((0x0_1 o OP2[127:96] + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x0_1 o OP2[127:96] + 0x1_33 : 0x0_1 o OP2[127:96]) + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o OP2[127:96] + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x0_1 o OP2[127:96] + 0x1_33 : 0x0_1 o OP2[127:96]) + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o OP2[127:96] + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x0_1 o OP2[127:96] + 0x1_33 : 0x0_1 o OP2[127:96]) + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[7:0])[7:0]) + 0x0_1 o ((((((0x0_1 o OP2[63:32] + 0x0_1 o OP2[63:32])[32:32] == 0x1_1 ? 0x0_1 o OP2[63:32] + 0x1_33 : 0x0_1 o OP2[63:32]) + 0x0_1 o OP2[63:32])[32:32] == 0x1_1 ? (((0x0_1 o OP2[127:96] + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x0_1 o OP2[127:96] + 0x1_33 : 0x0_1 o OP2[127:96]) + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o OP2[127:96] + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x0_1 o OP2[127:96] + 0x1_33 : 0x0_1 o OP2[127:96]) + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o OP2[127:96] + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x0_1 o OP2[127:96] + 0x1_33 : 0x0_1 o OP2[127:96]) + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[15:8] o (0x0_1 o (((((0x0_1 o OP2[191:160] + 0x0_1 o OP2[191:160])[32:32] == 0x1_1 ? 0x0_1 o OP2[191:160] + 0x1_33 : 0x0_1 o OP2[191:160]) + 0x0_1 o OP2[191:160])[32:32] == 0x1_1 ? (((0x0_1 o OP2[255:224] + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x0_1 o OP2[255:224] + 0x1_33 : 0x0_1 o OP2[255:224]) + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o OP2[255:224] + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x0_1 o OP2[255:224] + 0x1_33 : 0x0_1 o OP2[255:224]) + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o OP2[255:224] + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x0_1 o OP2[255:224] + 0x1_33 : 0x0_1 o OP2[255:224]) + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[7:0] + 0x0_1 o (((((0x0_1 o OP2[191:160] + 0x0_1 o OP2[191:160])[32:32] == 0x1_1 ? 0x0_1 o OP2[191:160] + 0x1_33 : 0x0_1 o OP2[191:160]) + 0x0_1 o OP2[191:160])[32:32] == 0x1_1 ? (((0x0_1 o OP2[255:224] + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x0_1 o OP2[255:224] + 0x1_33 : 0x0_1 o OP2[255:224]) + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o OP2[255:224] + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x0_1 o OP2[255:224] + 0x1_33 : 0x0_1 o OP2[255:224]) + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o OP2[255:224] + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x0_1 o OP2[255:224] + 0x1_33 : 0x0_1 o OP2[255:224]) + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[7:0])[7:0]))[15:0])
(vmovmskpd r64, xmm) -> (OP1 = 0x0_32 o (((((0x0_1 o OP2[63:32] + 0x0_1 o OP2[63:32])[32:32] == 0x1_1 ? 0x0_1 o OP2[63:32] + 0x1_33 : 0x0_1 o OP2[63:32]) + 0x0_1 o OP2[63:32])[32:32] == 0x1_1 ? (((0x0_1 o OP2[127:96] + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x0_1 o OP2[127:96] + 0x1_33 : 0x0_1 o OP2[127:96]) + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o OP2[127:96] + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x0_1 o OP2[127:96] + 0x1_33 : 0x0_1 o OP2[127:96]) + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o OP2[127:96] + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x0_1 o OP2[127:96] + 0x1_33 : 0x0_1 o OP2[127:96]) + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[31:0])
(vmovmskpd r64, ymm) -> (OP1 = 0x0_32 o (((((0x0_1 o OP2[63:32] + 0x0_1 o OP2[63:32])[32:32] == 0x1_1 ? 0x0_1 o OP2[63:32] + 0x1_33 : 0x0_1 o OP2[63:32]) + 0x0_1 o OP2[63:32])[32:32] == 0x1_1 ? (((0x0_1 o OP2[127:96] + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x0_1 o OP2[127:96] + 0x1_33 : 0x0_1 o OP2[127:96]) + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o OP2[127:96] + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x0_1 o OP2[127:96] + 0x1_33 : 0x0_1 o OP2[127:96]) + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o OP2[127:96] + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x0_1 o OP2[127:96] + 0x1_33 : 0x0_1 o OP2[127:96]) + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[31:16] o (0x0_1 o ((((((0x0_1 o OP2[191:160] + 0x0_1 o OP2[191:160])[32:32] == 0x1_1 ? 0x0_1 o OP2[191:160] + 0x1_33 : 0x0_1 o OP2[191:160]) + 0x0_1 o OP2[191:160])[32:32] == 0x1_1 ? (((0x0_1 o OP2[255:224] + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x0_1 o OP2[255:224] + 0x1_33 : 0x0_1 o OP2[255:224]) + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o OP2[255:224] + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x0_1 o OP2[255:224] + 0x1_33 : 0x0_1 o OP2[255:224]) + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o OP2[255:224] + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x0_1 o OP2[255:224] + 0x1_33 : 0x0_1 o OP2[255:224]) + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[15:8] o (0x0_1 o (0x0_1 o (((((0x0_1 o OP2[191:160] + 0x0_1 o OP2[191:160])[32:32] == 0x1_1 ? 0x0_1 o OP2[191:160] + 0x1_33 : 0x0_1 o OP2[191:160]) + 0x0_1 o OP2[191:160])[32:32] == 0x1_1 ? (((0x0_1 o OP2[255:224] + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x0_1 o OP2[255:224] + 0x1_33 : 0x0_1 o OP2[255:224]) + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o OP2[255:224] + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x0_1 o OP2[255:224] + 0x1_33 : 0x0_1 o OP2[255:224]) + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o OP2[255:224] + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x0_1 o OP2[255:224] + 0x1_33 : 0x0_1 o OP2[255:224]) + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[7:0] + 0x0_1 o (((((0x0_1 o OP2[191:160] + 0x0_1 o OP2[191:160])[32:32] == 0x1_1 ? 0x0_1 o OP2[191:160] + 0x1_33 : 0x0_1 o OP2[191:160]) + 0x0_1 o OP2[191:160])[32:32] == 0x1_1 ? (((0x0_1 o OP2[255:224] + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x0_1 o OP2[255:224] + 0x1_33 : 0x0_1 o OP2[255:224]) + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o OP2[255:224] + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x0_1 o OP2[255:224] + 0x1_33 : 0x0_1 o OP2[255:224]) + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o OP2[255:224] + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x0_1 o OP2[255:224] + 0x1_33 : 0x0_1 o OP2[255:224]) + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[7:0])[7:0] + 0x0_1 o (((((0x0_1 o OP2[63:32] + 0x0_1 o OP2[63:32])[32:32] == 0x1_1 ? 0x0_1 o OP2[63:32] + 0x1_33 : 0x0_1 o OP2[63:32]) + 0x0_1 o OP2[63:32])[32:32] == 0x1_1 ? (((0x0_1 o OP2[127:96] + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x0_1 o OP2[127:96] + 0x1_33 : 0x0_1 o OP2[127:96]) + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o OP2[127:96] + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x0_1 o OP2[127:96] + 0x1_33 : 0x0_1 o OP2[127:96]) + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o OP2[127:96] + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x0_1 o OP2[127:96] + 0x1_33 : 0x0_1 o OP2[127:96]) + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[7:0])[7:0]) + 0x0_1 o ((((((0x0_1 o OP2[63:32] + 0x0_1 o OP2[63:32])[32:32] == 0x1_1 ? 0x0_1 o OP2[63:32] + 0x1_33 : 0x0_1 o OP2[63:32]) + 0x0_1 o OP2[63:32])[32:32] == 0x1_1 ? (((0x0_1 o OP2[127:96] + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x0_1 o OP2[127:96] + 0x1_33 : 0x0_1 o OP2[127:96]) + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o OP2[127:96] + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x0_1 o OP2[127:96] + 0x1_33 : 0x0_1 o OP2[127:96]) + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o OP2[127:96] + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x0_1 o OP2[127:96] + 0x1_33 : 0x0_1 o OP2[127:96]) + 0x0_1 o OP2[127:96])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[15:8] o (0x0_1 o (((((0x0_1 o OP2[191:160] + 0x0_1 o OP2[191:160])[32:32] == 0x1_1 ? 0x0_1 o OP2[191:160] + 0x1_33 : 0x0_1 o OP2[191:160]) + 0x0_1 o OP2[191:160])[32:32] == 0x1_1 ? (((0x0_1 o OP2[255:224] + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x0_1 o OP2[255:224] + 0x1_33 : 0x0_1 o OP2[255:224]) + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o OP2[255:224] + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x0_1 o OP2[255:224] + 0x1_33 : 0x0_1 o OP2[255:224]) + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o OP2[255:224] + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x0_1 o OP2[255:224] + 0x1_33 : 0x0_1 o OP2[255:224]) + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[7:0] + 0x0_1 o (((((0x0_1 o OP2[191:160] + 0x0_1 o OP2[191:160])[32:32] == 0x1_1 ? 0x0_1 o OP2[191:160] + 0x1_33 : 0x0_1 o OP2[191:160]) + 0x0_1 o OP2[191:160])[32:32] == 0x1_1 ? (((0x0_1 o OP2[255:224] + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x0_1 o OP2[255:224] + 0x1_33 : 0x0_1 o OP2[255:224]) + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o OP2[255:224] + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x0_1 o OP2[255:224] + 0x1_33 : 0x0_1 o OP2[255:224]) + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o OP2[255:224] + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x0_1 o OP2[255:224] + 0x1_33 : 0x0_1 o OP2[255:224]) + 0x0_1 o OP2[255:224])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[7:0])[7:0]))[15:0])
(vmovmskps r32, xmm) -> (OP1 = 0x0_32 o (((((0x0_1 o sign-extend-64(OP2[31:0])[63:32] + 0x0_1 o sign-extend-64(OP2[31:0])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[31:0])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[31:0])[63:32]) + 0x0_1 o sign-extend-64(OP2[31:0])[63:32])[32:32] == 0x1_1 ? (((0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[63:32])[63:32]) + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[63:32])[63:32]) + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[63:32])[63:32]) + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[31:16] o (0x0_1 o ((((((0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[95:64])[63:32]) + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[15:8] o (0x0_1 o (0x0_1 o (((((0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[95:64])[63:32]) + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[7:0] + 0x0_1 o (((((0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[95:64])[63:32]) + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[7:0])[7:0] + 0x0_1 o (((((0x0_1 o sign-extend-64(OP2[31:0])[63:32] + 0x0_1 o sign-extend-64(OP2[31:0])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[31:0])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[31:0])[63:32]) + 0x0_1 o sign-extend-64(OP2[31:0])[63:32])[32:32] == 0x1_1 ? (((0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[63:32])[63:32]) + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[63:32])[63:32]) + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[63:32])[63:32]) + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[7:0])[7:0]) + 0x0_1 o ((((((0x0_1 o sign-extend-64(OP2[31:0])[63:32] + 0x0_1 o sign-extend-64(OP2[31:0])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[31:0])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[31:0])[63:32]) + 0x0_1 o sign-extend-64(OP2[31:0])[63:32])[32:32] == 0x1_1 ? (((0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[63:32])[63:32]) + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[63:32])[63:32]) + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[63:32])[63:32]) + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[15:8] o (0x0_1 o (((((0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[95:64])[63:32]) + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[7:0] + 0x0_1 o (((((0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[95:64])[63:32]) + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[7:0])[7:0]))[15:0])
(vmovmskps r64, xmm) -> (OP1 = 0x0_32 o (((((0x0_1 o sign-extend-64(OP2[31:0])[63:32] + 0x0_1 o sign-extend-64(OP2[31:0])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[31:0])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[31:0])[63:32]) + 0x0_1 o sign-extend-64(OP2[31:0])[63:32])[32:32] == 0x1_1 ? (((0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[63:32])[63:32]) + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[63:32])[63:32]) + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[63:32])[63:32]) + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[31:16] o (0x0_1 o ((((((0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[95:64])[63:32]) + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[15:8] o (0x0_1 o (0x0_1 o (((((0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[95:64])[63:32]) + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[7:0] + 0x0_1 o (((((0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[95:64])[63:32]) + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[7:0])[7:0] + 0x0_1 o (((((0x0_1 o sign-extend-64(OP2[31:0])[63:32] + 0x0_1 o sign-extend-64(OP2[31:0])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[31:0])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[31:0])[63:32]) + 0x0_1 o sign-extend-64(OP2[31:0])[63:32])[32:32] == 0x1_1 ? (((0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[63:32])[63:32]) + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[63:32])[63:32]) + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[63:32])[63:32]) + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[7:0])[7:0]) + 0x0_1 o ((((((0x0_1 o sign-extend-64(OP2[31:0])[63:32] + 0x0_1 o sign-extend-64(OP2[31:0])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[31:0])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[31:0])[63:32]) + 0x0_1 o sign-extend-64(OP2[31:0])[63:32])[32:32] == 0x1_1 ? (((0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[63:32])[63:32]) + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[63:32])[63:32]) + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[63:32])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[63:32])[63:32]) + 0x0_1 o sign-extend-64(OP2[63:32])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[15:8] o (0x0_1 o (((((0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[95:64])[63:32]) + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[7:0] + 0x0_1 o (((((0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[95:64])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[95:64])[63:32]) + 0x0_1 o sign-extend-64(OP2[95:64])[63:32])[32:32] == 0x1_1 ? (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x2_33 : 0x1_33 : (((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33) + ((((0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x0_1 o sign-extend-64(OP2[127:96])[63:32] + 0x1_33 : 0x0_1 o sign-extend-64(OP2[127:96])[63:32]) + 0x0_1 o sign-extend-64(OP2[127:96])[63:32])[32:32] == 0x1_1 ? 0x1_33 : 0x0_33))[7:0])[7:0]))[15:0])
(vmovq r64, xmm) -> (OP1 = OP2[63:0])
(vmovq m64, xmm) -> (OP1 = (OP2[63:0])[63:0])
(vmovq xmm, r64) -> (OP1 = 0x0_128 o (0x0_64 o (0x0_64 ^ OP2)))
(vmovq xmm, m64) -> (OP1 = 0x0_128 o (0x0_64 o (0x0_64 ^ OP2)))
(vmovq xmm, xmm) -> (OP1 = 0x0_128 o (0x0_64 o OP2[63:0]))
(vmovsd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP2[127:64] o OP3[63:0]))
(vmovshdup xmm, m128) -> (OP1 = 0x0_128 o (OP2[127:96] o OP2[127:96] o (OP2[63:32] o OP2[63:32])))
(vmovshdup xmm, xmm) -> (OP1 = 0x0_128 o (OP2[127:96] o OP2[127:96] o (OP2[63:32] o OP2[63:32])))
(vmovshdup ymm, m256) -> (OP1 = OP2[255:224] o OP2[255:224] o (OP2[191:160] o OP2[191:160]) o (OP2[127:96] o OP2[127:96] o (OP2[63:32] o OP2[63:32])))
(vmovshdup ymm, ymm) -> (OP1 = OP2[255:224] o OP2[255:224] o (OP2[191:160] o OP2[191:160]) o (OP2[127:96] o OP2[127:96] o (OP2[63:32] o OP2[63:32])))
(vmovsldup xmm, m128) -> (OP1 = 0x0_128 o (OP2[95:64] o OP2[95:64] o (OP2[31:0] o OP2[31:0])))
(vmovsldup xmm, xmm) -> (OP1 = 0x0_128 o (OP2[95:64] o OP2[95:64] o (OP2[31:0] o OP2[31:0])))
(vmovsldup ymm, m256) -> (OP1 = OP2[223:192] o OP2[223:192] o (OP2[159:128] o OP2[159:128]) o (OP2[95:64] o OP2[95:64] o (OP2[31:0] o OP2[31:0])))
(vmovsldup ymm, ymm) -> (OP1 = OP2[223:192] o OP2[223:192] o (OP2[159:128] o OP2[159:128]) o (OP2[95:64] o OP2[95:64] o (OP2[31:0] o OP2[31:0])))
(vmovss xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP2[127:32] o OP3[31:0]))
(vmovupd m128, xmm) -> (OP1 = (0x0_128 o OP2[127:0])[127:0])
(vmovupd m256, ymm) -> (OP1 = (OP2)[255:0])
(vmovupd xmm, m128) -> (OP1 = 0x0_128 o OP2[127:0])
(vmovupd xmm, xmm) -> (OP1 = 0x0_128 o OP2[127:0])
(vmovupd ymm, m256) -> (OP1 = OP2)
(vmovupd ymm, ymm) -> (OP1 = OP2)
(vmovups m128, xmm) -> (OP1 = (0x0_128 o OP2[127:0])[127:0])
(vmovups m256, ymm) -> (OP1 = (OP2)[255:0])
(vmovups xmm, m128) -> (OP1 = 0x0_128 o OP2[127:0])
(vmovups xmm, xmm) -> (OP1 = 0x0_128 o OP2[127:0])
(vmovups ymm, m256) -> (OP1 = OP2)
(vmovups ymm, ymm) -> (OP1 = OP2)
(vmulpd xmm, xmm, m128) -> (OP1 = 0x0_128 o (mul_double(OP2[127:64], OP3[127:64]) o mul_double(OP2[63:0], OP3[63:0])))
(vmulpd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (mul_double(OP2[127:64], OP3[127:64]) o mul_double(OP2[63:0], OP3[63:0])))
(vmulpd ymm, ymm, m256) -> (OP1 = mul_double(OP2[255:192], OP3[255:192]) o (mul_double(OP2[191:128], OP3[191:128]) o (mul_double(OP2[127:64], OP3[127:64]) o mul_double(OP2[63:0], OP3[63:0]))))
(vmulpd ymm, ymm, ymm) -> (OP1 = mul_double(OP2[255:192], OP3[255:192]) o (mul_double(OP2[191:128], OP3[191:128]) o (mul_double(OP2[127:64], OP3[127:64]) o mul_double(OP2[63:0], OP3[63:0]))))
(vmulps xmm, xmm, m128) -> (OP1 = 0x0_128 o (mul_single(OP2[127:96], OP3[127:96]) o (mul_single(OP2[95:64], OP3[95:64]) o (mul_single(OP2[63:32], OP3[63:32]) o mul_single(OP2[31:0], OP3[31:0])))))
(vmulps xmm, xmm, xmm) -> (OP1 = 0x0_128 o (mul_single(OP2[127:96], OP3[127:96]) o (mul_single(OP2[95:64], OP3[95:64]) o (mul_single(OP2[63:32], OP3[63:32]) o mul_single(OP2[31:0], OP3[31:0])))))
(vmulps ymm, ymm, m256) -> (OP1 = mul_single(OP2[255:224], OP3[255:224]) o (mul_single(OP2[223:192], OP3[223:192]) o (mul_single(OP2[191:160], OP3[191:160]) o (mul_single(OP2[159:128], OP3[159:128]) o (mul_single(OP2[127:96], OP3[127:96]) o (mul_single(OP2[95:64], OP3[95:64]) o (mul_single(OP2[63:32], OP3[63:32]) o mul_single(OP2[31:0], OP3[31:0]))))))))
(vmulps ymm, ymm, ymm) -> (OP1 = mul_single(OP2[255:224], OP3[255:224]) o (mul_single(OP2[223:192], OP3[223:192]) o (mul_single(OP2[191:160], OP3[191:160]) o (mul_single(OP2[159:128], OP3[159:128]) o (mul_single(OP2[127:96], OP3[127:96]) o (mul_single(OP2[95:64], OP3[95:64]) o (mul_single(OP2[63:32], OP3[63:32]) o mul_single(OP2[31:0], OP3[31:0]))))))))
(vmulsd xmm, xmm, m64) -> (OP1 = 0x0_128 o (OP1[127:64] o mul_double(OP2[63:0], OP3[63:0])))
(vmulsd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:64] o mul_double(OP2[63:0], OP3[63:0])))
(vmulss xmm, xmm, m32) -> (OP1 = 0x0_128 o (OP1[127:32] o mul_single(OP2[31:0], OP3[31:0])))
(vmulss xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:32] o mul_single(OP2[31:0], OP3[31:0])))
(vorpd xmm, xmm, m128) -> (OP1 = 0x0_128 o (OP2[127:0] | OP3[127:0]))
(vorpd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP2[127:0] | OP3[127:0]))
(vorpd ymm, ymm, m256) -> (OP1 = OP2 | OP3)
(vorpd ymm, ymm, ymm) -> (OP1 = OP2 | OP3)
(vorps xmm, xmm, m128) -> (OP1 = 0x0_128 o (OP2[127:0] | OP3[127:0]))
(vorps xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP2[127:0] | OP3[127:0]))
(vorps ymm, ymm, m256) -> (OP1 = OP2 | OP3)
(vorps ymm, ymm, ymm) -> (OP1 = OP2 | OP3)
(vpaddd xmm, xmm, m128) -> (OP1 = 0x0_128 o ((OP2[127:96] + OP3[127:96]) o ((OP2[95:64] + OP3[95:64]) o ((OP2[63:32] + OP3[63:32]) o (OP2[31:0] + OP3[31:0])))))
(vpaddd xmm, xmm, xmm) -> (OP1 = 0x0_128 o ((OP2[127:96] + OP3[127:96]) o ((OP2[95:64] + OP3[95:64]) o ((OP2[63:32] + OP3[63:32]) o (OP2[31:0] + OP3[31:0])))))
(vpaddd ymm, ymm, m256) -> (OP1 = (OP2[255:224] + OP3[255:224]) o ((OP2[223:192] + OP3[223:192]) o ((OP2[191:160] + OP3[191:160]) o ((OP2[159:128] + OP3[159:128]) o ((OP2[127:96] + OP3[127:96]) o ((OP2[95:64] + OP3[95:64]) o ((OP2[63:32] + OP3[63:32]) o (OP2[31:0] + OP3[31:0]))))))))
(vpaddd ymm, ymm, ymm) -> (OP1 = (OP2[255:224] + OP3[255:224]) o ((OP2[223:192] + OP3[223:192]) o ((OP2[191:160] + OP3[191:160]) o ((OP2[159:128] + OP3[159:128]) o ((OP2[127:96] + OP3[127:96]) o ((OP2[95:64] + OP3[95:64]) o ((OP2[63:32] + OP3[63:32]) o (OP2[31:0] + OP3[31:0]))))))))
(vpaddq xmm, xmm, m128) -> (OP1 = 0x0_128 o ((OP2[127:64] + OP3[127:64]) o (OP2[63:0] + OP3[63:0])))
(vpaddq xmm, xmm, xmm) -> (OP1 = 0x0_128 o ((OP2[127:64] + OP3[127:64]) o (OP2[63:0] + OP3[63:0])))
(vpand xmm, xmm, m128) -> (OP1 = 0x0_128 o (OP2[127:0] & OP3[127:0]))
(vpand xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP2[127:0] & OP3[127:0]))
(vpand ymm, ymm, m256) -> (OP1 = OP2 & OP3)
(vpand ymm, ymm, ymm) -> (OP1 = OP2 & OP3)
(vpandn xmm, xmm, m128) -> (OP1 = 0x0_128 o (!OP2[127:0] & OP3[127:0]))
(vpandn xmm, xmm, xmm) -> (OP1 = 0x0_128 o (!OP2[127:0] & OP3[127:0]))
(vpandn ymm, ymm, m256) -> (OP1 = !OP2 & OP3)
(vpandn ymm, ymm, ymm) -> (OP1 = !OP2 & OP3)
(vpbroadcastb xmm, xmm) -> (OP1 = 0x0_128 o (OP2[7:0] o OP2[7:0] o OP2[7:0] o OP2[7:0] o (OP2[7:0] o OP2[7:0] o OP2[7:0] o OP2[7:0]) o (OP2[7:0] o OP2[7:0] o OP2[7:0] o OP2[7:0]) o (OP2[7:0] o OP2[7:0] o OP2[7:0] o OP2[7:0])))
(vpbroadcastb ymm, xmm) -> (OP1 = OP2[7:0] o OP2[7:0] o (OP2[7:0] o OP2[7:0]) o (OP2[7:0] o OP2[7:0] o (OP2[7:0] o OP2[7:0])) o (OP2[7:0] o OP2[7:0] o (OP2[7:0] o OP2[7:0]) o (OP2[7:0] o OP2[7:0] o (OP2[7:0] o OP2[7:0]))) o (OP2[7:0] o OP2[7:0] o (OP2[7:0] o OP2[7:0]) o (OP2[7:0] o OP2[7:0] o (OP2[7:0] o OP2[7:0])) o (OP2[7:0] o OP2[7:0] o (OP2[7:0] o OP2[7:0]) o (OP2[7:0] o OP2[7:0] o (OP2[7:0] o OP2[7:0])))))
(vpbroadcastd xmm, m32) -> (OP1 = 0x0_128 o (OP2[31:0] o OP2[31:0] o OP2[31:0] o OP2[31:0]))
(vpbroadcastd xmm, xmm) -> (OP1 = 0x0_128 o (OP2[31:0] o OP2[31:0] o OP2[31:0] o OP2[31:0]))
(vpbroadcastd ymm, m32) -> (OP1 = OP2[31:0] o OP2[31:0] o OP2[31:0] o OP2[31:0] o (OP2[31:0] o OP2[31:0] o OP2[31:0] o OP2[31:0]))
(vpbroadcastd ymm, xmm) -> (OP1 = OP2[31:0] o OP2[31:0] o OP2[31:0] o OP2[31:0] o (OP2[31:0] o OP2[31:0] o OP2[31:0] o OP2[31:0]))
(vpbroadcastq xmm, m64) -> (OP1 = 0x0_128 o (OP2[63:0] o OP2[63:0]))
(vpbroadcastq xmm, xmm) -> (OP1 = 0x0_128 o (OP2[63:0] o OP2[63:0]))
(vpbroadcastq ymm, m64) -> (OP1 = OP2[63:0] o OP2[63:0] o (OP2[63:0] o OP2[63:0]))
(vpbroadcastq ymm, xmm) -> (OP1 = OP2[63:0] o OP2[63:0] o (OP2[63:0] o OP2[63:0]))
(vpbroadcastw xmm, xmm) -> (OP1 = 0x0_128 o (OP2[15:0] o OP2[15:0] o (OP2[15:0] o OP2[15:0]) o (OP2[15:0] o OP2[15:0]) o (OP2[15:0] o OP2[15:0])))
(vpbroadcastw ymm, xmm) -> (OP1 = OP2[15:0] o OP2[15:0] o (OP2[15:0] o OP2[15:0]) o (OP2[15:0] o OP2[15:0] o (OP2[15:0] o OP2[15:0])) o (OP2[15:0] o OP2[15:0] o (OP2[15:0] o OP2[15:0]) o (OP2[15:0] o OP2[15:0] o (OP2[15:0] o OP2[15:0]))))
(vphaddd xmm, xmm, m128) -> (OP1 = 0x0_128 o ((OP3[127:96] + OP3[95:64]) o (OP3[63:32] + OP3[31:0]) o (OP2[127:96] + OP2[95:64]) o (OP2[63:32] + OP2[31:0])))
(vphaddd xmm, xmm, xmm) -> (OP1 = 0x0_128 o ((OP3[127:96] + OP3[95:64]) o (OP3[63:32] + OP3[31:0]) o (OP2[127:96] + OP2[95:64]) o (OP2[63:32] + OP2[31:0])))
(vphaddd ymm, ymm, m256) -> (OP1 = (OP3[255:224] + OP3[223:192]) o (OP3[191:160] + OP3[159:128]) o (OP2[255:224] + OP2[223:192]) o (OP2[191:160] + OP2[159:128]) o ((OP3[127:96] + OP3[95:64]) o (OP3[63:32] + OP3[31:0]) o (OP2[127:96] + OP2[95:64]) o (OP2[63:32] + OP2[31:0])))
(vphaddd ymm, ymm, ymm) -> (OP1 = (OP3[255:224] + OP3[223:192]) o (OP3[191:160] + OP3[159:128]) o (OP2[255:224] + OP2[223:192]) o (OP2[191:160] + OP2[159:128]) o ((OP3[127:96] + OP3[95:64]) o (OP3[63:32] + OP3[31:0]) o (OP2[127:96] + OP2[95:64]) o (OP2[63:32] + OP2[31:0])))
(vphsubd xmm, xmm, m128) -> (OP1 = 0x0_128 o ((OP3[95:64] - OP3[127:96]) o (OP3[31:0] - OP3[63:32]) o (OP2[95:64] - OP2[127:96]) o (OP2[31:0] - OP2[63:32])))
(vphsubd xmm, xmm, xmm) -> (OP1 = 0x0_128 o ((OP3[95:64] - OP3[127:96]) o (OP3[31:0] - OP3[63:32]) o (OP2[95:64] - OP2[127:96]) o (OP2[31:0] - OP2[63:32])))
(vphsubd ymm, ymm, m256) -> (OP1 = (OP3[223:192] - OP3[255:224]) o (OP3[159:128] - OP3[191:160]) o (OP2[223:192] - OP2[255:224]) o (OP2[159:128] - OP2[191:160]) o ((OP3[95:64] - OP3[127:96]) o (OP3[31:0] - OP3[63:32]) o (OP2[95:64] - OP2[127:96]) o (OP2[31:0] - OP2[63:32])))
(vphsubd ymm, ymm, ymm) -> (OP1 = (OP3[223:192] - OP3[255:224]) o (OP3[159:128] - OP3[191:160]) o (OP2[223:192] - OP2[255:224]) o (OP2[159:128] - OP2[191:160]) o ((OP3[95:64] - OP3[127:96]) o (OP3[31:0] - OP3[63:32]) o (OP2[95:64] - OP2[127:96]) o (OP2[31:0] - OP2[63:32])))
(vpmovsxbd xmm, m32) -> (OP1 = 0x0_128 o (sign-extend-32(OP2[31:24]) o (sign-extend-32(OP2[23:16]) o (sign-extend-32(OP2[15:8]) o sign-extend-32(OP2[7:0])))))
(vpmovsxbd xmm, xmm) -> (OP1 = 0x0_128 o (sign-extend-32(OP2[31:24]) o (sign-extend-32(OP2[23:16]) o (sign-extend-32(OP2[15:8]) o sign-extend-32(OP2[7:0])))))
(vpmovsxbd ymm, m64) -> (OP1 = sign-extend-32(OP2[63:56]) o (sign-extend-32(OP2[55:48]) o (sign-extend-32(OP2[47:40]) o (sign-extend-32(OP2[39:32]) o (sign-extend-32(OP2[31:24]) o (sign-extend-32(OP2[23:16]) o (sign-extend-32(OP2[15:8]) o sign-extend-32(OP2[7:0]))))))))
(vpmovsxbd ymm, xmm) -> (OP1 = sign-extend-32(OP2[63:56]) o (sign-extend-32(OP2[55:48]) o (sign-extend-32(OP2[47:40]) o (sign-extend-32(OP2[39:32]) o (sign-extend-32(OP2[31:24]) o (sign-extend-32(OP2[23:16]) o (sign-extend-32(OP2[15:8]) o sign-extend-32(OP2[7:0]))))))))
(vpmovsxbq xmm, xmm) -> (OP1 = 0x0_128 o (sign-extend-64(OP2[15:8]) o sign-extend-64(OP2[7:0])))
(vpmovsxbq ymm, m32) -> (OP1 = sign-extend-64(OP2[31:24]) o (sign-extend-64(OP2[23:16]) o (sign-extend-64(OP2[15:8]) o sign-extend-64(OP2[7:0]))))
(vpmovsxbq ymm, xmm) -> (OP1 = sign-extend-64(OP2[31:24]) o (sign-extend-64(OP2[23:16]) o (sign-extend-64(OP2[15:8]) o sign-extend-64(OP2[7:0]))))
(vpmovsxdq xmm, m64) -> (OP1 = 0x0_128 o (sign-extend-64(OP2[63:32]) o sign-extend-64(OP2[31:0])))
(vpmovsxdq xmm, xmm) -> (OP1 = 0x0_128 o (sign-extend-64(OP2[63:32]) o sign-extend-64(OP2[31:0])))
(vpmovsxdq ymm, m128) -> (OP1 = sign-extend-64(OP2[127:96]) o (sign-extend-64(OP2[95:64]) o (sign-extend-64(OP2[63:32]) o sign-extend-64(OP2[31:0]))))
(vpmovsxdq ymm, xmm) -> (OP1 = sign-extend-64(OP2[127:96]) o (sign-extend-64(OP2[95:64]) o (sign-extend-64(OP2[63:32]) o sign-extend-64(OP2[31:0]))))
(vpmovsxwd xmm, m64) -> (OP1 = 0x0_128 o (sign-extend-32(OP2[63:48]) o (sign-extend-32(OP2[47:32]) o (sign-extend-32(OP2[31:16]) o sign-extend-32(OP2[15:0])))))
(vpmovsxwd xmm, xmm) -> (OP1 = 0x0_128 o (sign-extend-32(OP2[63:48]) o (sign-extend-32(OP2[47:32]) o (sign-extend-32(OP2[31:16]) o sign-extend-32(OP2[15:0])))))
(vpmovsxwd ymm, m128) -> (OP1 = sign-extend-32(OP2[127:112]) o (sign-extend-32(OP2[111:96]) o (sign-extend-32(OP2[95:80]) o (sign-extend-32(OP2[79:64]) o (sign-extend-32(OP2[63:48]) o (sign-extend-32(OP2[47:32]) o (sign-extend-32(OP2[31:16]) o sign-extend-32(OP2[15:0]))))))))
(vpmovsxwd ymm, xmm) -> (OP1 = sign-extend-32(OP2[127:112]) o (sign-extend-32(OP2[111:96]) o (sign-extend-32(OP2[95:80]) o (sign-extend-32(OP2[79:64]) o (sign-extend-32(OP2[63:48]) o (sign-extend-32(OP2[47:32]) o (sign-extend-32(OP2[31:16]) o sign-extend-32(OP2[15:0]))))))))
(vpmovsxwq xmm, m32) -> (OP1 = 0x0_128 o (sign-extend-64(OP2[31:16]) o sign-extend-64(OP2[15:0])))
(vpmovsxwq xmm, xmm) -> (OP1 = 0x0_128 o (sign-extend-64(OP2[31:16]) o sign-extend-64(OP2[15:0])))
(vpmovsxwq ymm, m64) -> (OP1 = sign-extend-64(OP2[63:48]) o (sign-extend-64(OP2[47:32]) o (sign-extend-64(OP2[31:16]) o sign-extend-64(OP2[15:0]))))
(vpmovsxwq ymm, xmm) -> (OP1 = sign-extend-64(OP2[63:48]) o (sign-extend-64(OP2[47:32]) o (sign-extend-64(OP2[31:16]) o sign-extend-64(OP2[15:0]))))
(vpmovzxbd xmm, m32) -> (OP1 = 0x0_128 o (0x0_24 o OP2[31:24] o (0x0_24 o OP2[23:16] o (0x0_24 o OP2[15:8] o (0x0_24 o OP2[7:0])))))
(vpmovzxbd xmm, xmm) -> (OP1 = 0x0_128 o (0x0_24 o OP2[31:24] o (0x0_24 o OP2[23:16] o (0x0_24 o OP2[15:8] o (0x0_24 o OP2[7:0])))))
(vpmovzxbd ymm, m64) -> (OP1 = 0x0_24 o OP2[63:56] o (0x0_24 o OP2[55:48] o (0x0_24 o OP2[47:40] o (0x0_24 o OP2[39:32] o (0x0_24 o OP2[31:24] o (0x0_24 o OP2[23:16] o (0x0_24 o OP2[15:8] o (0x0_24 o OP2[7:0]))))))))
(vpmovzxbd ymm, xmm) -> (OP1 = 0x0_24 o OP2[63:56] o (0x0_24 o OP2[55:48] o (0x0_24 o OP2[47:40] o (0x0_24 o OP2[39:32] o (0x0_24 o OP2[31:24] o (0x0_24 o OP2[23:16] o (0x0_24 o OP2[15:8] o (0x0_24 o OP2[7:0]))))))))
(vpmovzxbq xmm, xmm) -> (OP1 = 0x0_128 o (0x0_56 o OP2[15:8] o (0x0_56 o OP2[7:0])))
(vpmovzxbq ymm, m32) -> (OP1 = 0x0_56 o OP2[31:24] o (0x0_56 o OP2[23:16] o (0x0_56 o OP2[15:8] o (0x0_56 o OP2[7:0]))))
(vpmovzxbq ymm, xmm) -> (OP1 = 0x0_56 o OP2[31:24] o (0x0_56 o OP2[23:16] o (0x0_56 o OP2[15:8] o (0x0_56 o OP2[7:0]))))
(vpmovzxdq xmm, m64) -> (OP1 = 0x0_128 o (0x0_32 o OP2[63:32] o (0x0_32 o OP2[31:0])))
(vpmovzxdq xmm, xmm) -> (OP1 = 0x0_128 o (0x0_32 o OP2[63:32] o (0x0_32 o OP2[31:0])))
(vpmovzxdq ymm, m128) -> (OP1 = 0x0_32 o OP2[127:96] o (0x0_32 o OP2[95:64] o (0x0_32 o OP2[63:32] o (0x0_32 o OP2[31:0]))))
(vpmovzxdq ymm, xmm) -> (OP1 = 0x0_32 o OP2[127:96] o (0x0_32 o OP2[95:64] o (0x0_32 o OP2[63:32] o (0x0_32 o OP2[31:0]))))
(vpmovzxwd xmm, m64) -> (OP1 = 0x0_128 o (0x0_16 o OP2[63:48] o (0x0_16 o OP2[47:32] o (0x0_16 o OP2[31:16] o (0x0_16 o OP2[15:0])))))
(vpmovzxwd xmm, xmm) -> (OP1 = 0x0_128 o (0x0_16 o OP2[63:48] o (0x0_16 o OP2[47:32] o (0x0_16 o OP2[31:16] o (0x0_16 o OP2[15:0])))))
(vpmovzxwd ymm, m128) -> (OP1 = 0x0_16 o OP2[127:112] o (0x0_16 o OP2[111:96] o (0x0_16 o OP2[95:80] o (0x0_16 o OP2[79:64] o (0x0_16 o OP2[63:48] o (0x0_16 o OP2[47:32] o (0x0_16 o OP2[31:16] o (0x0_16 o OP2[15:0]))))))))
(vpmovzxwd ymm, xmm) -> (OP1 = 0x0_16 o OP2[127:112] o (0x0_16 o OP2[111:96] o (0x0_16 o OP2[95:80] o (0x0_16 o OP2[79:64] o (0x0_16 o OP2[63:48] o (0x0_16 o OP2[47:32] o (0x0_16 o OP2[31:16] o (0x0_16 o OP2[15:0]))))))))
(vpmovzxwq xmm, m32) -> (OP1 = 0x0_128 o (0x0_48 o OP2[31:16] o (0x0_48 o OP2[15:0])))
(vpmovzxwq xmm, xmm) -> (OP1 = 0x0_128 o (0x0_48 o OP2[31:16] o (0x0_48 o OP2[15:0])))
(vpmovzxwq ymm, m64) -> (OP1 = 0x0_48 o OP2[63:48] o (0x0_48 o OP2[47:32] o (0x0_48 o OP2[31:16] o (0x0_48 o OP2[15:0]))))
(vpmovzxwq ymm, xmm) -> (OP1 = 0x0_48 o OP2[63:48] o (0x0_48 o OP2[47:32] o (0x0_48 o OP2[31:16] o (0x0_48 o OP2[15:0]))))
(vpor xmm, xmm, m128) -> (OP1 = 0x0_128 o (OP2[127:0] | OP3[127:0]))
(vpor xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP2[127:0] | OP3[127:0]))
(vpor ymm, ymm, m256) -> (OP1 = OP2 | OP3)
(vpor ymm, ymm, ymm) -> (OP1 = OP2 | OP3)
(vpsubd xmm, xmm, m128) -> (OP1 = 0x0_128 o ((OP2[127:96] - OP3[127:96]) o ((OP2[95:64] - OP3[95:64]) o ((OP2[63:32] - OP3[63:32]) o (OP2[31:0] - OP3[31:0])))))
(vpsubd xmm, xmm, xmm) -> (OP1 = 0x0_128 o ((OP2[127:96] - OP3[127:96]) o ((OP2[95:64] - OP3[95:64]) o ((OP2[63:32] - OP3[63:32]) o (OP2[31:0] - OP3[31:0])))))
(vpsubd ymm, ymm, m256) -> (OP1 = (OP2[255:224] - OP3[255:224]) o ((OP2[223:192] - OP3[223:192]) o ((OP2[191:160] - OP3[191:160]) o ((OP2[159:128] - OP3[159:128]) o ((OP2[127:96] - OP3[127:96]) o ((OP2[95:64] - OP3[95:64]) o ((OP2[63:32] - OP3[63:32]) o (OP2[31:0] - OP3[31:0]))))))))
(vpsubd ymm, ymm, ymm) -> (OP1 = (OP2[255:224] - OP3[255:224]) o ((OP2[223:192] - OP3[223:192]) o ((OP2[191:160] - OP3[191:160]) o ((OP2[159:128] - OP3[159:128]) o ((OP2[127:96] - OP3[127:96]) o ((OP2[95:64] - OP3[95:64]) o ((OP2[63:32] - OP3[63:32]) o (OP2[31:0] - OP3[31:0]))))))))
(vpsubq xmm, xmm, m128) -> (OP1 = 0x0_128 o ((OP2[127:64] - OP3[127:64]) o (OP2[63:0] - OP3[63:0])))
(vpsubq xmm, xmm, xmm) -> (OP1 = 0x0_128 o ((OP2[127:64] - OP3[127:64]) o (OP2[63:0] - OP3[63:0])))
(vpunpckhdq xmm, xmm, m128) -> (OP1 = 0x0_128 o (OP3[127:96] o OP2[127:96] o (OP3[95:64] o OP2[95:64])))
(vpunpckhdq xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP3[127:96] o OP2[127:96] o (OP3[95:64] o OP2[95:64])))
(vpunpckhdq ymm, ymm, m256) -> (OP1 = OP3[255:224] o OP2[255:224] o (OP3[223:192] o OP2[223:192] o (OP3[127:96] o OP2[127:96] o (OP3[95:64] o OP2[95:64]))))
(vpunpckhdq ymm, ymm, ymm) -> (OP1 = OP3[255:224] o OP2[255:224] o (OP3[223:192] o OP2[223:192] o (OP3[127:96] o OP2[127:96] o (OP3[95:64] o OP2[95:64]))))
(vpunpckhqdq xmm, xmm, m128) -> (OP1 = 0x0_128 o (OP3[127:64] o OP2[127:64]))
(vpunpckhqdq xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP3[127:64] o OP2[127:64]))
(vpunpckhqdq ymm, ymm, m256) -> (OP1 = OP3[255:192] o OP2[255:192] o (OP3[127:64] o OP2[127:64]))
(vpunpckhqdq ymm, ymm, ymm) -> (OP1 = OP3[255:192] o OP2[255:192] o (OP3[127:64] o OP2[127:64]))
(vpunpckhwd xmm, xmm, m128) -> (OP1 = 0x0_128 o (OP3[127:112] o OP2[127:112] o (OP3[111:96] o OP2[111:96] o (OP3[95:80] o OP2[95:80] o (OP3[79:64] o OP2[79:64])))))
(vpunpckhwd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP3[127:112] o OP2[127:112] o (OP3[111:96] o OP2[111:96] o (OP3[95:80] o OP2[95:80] o (OP3[79:64] o OP2[79:64])))))
(vpunpckhwd ymm, ymm, m256) -> (OP1 = OP3[255:240] o OP2[255:240] o (OP3[239:224] o OP2[239:224] o (OP3[223:208] o OP2[223:208] o (OP3[207:192] o OP2[207:192] o (OP3[127:112] o OP2[127:112] o (OP3[111:96] o OP2[111:96] o (OP3[95:80] o OP2[95:80] o (OP3[79:64] o OP2[79:64]))))))))
(vpunpckhwd ymm, ymm, ymm) -> (OP1 = OP3[255:240] o OP2[255:240] o (OP3[239:224] o OP2[239:224] o (OP3[223:208] o OP2[223:208] o (OP3[207:192] o OP2[207:192] o (OP3[127:112] o OP2[127:112] o (OP3[111:96] o OP2[111:96] o (OP3[95:80] o OP2[95:80] o (OP3[79:64] o OP2[79:64]))))))))
(vpunpckldq xmm, xmm, m128) -> (OP1 = 0x0_128 o (OP3[63:32] o OP2[63:32] o (OP3[31:0] o OP2[31:0])))
(vpunpckldq xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP3[63:32] o OP2[63:32] o (OP3[31:0] o OP2[31:0])))
(vpunpckldq ymm, ymm, m256) -> (OP1 = OP3[191:160] o OP2[191:160] o (OP3[159:128] o OP2[159:128] o (OP3[63:32] o OP2[63:32] o (OP3[31:0] o OP2[31:0]))))
(vpunpckldq ymm, ymm, ymm) -> (OP1 = OP3[191:160] o OP2[191:160] o (OP3[159:128] o OP2[159:128] o (OP3[63:32] o OP2[63:32] o (OP3[31:0] o OP2[31:0]))))
(vpunpcklqdq xmm, xmm, m128) -> (OP1 = 0x0_128 o (OP3[63:0] o OP2[63:0]))
(vpunpcklqdq xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP3[63:0] o OP2[63:0]))
(vpunpcklqdq ymm, ymm, m256) -> (OP1 = OP3[191:128] o OP2[191:128] o (OP3[63:0] o OP2[63:0]))
(vpunpcklqdq ymm, ymm, ymm) -> (OP1 = OP3[191:128] o OP2[191:128] o (OP3[63:0] o OP2[63:0]))
(vpunpcklwd xmm, xmm, m128) -> (OP1 = 0x0_128 o (OP3[63:48] o OP2[63:48] o (OP3[47:32] o OP2[47:32] o (OP3[31:16] o OP2[31:16] o (OP3[15:0] o OP2[15:0])))))
(vpunpcklwd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP3[63:48] o OP2[63:48] o (OP3[47:32] o OP2[47:32] o (OP3[31:16] o OP2[31:16] o (OP3[15:0] o OP2[15:0])))))
(vpunpcklwd ymm, ymm, m256) -> (OP1 = OP3[191:176] o OP2[191:176] o (OP3[175:160] o OP2[175:160] o (OP3[159:144] o OP2[159:144] o (OP3[143:128] o OP2[143:128] o (OP3[63:48] o OP2[63:48] o (OP3[47:32] o OP2[47:32] o (OP3[31:16] o OP2[31:16] o (OP3[15:0] o OP2[15:0]))))))))
(vpunpcklwd ymm, ymm, ymm) -> (OP1 = OP3[191:176] o OP2[191:176] o (OP3[175:160] o OP2[175:160] o (OP3[159:144] o OP2[159:144] o (OP3[143:128] o OP2[143:128] o (OP3[63:48] o OP2[63:48] o (OP3[47:32] o OP2[47:32] o (OP3[31:16] o OP2[31:16] o (OP3[15:0] o OP2[15:0]))))))))
(vpxor xmm, xmm, m128) -> (OP1 = 0x0_128 o (OP2[127:0] ^ OP3[127:0]))
(vpxor xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP2[127:0] ^ OP3[127:0]))
(vpxor ymm, ymm, m256) -> (OP1 = OP2 ^ OP3)
(vpxor ymm, ymm, ymm) -> (OP1 = OP2 ^ OP3)
(vrcpps xmm, m128) -> (OP1 = 0x0_128 o (approx_reciprocal_single(OP2[127:96]) o (approx_reciprocal_single(OP2[95:64]) o (approx_reciprocal_single(OP2[63:32]) o approx_reciprocal_single(OP2[31:0])))))
(vrcpps xmm, xmm) -> (OP1 = 0x0_128 o (approx_reciprocal_single(OP2[127:96]) o (approx_reciprocal_single(OP2[95:64]) o (approx_reciprocal_single(OP2[63:32]) o approx_reciprocal_single(OP2[31:0])))))
(vrcpps ymm, m256) -> (OP1 = approx_reciprocal_single(OP2[255:224]) o (approx_reciprocal_single(OP2[223:192]) o (approx_reciprocal_single(OP2[191:160]) o (approx_reciprocal_single(OP2[159:128]) o (approx_reciprocal_single(OP2[127:96]) o (approx_reciprocal_single(OP2[95:64]) o (approx_reciprocal_single(OP2[63:32]) o approx_reciprocal_single(OP2[31:0]))))))))
(vrcpps ymm, ymm) -> (OP1 = approx_reciprocal_single(OP2[255:224]) o (approx_reciprocal_single(OP2[223:192]) o (approx_reciprocal_single(OP2[191:160]) o (approx_reciprocal_single(OP2[159:128]) o (approx_reciprocal_single(OP2[127:96]) o (approx_reciprocal_single(OP2[95:64]) o (approx_reciprocal_single(OP2[63:32]) o approx_reciprocal_single(OP2[31:0]))))))))
(vrcpss xmm, xmm, m32) -> (OP1 = 0x0_128 o (OP1[127:32] o approx_reciprocal_single(OP3[31:0])))
(vrcpss xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:32] o approx_reciprocal_single(OP3[31:0])))
(vrsqrtps xmm, m128) -> (OP1 = 0x0_128 o (approx_reciprocal_sqrt_single(OP2[127:96]) o (approx_reciprocal_sqrt_single(OP2[95:64]) o (approx_reciprocal_sqrt_single(OP2[63:32]) o approx_reciprocal_sqrt_single(OP2[31:0])))))
(vrsqrtps xmm, xmm) -> (OP1 = 0x0_128 o (approx_reciprocal_sqrt_single(OP2[127:96]) o (approx_reciprocal_sqrt_single(OP2[95:64]) o (approx_reciprocal_sqrt_single(OP2[63:32]) o approx_reciprocal_sqrt_single(OP2[31:0])))))
(vrsqrtps ymm, m256) -> (OP1 = approx_reciprocal_sqrt_single(OP2[255:224]) o (approx_reciprocal_sqrt_single(OP2[223:192]) o (approx_reciprocal_sqrt_single(OP2[191:160]) o (approx_reciprocal_sqrt_single(OP2[159:128]) o (approx_reciprocal_sqrt_single(OP2[127:96]) o (approx_reciprocal_sqrt_single(OP2[95:64]) o (approx_reciprocal_sqrt_single(OP2[63:32]) o approx_reciprocal_sqrt_single(OP2[31:0]))))))))
(vrsqrtps ymm, ymm) -> (OP1 = approx_reciprocal_sqrt_single(OP2[255:224]) o (approx_reciprocal_sqrt_single(OP2[223:192]) o (approx_reciprocal_sqrt_single(OP2[191:160]) o (approx_reciprocal_sqrt_single(OP2[159:128]) o (approx_reciprocal_sqrt_single(OP2[127:96]) o (approx_reciprocal_sqrt_single(OP2[95:64]) o (approx_reciprocal_sqrt_single(OP2[63:32]) o approx_reciprocal_sqrt_single(OP2[31:0]))))))))
(vrsqrtss xmm, xmm, m32) -> (OP1 = 0x0_128 o (OP1[127:32] o approx_reciprocal_sqrt_single(OP3[31:0])))
(vrsqrtss xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:32] o approx_reciprocal_sqrt_single(OP3[31:0])))
(vsqrtpd xmm, m128) -> (OP1 = 0x0_128 o (sqrt_double(OP2[127:64]) o sqrt_double(OP2[63:0])))
(vsqrtpd xmm, xmm) -> (OP1 = 0x0_128 o (sqrt_double(OP2[127:64]) o sqrt_double(OP2[63:0])))
(vsqrtpd ymm, m256) -> (OP1 = sqrt_double(OP2[255:192]) o (sqrt_double(OP2[191:128]) o (sqrt_double(OP2[127:64]) o sqrt_double(OP2[63:0]))))
(vsqrtpd ymm, ymm) -> (OP1 = sqrt_double(OP2[255:192]) o (sqrt_double(OP2[191:128]) o (sqrt_double(OP2[127:64]) o sqrt_double(OP2[63:0]))))
(vsqrtps xmm, m128) -> (OP1 = 0x0_128 o (sqrt_single(OP2[127:96]) o (sqrt_single(OP2[95:64]) o (sqrt_single(OP2[63:32]) o sqrt_single(OP2[31:0])))))
(vsqrtps xmm, xmm) -> (OP1 = 0x0_128 o (sqrt_single(OP2[127:96]) o (sqrt_single(OP2[95:64]) o (sqrt_single(OP2[63:32]) o sqrt_single(OP2[31:0])))))
(vsqrtps ymm, m256) -> (OP1 = sqrt_single(OP2[255:224]) o (sqrt_single(OP2[223:192]) o (sqrt_single(OP2[191:160]) o (sqrt_single(OP2[159:128]) o (sqrt_single(OP2[127:96]) o (sqrt_single(OP2[95:64]) o (sqrt_single(OP2[63:32]) o sqrt_single(OP2[31:0]))))))))
(vsqrtps ymm, ymm) -> (OP1 = sqrt_single(OP2[255:224]) o (sqrt_single(OP2[223:192]) o (sqrt_single(OP2[191:160]) o (sqrt_single(OP2[159:128]) o (sqrt_single(OP2[127:96]) o (sqrt_single(OP2[95:64]) o (sqrt_single(OP2[63:32]) o sqrt_single(OP2[31:0]))))))))
(vsqrtsd xmm, xmm, m64) -> (OP1 = 0x0_128 o (OP1[127:64] o sqrt_double(OP3[63:0])))
(vsqrtsd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:64] o sqrt_double(OP3[63:0])))
(vsqrtss xmm, xmm, m32) -> (OP1 = 0x0_128 o (OP1[127:32] o sqrt_single(OP3[31:0])))
(vsqrtss xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:32] o sqrt_single(OP3[31:0])))
(vsubpd xmm, xmm, m128) -> (OP1 = 0x0_128 o (sub_double(OP2[127:64], OP3[127:64]) o sub_double(OP2[63:0], OP3[63:0])))
(vsubpd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (sub_double(OP2[127:64], OP3[127:64]) o sub_double(OP2[63:0], OP3[63:0])))
(vsubpd ymm, ymm, m256) -> (OP1 = sub_double(OP2[255:192], OP3[255:192]) o (sub_double(OP2[191:128], OP3[191:128]) o (sub_double(OP2[127:64], OP3[127:64]) o sub_double(OP2[63:0], OP3[63:0]))))
(vsubpd ymm, ymm, ymm) -> (OP1 = sub_double(OP2[255:192], OP3[255:192]) o (sub_double(OP2[191:128], OP3[191:128]) o (sub_double(OP2[127:64], OP3[127:64]) o sub_double(OP2[63:0], OP3[63:0]))))
(vsubps xmm, xmm, m128) -> (OP1 = 0x0_128 o (sub_single(OP2[127:96], OP3[127:96]) o (sub_single(OP2[95:64], OP3[95:64]) o (sub_single(OP2[63:32], OP3[63:32]) o sub_single(OP2[31:0], OP3[31:0])))))
(vsubps xmm, xmm, xmm) -> (OP1 = 0x0_128 o (sub_single(OP2[127:96], OP3[127:96]) o (sub_single(OP2[95:64], OP3[95:64]) o (sub_single(OP2[63:32], OP3[63:32]) o sub_single(OP2[31:0], OP3[31:0])))))
(vsubps ymm, ymm, m256) -> (OP1 = sub_single(OP2[255:224], OP3[255:224]) o (sub_single(OP2[223:192], OP3[223:192]) o (sub_single(OP2[191:160], OP3[191:160]) o (sub_single(OP2[159:128], OP3[159:128]) o (sub_single(OP2[127:96], OP3[127:96]) o (sub_single(OP2[95:64], OP3[95:64]) o (sub_single(OP2[63:32], OP3[63:32]) o sub_single(OP2[31:0], OP3[31:0]))))))))
(vsubps ymm, ymm, ymm) -> (OP1 = sub_single(OP2[255:224], OP3[255:224]) o (sub_single(OP2[223:192], OP3[223:192]) o (sub_single(OP2[191:160], OP3[191:160]) o (sub_single(OP2[159:128], OP3[159:128]) o (sub_single(OP2[127:96], OP3[127:96]) o (sub_single(OP2[95:64], OP3[95:64]) o (sub_single(OP2[63:32], OP3[63:32]) o sub_single(OP2[31:0], OP3[31:0]))))))))
(vsubsd xmm, xmm, m64) -> (OP1 = 0x0_128 o (OP1[127:64] o sub_double(OP2[63:0], OP3[63:0])))
(vsubsd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:64] o sub_double(OP2[63:0], OP3[63:0])))
(vsubss xmm, xmm, m32) -> (OP1 = 0x0_128 o (OP1[127:32] o sub_single(OP2[31:0], OP3[31:0])))
(vsubss xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP1[127:32] o sub_single(OP2[31:0], OP3[31:0])))
(vunpckhpd xmm, xmm, m128) -> (OP1 = 0x0_128 o (OP3[127:64] o OP2[127:64]))
(vunpckhpd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP3[127:64] o OP2[127:64]))
(vunpckhpd ymm, ymm, m256) -> (OP1 = OP3[255:192] o OP2[255:192] o (OP3[127:64] o OP2[127:64]))
(vunpckhpd ymm, ymm, ymm) -> (OP1 = OP3[255:192] o OP2[255:192] o (OP3[127:64] o OP2[127:64]))
(vunpckhps xmm, xmm, m128) -> (OP1 = 0x0_128 o (OP3[127:96] o OP2[127:96] o OP3[95:64] o OP2[95:64]))
(vunpckhps xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP3[127:96] o OP2[127:96] o OP3[95:64] o OP2[95:64]))
(vunpckhps ymm, ymm, m256) -> (OP1 = OP3[255:224] o OP2[255:224] o OP3[223:192] o OP2[223:192] o (OP3[127:96] o OP2[127:96] o OP3[95:64] o OP2[95:64]))
(vunpckhps ymm, ymm, ymm) -> (OP1 = OP3[255:224] o OP2[255:224] o OP3[223:192] o OP2[223:192] o (OP3[127:96] o OP2[127:96] o OP3[95:64] o OP2[95:64]))
(vunpcklpd xmm, xmm, m128) -> (OP1 = 0x0_128 o (OP3[63:0] o OP2[63:0]))
(vunpcklpd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP3[63:0] o OP2[63:0]))
(vunpcklpd ymm, ymm, m256) -> (OP1 = OP3[191:128] o OP2[191:128] o (OP3[63:0] o OP2[63:0]))
(vunpcklpd ymm, ymm, ymm) -> (OP1 = OP3[191:128] o OP2[191:128] o (OP3[63:0] o OP2[63:0]))
(vunpcklps xmm, xmm, m128) -> (OP1 = 0x0_128 o (OP3[63:32] o OP2[63:32] o OP3[31:0] o OP2[31:0]))
(vunpcklps xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP3[63:32] o OP2[63:32] o OP3[31:0] o OP2[31:0]))
(vunpcklps ymm, ymm, m256) -> (OP1 = OP3[191:160] o OP2[191:160] o OP3[159:128] o OP2[159:128] o (OP3[63:32] o OP2[63:32] o OP3[31:0] o OP2[31:0]))
(vunpcklps ymm, ymm, ymm) -> (OP1 = OP3[191:160] o OP2[191:160] o OP3[159:128] o OP2[159:128] o (OP3[63:32] o OP2[63:32] o OP3[31:0] o OP2[31:0]))
(vxorpd xmm, xmm, m128) -> (OP1 = 0x0_128 o (OP2[127:0] ^ OP3[127:0]))
(vxorpd xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP2[127:0] ^ OP3[127:0]))
(vxorpd ymm, ymm, m256) -> (OP1 = OP2 ^ OP3)
(vxorpd ymm, ymm, ymm) -> (OP1 = OP2 ^ OP3)
(vxorps xmm, xmm, m128) -> (OP1 = 0x0_128 o (OP2[127:0] ^ OP3[127:0]))
(vxorps xmm, xmm, xmm) -> (OP1 = 0x0_128 o (OP2[127:0] ^ OP3[127:0]))
(vxorps ymm, ymm, m256) -> (OP1 = OP2 ^ OP3)
(vxorps ymm, ymm, ymm) -> (OP1 = OP2 ^ OP3)
(vzeroall) -> (YMM0 = 0x0_256 ; YMM1 = 0x0_256 ; YMM2 = 0x0_256 ; YMM3 = 0x0_256 ; YMM4 = 0x0_256 ; YMM5 = 0x0_256 ; YMM6 = 0x0_256 ; YMM7 = 0x0_256 ; YMM8 = 0x0_256 ; YMM9 = 0x0_256 ; YMM10 = 0x0_256 ; YMM11 = 0x0_256 ; YMM12 = 0x0_256 ; YMM13 = 0x0_256 ; YMM14 = 0x0_256 ; YMM15 = 0x0_256)
(xadd rh, rh) -> (OP2 = OP2[63:16] o OP1[15:8] o OP2[7:0] ; OP1 = OP1[63:16] o (0x0_1 o OP1[15:8] + 0x0_1 o OP2[15:8])[7:0] o OP1[7:0] ; CF := (0x0_1 o OP1[15:8] + 0x0_1 o OP2[15:8])[8:8] == 0x1_1 ; PF := !((0x0_1 o OP1[15:8] + 0x0_1 o OP2[15:8])[0:0] == 0x1_1 bool_xor (0x0_1 o OP1[15:8] + 0x0_1 o OP2[15:8])[1:1] == 0x1_1 bool_xor (0x0_1 o OP1[15:8] + 0x0_1 o OP2[15:8])[2:2] == 0x1_1 bool_xor (0x0_1 o OP1[15:8] + 0x0_1 o OP2[15:8])[3:3] == 0x1_1 bool_xor (0x0_1 o OP1[15:8] + 0x0_1 o OP2[15:8])[4:4] == 0x1_1 bool_xor (0x0_1 o OP1[15:8] + 0x0_1 o OP2[15:8])[5:5] == 0x1_1 bool_xor (0x0_1 o OP1[15:8] + 0x0_1 o OP2[15:8])[6:6] == 0x1_1 bool_xor (0x0_1 o OP1[15:8] + 0x0_1 o OP2[15:8])[7:7] == 0x1_1) ; ZF := (0x0_1 o OP1[15:8] + 0x0_1 o OP2[15:8])[7:0] == 0x0_8 ; SF := (0x0_1 o OP1[15:8] + 0x0_1 o OP2[15:8])[7:7] == 0x1_1 ; OF := (OP1[15:15] == 0x1_1 bool_iff OP2[15:15] == 0x1_1) bool_and !(OP1[15:15] == 0x1_1 bool_iff (0x0_1 o OP1[15:8] + 0x0_1 o OP2[15:8])[7:7] == 0x1_1))
(xadd rh, r8) -> (OP1 = OP1[63:16] o (0x0_1 o OP1[15:8] + 0x0_1 o OP2[7:0])[7:0] o OP1[7:0] ; OP2 = OP2[63:8] o OP1[15:8] ; CF := (0x0_1 o OP1[15:8] + 0x0_1 o OP2[7:0])[8:8] == 0x1_1 ; PF := !((0x0_1 o OP1[15:8] + 0x0_1 o OP2[7:0])[0:0] == 0x1_1 bool_xor (0x0_1 o OP1[15:8] + 0x0_1 o OP2[7:0])[1:1] == 0x1_1 bool_xor (0x0_1 o OP1[15:8] + 0x0_1 o OP2[7:0])[2:2] == 0x1_1 bool_xor (0x0_1 o OP1[15:8] + 0x0_1 o OP2[7:0])[3:3] == 0x1_1 bool_xor (0x0_1 o OP1[15:8] + 0x0_1 o OP2[7:0])[4:4] == 0x1_1 bool_xor (0x0_1 o OP1[15:8] + 0x0_1 o OP2[7:0])[5:5] == 0x1_1 bool_xor (0x0_1 o OP1[15:8] + 0x0_1 o OP2[7:0])[6:6] == 0x1_1 bool_xor (0x0_1 o OP1[15:8] + 0x0_1 o OP2[7:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o OP1[15:8] + 0x0_1 o OP2[7:0])[7:0] == 0x0_8 ; SF := (0x0_1 o OP1[15:8] + 0x0_1 o OP2[7:0])[7:7] == 0x1_1 ; OF := (OP1[15:15] == 0x1_1 bool_iff OP2[7:7] == 0x1_1) bool_and !(OP1[15:15] == 0x1_1 bool_iff (0x0_1 o OP1[15:8] + 0x0_1 o OP2[7:0])[7:7] == 0x1_1))
(xadd r8, rh) -> (OP2 = OP2[63:16] o OP1[7:0] o OP2[7:0] ; OP1 = OP1[63:8] o (0x0_1 o OP1[7:0] + 0x0_1 o OP2[15:8])[7:0] ; CF := (0x0_1 o OP1[7:0] + 0x0_1 o OP2[15:8])[8:8] == 0x1_1 ; PF := !((0x0_1 o OP1[7:0] + 0x0_1 o OP2[15:8])[0:0] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] + 0x0_1 o OP2[15:8])[1:1] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] + 0x0_1 o OP2[15:8])[2:2] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] + 0x0_1 o OP2[15:8])[3:3] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] + 0x0_1 o OP2[15:8])[4:4] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] + 0x0_1 o OP2[15:8])[5:5] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] + 0x0_1 o OP2[15:8])[6:6] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] + 0x0_1 o OP2[15:8])[7:7] == 0x1_1) ; ZF := (0x0_1 o OP1[7:0] + 0x0_1 o OP2[15:8])[7:0] == 0x0_8 ; SF := (0x0_1 o OP1[7:0] + 0x0_1 o OP2[15:8])[7:7] == 0x1_1 ; OF := (OP1[7:7] == 0x1_1 bool_iff OP2[15:15] == 0x1_1) bool_and !(OP1[7:7] == 0x1_1 bool_iff (0x0_1 o OP1[7:0] + 0x0_1 o OP2[15:8])[7:7] == 0x1_1))
(xadd r8, r8) -> (OP1 = OP1[63:8] o (0x0_1 o OP1[7:0] + 0x0_1 o OP2[7:0])[7:0] ; OP2 = OP2[63:8] o OP1[7:0] ; CF := (0x0_1 o OP1[7:0] + 0x0_1 o OP2[7:0])[8:8] == 0x1_1 ; PF := !((0x0_1 o OP1[7:0] + 0x0_1 o OP2[7:0])[0:0] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] + 0x0_1 o OP2[7:0])[1:1] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] + 0x0_1 o OP2[7:0])[2:2] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] + 0x0_1 o OP2[7:0])[3:3] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] + 0x0_1 o OP2[7:0])[4:4] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] + 0x0_1 o OP2[7:0])[5:5] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] + 0x0_1 o OP2[7:0])[6:6] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] + 0x0_1 o OP2[7:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o OP1[7:0] + 0x0_1 o OP2[7:0])[7:0] == 0x0_8 ; SF := (0x0_1 o OP1[7:0] + 0x0_1 o OP2[7:0])[7:7] == 0x1_1 ; OF := (OP1[7:7] == 0x1_1 bool_iff OP2[7:7] == 0x1_1) bool_and !(OP1[7:7] == 0x1_1 bool_iff (0x0_1 o OP1[7:0] + 0x0_1 o OP2[7:0])[7:7] == 0x1_1))
(xadd m8, rh) -> (OP2 = (OP2[63:16] o OP1[7:0] o OP2[7:0])[7:0] ; OP1 = (OP1[63:8] o (0x0_1 o OP1[7:0] + 0x0_1 o OP2[15:8])[7:0])[7:0] ; CF := (0x0_1 o OP1[7:0] + 0x0_1 o OP2[15:8])[8:8] == 0x1_1 ; PF := !((0x0_1 o OP1[7:0] + 0x0_1 o OP2[15:8])[0:0] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] + 0x0_1 o OP2[15:8])[1:1] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] + 0x0_1 o OP2[15:8])[2:2] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] + 0x0_1 o OP2[15:8])[3:3] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] + 0x0_1 o OP2[15:8])[4:4] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] + 0x0_1 o OP2[15:8])[5:5] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] + 0x0_1 o OP2[15:8])[6:6] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] + 0x0_1 o OP2[15:8])[7:7] == 0x1_1) ; ZF := (0x0_1 o OP1[7:0] + 0x0_1 o OP2[15:8])[7:0] == 0x0_8 ; SF := (0x0_1 o OP1[7:0] + 0x0_1 o OP2[15:8])[7:7] == 0x1_1 ; OF := (OP1[7:7] == 0x1_1 bool_iff OP2[15:15] == 0x1_1) bool_and !(OP1[7:7] == 0x1_1 bool_iff (0x0_1 o OP1[7:0] + 0x0_1 o OP2[15:8])[7:7] == 0x1_1))
(xadd m8, r8) -> (OP1 = (OP1[63:8] o (0x0_1 o OP1[7:0] + 0x0_1 o OP2[7:0])[7:0])[7:0] ; OP2 = (OP2[63:8] o OP1[7:0])[7:0] ; CF := (0x0_1 o OP1[7:0] + 0x0_1 o OP2[7:0])[8:8] == 0x1_1 ; PF := !((0x0_1 o OP1[7:0] + 0x0_1 o OP2[7:0])[0:0] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] + 0x0_1 o OP2[7:0])[1:1] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] + 0x0_1 o OP2[7:0])[2:2] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] + 0x0_1 o OP2[7:0])[3:3] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] + 0x0_1 o OP2[7:0])[4:4] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] + 0x0_1 o OP2[7:0])[5:5] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] + 0x0_1 o OP2[7:0])[6:6] == 0x1_1 bool_xor (0x0_1 o OP1[7:0] + 0x0_1 o OP2[7:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o OP1[7:0] + 0x0_1 o OP2[7:0])[7:0] == 0x0_8 ; SF := (0x0_1 o OP1[7:0] + 0x0_1 o OP2[7:0])[7:7] == 0x1_1 ; OF := (OP1[7:7] == 0x1_1 bool_iff OP2[7:7] == 0x1_1) bool_and !(OP1[7:7] == 0x1_1 bool_iff (0x0_1 o OP1[7:0] + 0x0_1 o OP2[7:0])[7:7] == 0x1_1))
(xadd r32, r32) -> (OP1 = 0x0_32 o (0x0_1 o OP1[31:0] + 0x0_1 o OP2[31:0])[31:0] ; OP2 = 0x0_32 o OP1[31:0] ; CF := (0x0_1 o OP1[31:0] + 0x0_1 o OP2[31:0])[32:32] == 0x1_1 ; PF := !((0x0_1 o OP1[31:0] + 0x0_1 o OP2[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] + 0x0_1 o OP2[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] + 0x0_1 o OP2[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] + 0x0_1 o OP2[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] + 0x0_1 o OP2[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] + 0x0_1 o OP2[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] + 0x0_1 o OP2[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] + 0x0_1 o OP2[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o OP1[31:0] + 0x0_1 o OP2[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o OP1[31:0] + 0x0_1 o OP2[31:0])[31:31] == 0x1_1 ; OF := (OP1[31:31] == 0x1_1 bool_iff OP2[31:31] == 0x1_1) bool_and !(OP1[31:31] == 0x1_1 bool_iff (0x0_1 o OP1[31:0] + 0x0_1 o OP2[31:0])[31:31] == 0x1_1))
(xadd m32, r32) -> (OP1 = (0x0_32 o (0x0_1 o OP1[31:0] + 0x0_1 o OP2[31:0])[31:0])[31:0] ; OP2 = (0x0_32 o OP1[31:0])[31:0] ; CF := (0x0_1 o OP1[31:0] + 0x0_1 o OP2[31:0])[32:32] == 0x1_1 ; PF := !((0x0_1 o OP1[31:0] + 0x0_1 o OP2[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] + 0x0_1 o OP2[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] + 0x0_1 o OP2[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] + 0x0_1 o OP2[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] + 0x0_1 o OP2[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] + 0x0_1 o OP2[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] + 0x0_1 o OP2[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o OP1[31:0] + 0x0_1 o OP2[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o OP1[31:0] + 0x0_1 o OP2[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o OP1[31:0] + 0x0_1 o OP2[31:0])[31:31] == 0x1_1 ; OF := (OP1[31:31] == 0x1_1 bool_iff OP2[31:31] == 0x1_1) bool_and !(OP1[31:31] == 0x1_1 bool_iff (0x0_1 o OP1[31:0] + 0x0_1 o OP2[31:0])[31:31] == 0x1_1))
(xadd r64, r64) -> (OP1 = (0x0_1 o OP1 + 0x0_1 o OP2)[63:0] ; OP2 = OP1 ; CF := (0x0_1 o OP1 + 0x0_1 o OP2)[64:64] == 0x1_1 ; PF := !((0x0_1 o OP1 + 0x0_1 o OP2)[0:0] == 0x1_1 bool_xor (0x0_1 o OP1 + 0x0_1 o OP2)[1:1] == 0x1_1 bool_xor (0x0_1 o OP1 + 0x0_1 o OP2)[2:2] == 0x1_1 bool_xor (0x0_1 o OP1 + 0x0_1 o OP2)[3:3] == 0x1_1 bool_xor (0x0_1 o OP1 + 0x0_1 o OP2)[4:4] == 0x1_1 bool_xor (0x0_1 o OP1 + 0x0_1 o OP2)[5:5] == 0x1_1 bool_xor (0x0_1 o OP1 + 0x0_1 o OP2)[6:6] == 0x1_1 bool_xor (0x0_1 o OP1 + 0x0_1 o OP2)[7:7] == 0x1_1) ; ZF := (0x0_1 o OP1 + 0x0_1 o OP2)[63:0] == 0x0_64 ; SF := (0x0_1 o OP1 + 0x0_1 o OP2)[63:63] == 0x1_1 ; OF := (OP1[63:63] == 0x1_1 bool_iff OP2[63:63] == 0x1_1) bool_and !(OP1[63:63] == 0x1_1 bool_iff (0x0_1 o OP1 + 0x0_1 o OP2)[63:63] == 0x1_1))
(xadd m64, r64) -> (OP1 = ((0x0_1 o OP1 + 0x0_1 o OP2)[63:0])[63:0] ; OP2 = (OP1)[63:0] ; CF := (0x0_1 o OP1 + 0x0_1 o OP2)[64:64] == 0x1_1 ; PF := !((0x0_1 o OP1 + 0x0_1 o OP2)[0:0] == 0x1_1 bool_xor (0x0_1 o OP1 + 0x0_1 o OP2)[1:1] == 0x1_1 bool_xor (0x0_1 o OP1 + 0x0_1 o OP2)[2:2] == 0x1_1 bool_xor (0x0_1 o OP1 + 0x0_1 o OP2)[3:3] == 0x1_1 bool_xor (0x0_1 o OP1 + 0x0_1 o OP2)[4:4] == 0x1_1 bool_xor (0x0_1 o OP1 + 0x0_1 o OP2)[5:5] == 0x1_1 bool_xor (0x0_1 o OP1 + 0x0_1 o OP2)[6:6] == 0x1_1 bool_xor (0x0_1 o OP1 + 0x0_1 o OP2)[7:7] == 0x1_1) ; ZF := (0x0_1 o OP1 + 0x0_1 o OP2)[63:0] == 0x0_64 ; SF := (0x0_1 o OP1 + 0x0_1 o OP2)[63:63] == 0x1_1 ; OF := (OP1[63:63] == 0x1_1 bool_iff OP2[63:63] == 0x1_1) bool_and !(OP1[63:63] == 0x1_1 bool_iff (0x0_1 o OP1 + 0x0_1 o OP2)[63:63] == 0x1_1))
(xadd r16, r16) -> (OP1 = OP1[63:16] o (0x0_1 o OP1[15:0] + 0x0_1 o OP2[15:0])[15:0] ; OP2 = OP2[63:16] o OP1[15:0] ; CF := (0x0_1 o OP1[15:0] + 0x0_1 o OP2[15:0])[16:16] == 0x1_1 ; PF := !((0x0_1 o OP1[15:0] + 0x0_1 o OP2[15:0])[0:0] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] + 0x0_1 o OP2[15:0])[1:1] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] + 0x0_1 o OP2[15:0])[2:2] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] + 0x0_1 o OP2[15:0])[3:3] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] + 0x0_1 o OP2[15:0])[4:4] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] + 0x0_1 o OP2[15:0])[5:5] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] + 0x0_1 o OP2[15:0])[6:6] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] + 0x0_1 o OP2[15:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o OP1[15:0] + 0x0_1 o OP2[15:0])[15:0] == 0x0_16 ; SF := (0x0_1 o OP1[15:0] + 0x0_1 o OP2[15:0])[15:15] == 0x1_1 ; OF := (OP1[15:15] == 0x1_1 bool_iff OP2[15:15] == 0x1_1) bool_and !(OP1[15:15] == 0x1_1 bool_iff (0x0_1 o OP1[15:0] + 0x0_1 o OP2[15:0])[15:15] == 0x1_1))
(xadd m16, r16) -> (OP1 = (OP1[63:16] o (0x0_1 o OP1[15:0] + 0x0_1 o OP2[15:0])[15:0])[15:0] ; OP2 = (OP2[63:16] o OP1[15:0])[15:0] ; CF := (0x0_1 o OP1[15:0] + 0x0_1 o OP2[15:0])[16:16] == 0x1_1 ; PF := !((0x0_1 o OP1[15:0] + 0x0_1 o OP2[15:0])[0:0] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] + 0x0_1 o OP2[15:0])[1:1] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] + 0x0_1 o OP2[15:0])[2:2] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] + 0x0_1 o OP2[15:0])[3:3] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] + 0x0_1 o OP2[15:0])[4:4] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] + 0x0_1 o OP2[15:0])[5:5] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] + 0x0_1 o OP2[15:0])[6:6] == 0x1_1 bool_xor (0x0_1 o OP1[15:0] + 0x0_1 o OP2[15:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o OP1[15:0] + 0x0_1 o OP2[15:0])[15:0] == 0x0_16 ; SF := (0x0_1 o OP1[15:0] + 0x0_1 o OP2[15:0])[15:15] == 0x1_1 ; OF := (OP1[15:15] == 0x1_1 bool_iff OP2[15:15] == 0x1_1) bool_and !(OP1[15:15] == 0x1_1 bool_iff (0x0_1 o OP1[15:0] + 0x0_1 o OP2[15:0])[15:15] == 0x1_1))
(xchg rh, rh) -> (OP2 = OP2[63:16] o OP1[15:8] o OP2[7:0] ; OP1 = OP1[63:16] o OP2[15:8] o OP1[7:0])
(xchg rh, r8) -> (OP1 = OP1[63:16] o OP2[7:0] o OP1[7:0] ; OP2 = OP2[63:8] o OP1[15:8])
(xchg rh, m8) -> (OP1 = OP1[63:16] o OP2[7:0] o OP1[7:0] ; OP2 = OP2[63:8] o OP1[15:8])
(xchg r8, rh) -> (OP2 = OP2[63:16] o OP1[7:0] o OP2[7:0] ; OP1 = OP1[63:8] o OP2[15:8])
(xchg r8, r8) -> (OP1 = OP1[63:8] o OP2[7:0] ; OP2 = OP2[63:8] o OP1[7:0])
(xchg r8, m8) -> (OP1 = OP1[63:8] o OP2[7:0] ; OP2 = OP2[63:8] o OP1[7:0])
(xchg m8, rh) -> (OP2 = (OP2[63:16] o OP1[7:0] o OP2[7:0])[7:0] ; OP1 = (OP1[63:8] o OP2[15:8])[7:0])
(xchg m8, r8) -> (OP1 = (OP1[63:8] o OP2[7:0])[7:0] ; OP2 = (OP2[63:8] o OP1[7:0])[7:0])
(xchg eax, r32) -> (OP1 = 0x0_32 o OP2[31:0] ; OP2 = 0x0_32 o RAX[31:0])
(xchg r32, eax) -> (OP2 = 0x0_32 o OP1[31:0] ; OP1 = 0x0_32 o RAX[31:0])
(xchg r32, r32) -> (OP1 = 0x0_32 o OP2[31:0] ; OP2 = 0x0_32 o OP1[31:0])
(xchg r32, m32) -> (OP1 = 0x0_32 o OP2[31:0] ; OP2 = 0x0_32 o RAX[31:0])
(xchg m32, r32) -> (OP1 = (0x0_32 o OP2[31:0])[31:0] ; OP2 = (0x0_32 o RAX[31:0])[31:0])
(xchg rax, r64) -> (OP1 = OP2 ; OP2 = RAX)
(xchg r64, rax) -> (OP2 = OP1 ; OP1 = RAX)
(xchg r64, r64) -> (OP1 = OP2 ; OP2 = OP1)
(xchg r64, m64) -> (OP1 = OP2 ; OP2 = OP1)
(xchg m64, r64) -> (OP1 = (OP2)[63:0] ; OP2 = (OP1)[63:0])
(xchg ax, r16) -> (OP1 = RAX[63:16] o OP2[15:0] ; OP2 = OP2[63:16] o RAX[15:0])
(xchg r16, ax) -> (OP2 = RAX[63:16] o OP1[15:0] ; OP1 = OP1[63:16] o RAX[15:0])
(xchg r16, r16) -> (OP1 = OP1[63:16] o OP2[15:0] ; OP2 = OP2[63:16] o OP1[15:0])
(xchg r16, m16) -> (OP1 = RAX[63:16] o OP2[15:0] ; OP2 = OP2[63:16] o RAX[15:0])
(xchg m16, r16) -> (OP1 = (RAX[63:16] o OP2[15:0])[15:0] ; OP2 = (OP2[63:16] o RAX[15:0])[15:0])
(xor rh, imm8) -> (OP1 = OP1[63:16] o (OP1[15:8] ^ OP2[7:0]) o OP1[7:0] ; CF := false ; PF := !((OP1[8:8] ^ OP2[0:0]) == 0x1_1 bool_xor (OP1[9:9] ^ OP2[1:1]) == 0x1_1 bool_xor (OP1[10:10] ^ OP2[2:2]) == 0x1_1 bool_xor (OP1[11:11] ^ OP2[3:3]) == 0x1_1 bool_xor (OP1[12:12] ^ OP2[4:4]) == 0x1_1 bool_xor (OP1[13:13] ^ OP2[5:5]) == 0x1_1 bool_xor (OP1[14:14] ^ OP2[6:6]) == 0x1_1 bool_xor (OP1[15:15] ^ OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:8] ^ OP2[7:0]) == 0x0_8 ; SF := (OP1[15:15] ^ OP2[7:7]) == 0x1_1 ; OF := false)
(xor rh, rh) -> (OP1 = OP1[63:16] o (OP1[15:8] ^ OP2[15:8]) o OP1[7:0] ; CF := false ; PF := !((OP1[8:8] ^ OP2[8:8]) == 0x1_1 bool_xor (OP1[9:9] ^ OP2[9:9]) == 0x1_1 bool_xor (OP1[10:10] ^ OP2[10:10]) == 0x1_1 bool_xor (OP1[11:11] ^ OP2[11:11]) == 0x1_1 bool_xor (OP1[12:12] ^ OP2[12:12]) == 0x1_1 bool_xor (OP1[13:13] ^ OP2[13:13]) == 0x1_1 bool_xor (OP1[14:14] ^ OP2[14:14]) == 0x1_1 bool_xor (OP1[15:15] ^ OP2[15:15]) == 0x1_1) ; ZF := (OP1[15:8] ^ OP2[15:8]) == 0x0_8 ; SF := (OP1[15:15] ^ OP2[15:15]) == 0x1_1 ; OF := false)
(xor rh, r8) -> (OP1 = OP1[63:16] o (OP1[15:8] ^ OP2[7:0]) o OP1[7:0] ; CF := false ; PF := !((OP1[8:8] ^ OP2[0:0]) == 0x1_1 bool_xor (OP1[9:9] ^ OP2[1:1]) == 0x1_1 bool_xor (OP1[10:10] ^ OP2[2:2]) == 0x1_1 bool_xor (OP1[11:11] ^ OP2[3:3]) == 0x1_1 bool_xor (OP1[12:12] ^ OP2[4:4]) == 0x1_1 bool_xor (OP1[13:13] ^ OP2[5:5]) == 0x1_1 bool_xor (OP1[14:14] ^ OP2[6:6]) == 0x1_1 bool_xor (OP1[15:15] ^ OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:8] ^ OP2[7:0]) == 0x0_8 ; SF := (OP1[15:15] ^ OP2[7:7]) == 0x1_1 ; OF := false)
(xor rh, m8) -> (OP1 = OP1[63:16] o (OP1[15:8] ^ OP2[7:0]) o OP1[7:0] ; CF := false ; PF := !((OP1[8:8] ^ OP2[0:0]) == 0x1_1 bool_xor (OP1[9:9] ^ OP2[1:1]) == 0x1_1 bool_xor (OP1[10:10] ^ OP2[2:2]) == 0x1_1 bool_xor (OP1[11:11] ^ OP2[3:3]) == 0x1_1 bool_xor (OP1[12:12] ^ OP2[4:4]) == 0x1_1 bool_xor (OP1[13:13] ^ OP2[5:5]) == 0x1_1 bool_xor (OP1[14:14] ^ OP2[6:6]) == 0x1_1 bool_xor (OP1[15:15] ^ OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:8] ^ OP2[7:0]) == 0x0_8 ; SF := (OP1[15:15] ^ OP2[7:7]) == 0x1_1 ; OF := false)
(xor al, imm8) -> (OP1 = OP1[63:8] o (OP1[7:0] ^ OP2[7:0]) ; CF := false ; PF := !((OP1[0:0] ^ OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] ^ OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] ^ OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] ^ OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] ^ OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] ^ OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] ^ OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] ^ OP2[7:7]) == 0x1_1) ; ZF := (OP1[7:0] ^ OP2[7:0]) == 0x0_8 ; SF := (OP1[7:7] ^ OP2[7:7]) == 0x1_1 ; OF := false)
(xor r8, imm8) -> (OP1 = OP1[63:8] o (OP1[7:0] ^ OP2[7:0]) ; CF := false ; PF := !((OP1[0:0] ^ OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] ^ OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] ^ OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] ^ OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] ^ OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] ^ OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] ^ OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] ^ OP2[7:7]) == 0x1_1) ; ZF := (OP1[7:0] ^ OP2[7:0]) == 0x0_8 ; SF := (OP1[7:7] ^ OP2[7:7]) == 0x1_1 ; OF := false)
(xor r8, rh) -> (OP1 = OP1[63:8] o (OP1[7:0] ^ OP2[15:8]) ; CF := false ; PF := !((OP1[0:0] ^ OP2[8:8]) == 0x1_1 bool_xor (OP1[1:1] ^ OP2[9:9]) == 0x1_1 bool_xor (OP1[2:2] ^ OP2[10:10]) == 0x1_1 bool_xor (OP1[3:3] ^ OP2[11:11]) == 0x1_1 bool_xor (OP1[4:4] ^ OP2[12:12]) == 0x1_1 bool_xor (OP1[5:5] ^ OP2[13:13]) == 0x1_1 bool_xor (OP1[6:6] ^ OP2[14:14]) == 0x1_1 bool_xor (OP1[7:7] ^ OP2[15:15]) == 0x1_1) ; ZF := (OP1[7:0] ^ OP2[15:8]) == 0x0_8 ; SF := (OP1[7:7] ^ OP2[15:15]) == 0x1_1 ; OF := false)
(xor r8, r8) -> (OP1 = OP1[63:8] o (OP1[7:0] ^ OP2[7:0]) ; CF := false ; PF := !((OP1[0:0] ^ OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] ^ OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] ^ OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] ^ OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] ^ OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] ^ OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] ^ OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] ^ OP2[7:7]) == 0x1_1) ; ZF := (OP1[7:0] ^ OP2[7:0]) == 0x0_8 ; SF := (OP1[7:7] ^ OP2[7:7]) == 0x1_1 ; OF := false)
(xor r8, m8) -> (OP1 = OP1[63:8] o (OP1[7:0] ^ OP2[7:0]) ; CF := false ; PF := !((OP1[0:0] ^ OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] ^ OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] ^ OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] ^ OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] ^ OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] ^ OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] ^ OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] ^ OP2[7:7]) == 0x1_1) ; ZF := (OP1[7:0] ^ OP2[7:0]) == 0x0_8 ; SF := (OP1[7:7] ^ OP2[7:7]) == 0x1_1 ; OF := false)
(xor m8, imm8) -> (OP1 = (OP1[63:8] o (OP1[7:0] ^ OP2[7:0]))[7:0] ; CF := false ; PF := !((OP1[0:0] ^ OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] ^ OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] ^ OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] ^ OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] ^ OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] ^ OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] ^ OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] ^ OP2[7:7]) == 0x1_1) ; ZF := (OP1[7:0] ^ OP2[7:0]) == 0x0_8 ; SF := (OP1[7:7] ^ OP2[7:7]) == 0x1_1 ; OF := false)
(xor m8, rh) -> (OP1 = (OP1[63:8] o (OP1[7:0] ^ OP2[15:8]))[7:0] ; CF := false ; PF := !((OP1[0:0] ^ OP2[8:8]) == 0x1_1 bool_xor (OP1[1:1] ^ OP2[9:9]) == 0x1_1 bool_xor (OP1[2:2] ^ OP2[10:10]) == 0x1_1 bool_xor (OP1[3:3] ^ OP2[11:11]) == 0x1_1 bool_xor (OP1[4:4] ^ OP2[12:12]) == 0x1_1 bool_xor (OP1[5:5] ^ OP2[13:13]) == 0x1_1 bool_xor (OP1[6:6] ^ OP2[14:14]) == 0x1_1 bool_xor (OP1[7:7] ^ OP2[15:15]) == 0x1_1) ; ZF := (OP1[7:0] ^ OP2[15:8]) == 0x0_8 ; SF := (OP1[7:7] ^ OP2[15:15]) == 0x1_1 ; OF := false)
(xor m8, r8) -> (OP1 = (OP1[63:8] o (OP1[7:0] ^ OP2[7:0]))[7:0] ; CF := false ; PF := !((OP1[0:0] ^ OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] ^ OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] ^ OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] ^ OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] ^ OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] ^ OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] ^ OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] ^ OP2[7:7]) == 0x1_1) ; ZF := (OP1[7:0] ^ OP2[7:0]) == 0x0_8 ; SF := (OP1[7:7] ^ OP2[7:7]) == 0x1_1 ; OF := false)
(xor eax, imm32) -> (OP1 = 0x0_32 o (OP1[31:0] ^ OP2[31:0]) ; CF := false ; PF := !((OP1[0:0] ^ OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] ^ OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] ^ OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] ^ OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] ^ OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] ^ OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] ^ OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] ^ OP2[7:7]) == 0x1_1) ; ZF := (OP1[31:0] ^ OP2[31:0]) == 0x0_32 ; SF := (OP1[31:31] ^ OP2[31:31]) == 0x1_1 ; OF := false)
(xor r32, imm8) -> (OP1 = 0x0_32 o (OP1[31:0] ^ (sign-extend-32(OP2))[31:0]) ; CF := false ; PF := !((OP1[0:0] ^ (sign-extend-32(OP2))[0:0]) == 0x1_1 bool_xor (OP1[1:1] ^ (sign-extend-32(OP2))[1:1]) == 0x1_1 bool_xor (OP1[2:2] ^ (sign-extend-32(OP2))[2:2]) == 0x1_1 bool_xor (OP1[3:3] ^ (sign-extend-32(OP2))[3:3]) == 0x1_1 bool_xor (OP1[4:4] ^ (sign-extend-32(OP2))[4:4]) == 0x1_1 bool_xor (OP1[5:5] ^ (sign-extend-32(OP2))[5:5]) == 0x1_1 bool_xor (OP1[6:6] ^ (sign-extend-32(OP2))[6:6]) == 0x1_1 bool_xor (OP1[7:7] ^ (sign-extend-32(OP2))[7:7]) == 0x1_1) ; ZF := (OP1[31:0] ^ (sign-extend-32(OP2))[31:0]) == 0x0_32 ; SF := (OP1[31:31] ^ (sign-extend-32(OP2))[31:31]) == 0x1_1 ; OF := false)
(xor r32, imm32) -> (OP1 = 0x0_32 o (OP1[31:0] ^ OP2[31:0]) ; CF := false ; PF := !((OP1[0:0] ^ OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] ^ OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] ^ OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] ^ OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] ^ OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] ^ OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] ^ OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] ^ OP2[7:7]) == 0x1_1) ; ZF := (OP1[31:0] ^ OP2[31:0]) == 0x0_32 ; SF := (OP1[31:31] ^ OP2[31:31]) == 0x1_1 ; OF := false)
(xor r32, r32) -> (OP1 = 0x0_32 o (OP1[31:0] ^ OP2[31:0]) ; CF := false ; PF := !((OP1[0:0] ^ OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] ^ OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] ^ OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] ^ OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] ^ OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] ^ OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] ^ OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] ^ OP2[7:7]) == 0x1_1) ; ZF := (OP1[31:0] ^ OP2[31:0]) == 0x0_32 ; SF := (OP1[31:31] ^ OP2[31:31]) == 0x1_1 ; OF := false)
(xor r32, m32) -> (OP1 = 0x0_32 o (OP1[31:0] ^ OP2[31:0]) ; CF := false ; PF := !((OP1[0:0] ^ OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] ^ OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] ^ OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] ^ OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] ^ OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] ^ OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] ^ OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] ^ OP2[7:7]) == 0x1_1) ; ZF := (OP1[31:0] ^ OP2[31:0]) == 0x0_32 ; SF := (OP1[31:31] ^ OP2[31:31]) == 0x1_1 ; OF := false)
(xor m32, imm8) -> (OP1 = 0x0_32 o (OP1[31:0] ^ (sign-extend-32(OP2))[31:0]) ; CF := false ; PF := !((OP1[0:0] ^ (sign-extend-32(OP2))[0:0]) == 0x1_1 bool_xor (OP1[1:1] ^ (sign-extend-32(OP2))[1:1]) == 0x1_1 bool_xor (OP1[2:2] ^ (sign-extend-32(OP2))[2:2]) == 0x1_1 bool_xor (OP1[3:3] ^ (sign-extend-32(OP2))[3:3]) == 0x1_1 bool_xor (OP1[4:4] ^ (sign-extend-32(OP2))[4:4]) == 0x1_1 bool_xor (OP1[5:5] ^ (sign-extend-32(OP2))[5:5]) == 0x1_1 bool_xor (OP1[6:6] ^ (sign-extend-32(OP2))[6:6]) == 0x1_1 bool_xor (OP1[7:7] ^ (sign-extend-32(OP2))[7:7]) == 0x1_1) ; ZF := (OP1[31:0] ^ (sign-extend-32(OP2))[31:0]) == 0x0_32 ; SF := (OP1[31:31] ^ (sign-extend-32(OP2))[31:31]) == 0x1_1 ; OF := false)
(xor m32, imm32) -> (OP1 = (0x0_32 o (OP1[31:0] ^ OP2[31:0]))[31:0] ; CF := false ; PF := !((OP1[0:0] ^ OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] ^ OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] ^ OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] ^ OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] ^ OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] ^ OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] ^ OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] ^ OP2[7:7]) == 0x1_1) ; ZF := (OP1[31:0] ^ OP2[31:0]) == 0x0_32 ; SF := (OP1[31:31] ^ OP2[31:31]) == 0x1_1 ; OF := false)
(xor m32, r32) -> (OP1 = (0x0_32 o (OP1[31:0] ^ OP2[31:0]))[31:0] ; CF := false ; PF := !((OP1[0:0] ^ OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] ^ OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] ^ OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] ^ OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] ^ OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] ^ OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] ^ OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] ^ OP2[7:7]) == 0x1_1) ; ZF := (OP1[31:0] ^ OP2[31:0]) == 0x0_32 ; SF := (OP1[31:31] ^ OP2[31:31]) == 0x1_1 ; OF := false)
(xor rax, imm32) -> (OP1 = OP1 ^ (sign-extend-64(OP2)) ; CF := false ; PF := !((OP1[0:0] ^ (sign-extend-64(OP2))[0:0]) == 0x1_1 bool_xor (OP1[1:1] ^ (sign-extend-64(OP2))[1:1]) == 0x1_1 bool_xor (OP1[2:2] ^ (sign-extend-64(OP2))[2:2]) == 0x1_1 bool_xor (OP1[3:3] ^ (sign-extend-64(OP2))[3:3]) == 0x1_1 bool_xor (OP1[4:4] ^ (sign-extend-64(OP2))[4:4]) == 0x1_1 bool_xor (OP1[5:5] ^ (sign-extend-64(OP2))[5:5]) == 0x1_1 bool_xor (OP1[6:6] ^ (sign-extend-64(OP2))[6:6]) == 0x1_1 bool_xor (OP1[7:7] ^ (sign-extend-64(OP2))[7:7]) == 0x1_1) ; ZF := (OP1 ^ (sign-extend-64(OP2))) == 0x0_64 ; SF := (OP1[63:63] ^ (sign-extend-64(OP2))[63:63]) == 0x1_1 ; OF := false)
(xor r64, imm8) -> (OP1 = OP1 ^ (sign-extend-64(OP2)) ; CF := false ; PF := !((OP1[0:0] ^ (sign-extend-64(OP2))[0:0]) == 0x1_1 bool_xor (OP1[1:1] ^ (sign-extend-64(OP2))[1:1]) == 0x1_1 bool_xor (OP1[2:2] ^ (sign-extend-64(OP2))[2:2]) == 0x1_1 bool_xor (OP1[3:3] ^ (sign-extend-64(OP2))[3:3]) == 0x1_1 bool_xor (OP1[4:4] ^ (sign-extend-64(OP2))[4:4]) == 0x1_1 bool_xor (OP1[5:5] ^ (sign-extend-64(OP2))[5:5]) == 0x1_1 bool_xor (OP1[6:6] ^ (sign-extend-64(OP2))[6:6]) == 0x1_1 bool_xor (OP1[7:7] ^ (sign-extend-64(OP2))[7:7]) == 0x1_1) ; ZF := (OP1 ^ (sign-extend-64(OP2))) == 0x0_64 ; SF := (OP1[63:63] ^ (sign-extend-64(OP2))[63:63]) == 0x1_1 ; OF := false)
(xor r64, imm32) -> (OP1 = OP1 ^ (sign-extend-64(OP2)) ; CF := false ; PF := !((OP1[0:0] ^ (sign-extend-64(OP2))[0:0]) == 0x1_1 bool_xor (OP1[1:1] ^ (sign-extend-64(OP2))[1:1]) == 0x1_1 bool_xor (OP1[2:2] ^ (sign-extend-64(OP2))[2:2]) == 0x1_1 bool_xor (OP1[3:3] ^ (sign-extend-64(OP2))[3:3]) == 0x1_1 bool_xor (OP1[4:4] ^ (sign-extend-64(OP2))[4:4]) == 0x1_1 bool_xor (OP1[5:5] ^ (sign-extend-64(OP2))[5:5]) == 0x1_1 bool_xor (OP1[6:6] ^ (sign-extend-64(OP2))[6:6]) == 0x1_1 bool_xor (OP1[7:7] ^ (sign-extend-64(OP2))[7:7]) == 0x1_1) ; ZF := (OP1 ^ (sign-extend-64(OP2))) == 0x0_64 ; SF := (OP1[63:63] ^ (sign-extend-64(OP2))[63:63]) == 0x1_1 ; OF := false)
(xor r64, r64) -> (OP1 = OP1 ^ OP2 ; CF := false ; PF := !((OP1[0:0] ^ OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] ^ OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] ^ OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] ^ OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] ^ OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] ^ OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] ^ OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] ^ OP2[7:7]) == 0x1_1) ; ZF := (OP1 ^ OP2) == 0x0_64 ; SF := (OP1[63:63] ^ OP2[63:63]) == 0x1_1 ; OF := false)
(xor r64, m64) -> (OP1 = OP1 ^ OP2 ; CF := false ; PF := !((OP1[0:0] ^ OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] ^ OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] ^ OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] ^ OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] ^ OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] ^ OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] ^ OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] ^ OP2[7:7]) == 0x1_1) ; ZF := (OP1 ^ OP2) == 0x0_64 ; SF := (OP1[63:63] ^ OP2[63:63]) == 0x1_1 ; OF := false)
(xor m64, imm8) -> (OP1 = OP1 ^ (sign-extend-64(OP2)) ; CF := false ; PF := !((OP1[0:0] ^ (sign-extend-64(OP2))[0:0]) == 0x1_1 bool_xor (OP1[1:1] ^ (sign-extend-64(OP2))[1:1]) == 0x1_1 bool_xor (OP1[2:2] ^ (sign-extend-64(OP2))[2:2]) == 0x1_1 bool_xor (OP1[3:3] ^ (sign-extend-64(OP2))[3:3]) == 0x1_1 bool_xor (OP1[4:4] ^ (sign-extend-64(OP2))[4:4]) == 0x1_1 bool_xor (OP1[5:5] ^ (sign-extend-64(OP2))[5:5]) == 0x1_1 bool_xor (OP1[6:6] ^ (sign-extend-64(OP2))[6:6]) == 0x1_1 bool_xor (OP1[7:7] ^ (sign-extend-64(OP2))[7:7]) == 0x1_1) ; ZF := (OP1 ^ (sign-extend-64(OP2))) == 0x0_64 ; SF := (OP1[63:63] ^ (sign-extend-64(OP2))[63:63]) == 0x1_1 ; OF := false)
(xor m64, imm32) -> (OP1 = OP1 ^ (sign-extend-64(OP2)) ; CF := false ; PF := !((OP1[0:0] ^ (sign-extend-64(OP2))[0:0]) == 0x1_1 bool_xor (OP1[1:1] ^ (sign-extend-64(OP2))[1:1]) == 0x1_1 bool_xor (OP1[2:2] ^ (sign-extend-64(OP2))[2:2]) == 0x1_1 bool_xor (OP1[3:3] ^ (sign-extend-64(OP2))[3:3]) == 0x1_1 bool_xor (OP1[4:4] ^ (sign-extend-64(OP2))[4:4]) == 0x1_1 bool_xor (OP1[5:5] ^ (sign-extend-64(OP2))[5:5]) == 0x1_1 bool_xor (OP1[6:6] ^ (sign-extend-64(OP2))[6:6]) == 0x1_1 bool_xor (OP1[7:7] ^ (sign-extend-64(OP2))[7:7]) == 0x1_1) ; ZF := (OP1 ^ (sign-extend-64(OP2))) == 0x0_64 ; SF := (OP1[63:63] ^ (sign-extend-64(OP2))[63:63]) == 0x1_1 ; OF := false)
(xor m64, r64) -> (OP1 = (OP1 ^ OP2)[63:0] ; CF := false ; PF := !((OP1[0:0] ^ OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] ^ OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] ^ OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] ^ OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] ^ OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] ^ OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] ^ OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] ^ OP2[7:7]) == 0x1_1) ; ZF := (OP1 ^ OP2) == 0x0_64 ; SF := (OP1[63:63] ^ OP2[63:63]) == 0x1_1 ; OF := false)
(xor ax, imm16) -> (OP1 = OP1[63:16] o (OP1[15:0] ^ OP2[15:0]) ; CF := false ; PF := !((OP1[0:0] ^ OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] ^ OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] ^ OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] ^ OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] ^ OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] ^ OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] ^ OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] ^ OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:0] ^ OP2[15:0]) == 0x0_16 ; SF := (OP1[15:15] ^ OP2[15:15]) == 0x1_1 ; OF := false)
(xor r16, imm8) -> (OP1 = OP1[63:16] o (OP1[15:0] ^ (sign-extend-16(OP2))[15:0]) ; CF := false ; PF := !((OP1[0:0] ^ (sign-extend-16(OP2))[0:0]) == 0x1_1 bool_xor (OP1[1:1] ^ (sign-extend-16(OP2))[1:1]) == 0x1_1 bool_xor (OP1[2:2] ^ (sign-extend-16(OP2))[2:2]) == 0x1_1 bool_xor (OP1[3:3] ^ (sign-extend-16(OP2))[3:3]) == 0x1_1 bool_xor (OP1[4:4] ^ (sign-extend-16(OP2))[4:4]) == 0x1_1 bool_xor (OP1[5:5] ^ (sign-extend-16(OP2))[5:5]) == 0x1_1 bool_xor (OP1[6:6] ^ (sign-extend-16(OP2))[6:6]) == 0x1_1 bool_xor (OP1[7:7] ^ (sign-extend-16(OP2))[7:7]) == 0x1_1) ; ZF := (OP1[15:0] ^ (sign-extend-16(OP2))[15:0]) == 0x0_16 ; SF := (OP1[15:15] ^ (sign-extend-16(OP2))[15:15]) == 0x1_1 ; OF := false)
(xor r16, imm16) -> (OP1 = OP1[63:16] o (OP1[15:0] ^ OP2[15:0]) ; CF := false ; PF := !((OP1[0:0] ^ OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] ^ OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] ^ OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] ^ OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] ^ OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] ^ OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] ^ OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] ^ OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:0] ^ OP2[15:0]) == 0x0_16 ; SF := (OP1[15:15] ^ OP2[15:15]) == 0x1_1 ; OF := false)
(xor r16, r16) -> (OP1 = OP1[63:16] o (OP1[15:0] ^ OP2[15:0]) ; CF := false ; PF := !((OP1[0:0] ^ OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] ^ OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] ^ OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] ^ OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] ^ OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] ^ OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] ^ OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] ^ OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:0] ^ OP2[15:0]) == 0x0_16 ; SF := (OP1[15:15] ^ OP2[15:15]) == 0x1_1 ; OF := false)
(xor r16, m16) -> (OP1 = OP1[63:16] o (OP1[15:0] ^ OP2[15:0]) ; CF := false ; PF := !((OP1[0:0] ^ OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] ^ OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] ^ OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] ^ OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] ^ OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] ^ OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] ^ OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] ^ OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:0] ^ OP2[15:0]) == 0x0_16 ; SF := (OP1[15:15] ^ OP2[15:15]) == 0x1_1 ; OF := false)
(xor m16, imm8) -> (OP1 = OP1[63:16] o (OP1[15:0] ^ (sign-extend-16(OP2))[15:0]) ; CF := false ; PF := !((OP1[0:0] ^ (sign-extend-16(OP2))[0:0]) == 0x1_1 bool_xor (OP1[1:1] ^ (sign-extend-16(OP2))[1:1]) == 0x1_1 bool_xor (OP1[2:2] ^ (sign-extend-16(OP2))[2:2]) == 0x1_1 bool_xor (OP1[3:3] ^ (sign-extend-16(OP2))[3:3]) == 0x1_1 bool_xor (OP1[4:4] ^ (sign-extend-16(OP2))[4:4]) == 0x1_1 bool_xor (OP1[5:5] ^ (sign-extend-16(OP2))[5:5]) == 0x1_1 bool_xor (OP1[6:6] ^ (sign-extend-16(OP2))[6:6]) == 0x1_1 bool_xor (OP1[7:7] ^ (sign-extend-16(OP2))[7:7]) == 0x1_1) ; ZF := (OP1[15:0] ^ (sign-extend-16(OP2))[15:0]) == 0x0_16 ; SF := (OP1[15:15] ^ (sign-extend-16(OP2))[15:15]) == 0x1_1 ; OF := false)
(xor m16, imm16) -> (OP1 = (OP1[63:16] o (OP1[15:0] ^ OP2[15:0]))[15:0] ; CF := false ; PF := !((OP1[0:0] ^ OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] ^ OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] ^ OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] ^ OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] ^ OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] ^ OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] ^ OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] ^ OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:0] ^ OP2[15:0]) == 0x0_16 ; SF := (OP1[15:15] ^ OP2[15:15]) == 0x1_1 ; OF := false)
(xor m16, r16) -> (OP1 = (OP1[63:16] o (OP1[15:0] ^ OP2[15:0]))[15:0] ; CF := false ; PF := !((OP1[0:0] ^ OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] ^ OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] ^ OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] ^ OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] ^ OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] ^ OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] ^ OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] ^ OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:0] ^ OP2[15:0]) == 0x0_16 ; SF := (OP1[15:15] ^ OP2[15:15]) == 0x1_1 ; OF := false)
(xorpd xmm, m128) -> (OP1 = OP1[255:128] o (OP1[127:0] ^ OP2[127:0]))
(xorpd xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:0] ^ OP2[127:0]))
(xorps xmm, m128) -> (OP1 = OP1[255:128] o (OP1[127:0] ^ OP2[127:0]))
(xorps xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:0] ^ OP2[127:0]))
