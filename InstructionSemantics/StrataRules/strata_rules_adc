(adc rh, imm8) -> (OP1 = OP1[63:16] o ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[7:0] o OP1[7:0] ; CF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[8:8] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[7:0] == 0x0_8 ; SF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[7:7] == 0x1_1 ; OF := (OP2[7:7] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(OP2[7:7] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[7:7] == 0x1_1))
(adc rh, rh) -> (OP1 = OP1[63:16] o ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[15:8])[7:0] o OP1[7:0] ; CF := ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[15:8])[8:8] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[15:8])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[15:8])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[15:8])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[15:8])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[15:8])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[15:8])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[15:8])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[15:8])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[15:8])[7:0] == 0x0_8 ; SF := ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[15:8])[7:7] == 0x1_1 ; OF := (OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(OP2[15:15] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[15:8])[7:7] == 0x1_1))
(adc rh, r8) -> (OP1 = OP1[63:16] o ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[7:0] o OP1[7:0] ; CF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[8:8] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[7:0] == 0x0_8 ; SF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[7:7] == 0x1_1 ; OF := (OP2[7:7] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(OP2[7:7] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[7:7] == 0x1_1))
(adc rh, m8) -> (OP1 = OP1[63:16] o ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[7:0] o OP1[7:0] ; CF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[8:8] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[7:0] == 0x0_8 ; SF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[7:7] == 0x1_1 ; OF := (OP2[7:7] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(OP2[7:7] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[15:8])[7:7] == 0x1_1))
(adc al, imm8) -> (OP1 = OP1[63:8] o ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:0] ; CF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[8:8] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(OP2[7:7] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(adc r8, imm8) -> (OP1 = OP1[63:8] o ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:0] ; CF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[8:8] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(OP2[7:7] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(adc r8, rh) -> (OP1 = OP1[63:8] o ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[7:0] ; CF := ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[8:8] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (OP2[15:15] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(OP2[15:15] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(adc r8, r8) -> (OP1 = OP1[63:8] o ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:0] ; CF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[8:8] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(OP2[7:7] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(adc r8, m8) -> (OP1 = OP1[63:8] o ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:0] ; CF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[8:8] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(OP2[7:7] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(adc m8, imm8) -> (OP1 = (OP1[63:8] o ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:0])[7:0] ; CF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[8:8] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(OP2[7:7] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(adc m8, rh) -> (OP1 = (OP1[63:8] o ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[7:0])[7:0] ; CF := ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[8:8] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (OP2[15:15] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(OP2[15:15] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[15:8] + 0x1_9 : 0x0_1 o OP2[15:8]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(adc m8, r8) -> (OP1 = (OP1[63:8] o ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:0])[7:0] ; CF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[8:8] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(OP2[7:7] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[7:0] + 0x1_9 : 0x0_1 o OP2[7:0]) + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(adc eax, imm32) -> (OP1 = 0x0_32 o ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:0] ; CF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[32:32] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(OP2[31:31] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(adc r32, imm8) -> (OP1 = 0x0_32 o ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[31:0] ; CF := ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[32:32] == 0x1_1 ; PF := !(((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := ((sign-extend-32(OP2))[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !((sign-extend-32(OP2))[31:31] == 0x1_1 bool_iff ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(adc r32, imm32) -> (OP1 = 0x0_32 o ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:0] ; CF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[32:32] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(OP2[31:31] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(adc r32, r32) -> (OP1 = 0x0_32 o ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:0] ; CF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[32:32] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(OP2[31:31] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(adc r32, m32) -> (OP1 = 0x0_32 o ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:0] ; CF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[32:32] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(OP2[31:31] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(adc m32, imm8) -> (OP1 = 0x0_32 o ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[31:0] ; CF := ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[32:32] == 0x1_1 ; PF := !(((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := ((sign-extend-32(OP2))[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !((sign-extend-32(OP2))[31:31] == 0x1_1 bool_iff ((CF ? 0x0_1 o (sign-extend-32(OP2))[31:0] + 0x1_33 : 0x0_1 o (sign-extend-32(OP2))[31:0]) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(adc m32, imm32) -> (OP1 = (0x0_32 o ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:0])[31:0] ; CF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[32:32] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(OP2[31:31] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(adc m32, r32) -> (OP1 = (0x0_32 o ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:0])[31:0] ; CF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[32:32] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(OP2[31:31] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(adc rax, imm32) -> (OP1 = ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:0] ; CF := ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[64:64] == 0x1_1 ; PF := !(((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := ((sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !((sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:63] == 0x1_1))
(adc r64, imm8) -> (OP1 = ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:0] ; CF := ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[64:64] == 0x1_1 ; PF := !(((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := ((sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !((sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:63] == 0x1_1))
(adc r64, imm32) -> (OP1 = ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:0] ; CF := ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[64:64] == 0x1_1 ; PF := !(((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := ((sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !((sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:63] == 0x1_1))
(adc r64, r64) -> (OP1 = ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[63:0] ; CF := ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[64:64] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (OP2[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(OP2[63:63] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[63:63] == 0x1_1))
(adc r64, m64) -> (OP1 = ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[63:0] ; CF := ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[64:64] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (OP2[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(OP2[63:63] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[63:63] == 0x1_1))
(adc m64, imm8) -> (OP1 = ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:0] ; CF := ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[64:64] == 0x1_1 ; PF := !(((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := ((sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !((sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:63] == 0x1_1))
(adc m64, imm32) -> (OP1 = ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:0] ; CF := ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[64:64] == 0x1_1 ; PF := !(((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := ((sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !((sign-extend-64(OP2))[63:63] == 0x1_1 bool_iff ((CF ? 0x0_1 o (sign-extend-64(OP2)) + 0x1_65 : 0x0_1 o (sign-extend-64(OP2))) + 0x0_1 o OP1)[63:63] == 0x1_1))
(adc m64, r64) -> (OP1 = (((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[63:0])[63:0] ; CF := ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[64:64] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (OP2[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(OP2[63:63] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2 + 0x1_65 : 0x0_1 o OP2) + 0x0_1 o OP1)[63:63] == 0x1_1))
(adc ax, imm16) -> (OP1 = OP1[63:16] o ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:0] ; CF := ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[16:16] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(OP2[15:15] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(adc r16, imm8) -> (OP1 = OP1[63:16] o ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[15:0] ; CF := ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[16:16] == 0x1_1 ; PF := !(((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := ((sign-extend-16(OP2))[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !((sign-extend-16(OP2))[15:15] == 0x1_1 bool_iff ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(adc r16, imm16) -> (OP1 = OP1[63:16] o ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:0] ; CF := ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[16:16] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(OP2[15:15] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(adc r16, r16) -> (OP1 = OP1[63:16] o ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:0] ; CF := ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[16:16] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(OP2[15:15] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(adc r16, m16) -> (OP1 = OP1[63:16] o ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:0] ; CF := ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[16:16] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(OP2[15:15] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(adc m16, imm8) -> (OP1 = OP1[63:16] o ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[15:0] ; CF := ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[16:16] == 0x1_1 ; PF := !(((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := ((sign-extend-16(OP2))[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !((sign-extend-16(OP2))[15:15] == 0x1_1 bool_iff ((CF ? 0x0_1 o (sign-extend-16(OP2))[15:0] + 0x1_17 : 0x0_1 o (sign-extend-16(OP2))[15:0]) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(adc m16, imm16) -> (OP1 = (OP1[63:16] o ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:0])[15:0] ; CF := ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[16:16] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(OP2[15:15] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
(adc m16, r16) -> (OP1 = (OP1[63:16] o ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:0])[15:0] ; CF := ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[16:16] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:0] == 0x0_16 ; SF := ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1 ; OF := (OP2[15:15] == 0x1_1 bool_iff OP1[15:15] == 0x1_1) bool_and !(OP2[15:15] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[15:0] + 0x1_17 : 0x0_1 o OP2[15:0]) + 0x0_1 o OP1[15:0])[15:15] == 0x1_1))
