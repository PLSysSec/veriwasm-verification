(vrcpps xmm, m128) -> (OP1 = 0x0_128 o (approx_reciprocal_single(OP2[127:96]) o (approx_reciprocal_single(OP2[95:64]) o (approx_reciprocal_single(OP2[63:32]) o approx_reciprocal_single(OP2[31:0])))))
(vrcpps xmm, xmm) -> (OP1 = 0x0_128 o (approx_reciprocal_single(OP2[127:96]) o (approx_reciprocal_single(OP2[95:64]) o (approx_reciprocal_single(OP2[63:32]) o approx_reciprocal_single(OP2[31:0])))))
(vrcpps ymm, m256) -> (OP1 = approx_reciprocal_single(OP2[255:224]) o (approx_reciprocal_single(OP2[223:192]) o (approx_reciprocal_single(OP2[191:160]) o (approx_reciprocal_single(OP2[159:128]) o (approx_reciprocal_single(OP2[127:96]) o (approx_reciprocal_single(OP2[95:64]) o (approx_reciprocal_single(OP2[63:32]) o approx_reciprocal_single(OP2[31:0]))))))))
(vrcpps ymm, ymm) -> (OP1 = approx_reciprocal_single(OP2[255:224]) o (approx_reciprocal_single(OP2[223:192]) o (approx_reciprocal_single(OP2[191:160]) o (approx_reciprocal_single(OP2[159:128]) o (approx_reciprocal_single(OP2[127:96]) o (approx_reciprocal_single(OP2[95:64]) o (approx_reciprocal_single(OP2[63:32]) o approx_reciprocal_single(OP2[31:0]))))))))
