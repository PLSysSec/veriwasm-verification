(test rh, imm8) -> (CF := false ; PF := !((OP1[8:8] & OP2[0:0]) == 0x1_1 bool_xor (OP1[9:9] & OP2[1:1]) == 0x1_1 bool_xor (OP1[10:10] & OP2[2:2]) == 0x1_1 bool_xor (OP1[11:11] & OP2[3:3]) == 0x1_1 bool_xor (OP1[12:12] & OP2[4:4]) == 0x1_1 bool_xor (OP1[13:13] & OP2[5:5]) == 0x1_1 bool_xor (OP1[14:14] & OP2[6:6]) == 0x1_1 bool_xor (OP1[15:15] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:8] & OP2[7:0]) == 0x0_8 ; SF := (OP1[15:15] & OP2[7:7]) == 0x1_1 ; OF := false)
(test rh, rh) -> (CF := false ; PF := !((OP1[8:8] & OP2[8:8]) == 0x1_1 bool_xor (OP1[9:9] & OP2[9:9]) == 0x1_1 bool_xor (OP1[10:10] & OP2[10:10]) == 0x1_1 bool_xor (OP1[11:11] & OP2[11:11]) == 0x1_1 bool_xor (OP1[12:12] & OP2[12:12]) == 0x1_1 bool_xor (OP1[13:13] & OP2[13:13]) == 0x1_1 bool_xor (OP1[14:14] & OP2[14:14]) == 0x1_1 bool_xor (OP1[15:15] & OP2[15:15]) == 0x1_1) ; ZF := (OP1[15:8] & OP2[15:8]) == 0x0_8 ; SF := (OP1[15:15] & OP2[15:15]) == 0x1_1 ; OF := false)
(test rh, r8) -> (CF := false ; PF := !((OP1[8:8] & OP2[0:0]) == 0x1_1 bool_xor (OP1[9:9] & OP2[1:1]) == 0x1_1 bool_xor (OP1[10:10] & OP2[2:2]) == 0x1_1 bool_xor (OP1[11:11] & OP2[3:3]) == 0x1_1 bool_xor (OP1[12:12] & OP2[4:4]) == 0x1_1 bool_xor (OP1[13:13] & OP2[5:5]) == 0x1_1 bool_xor (OP1[14:14] & OP2[6:6]) == 0x1_1 bool_xor (OP1[15:15] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:8] & OP2[7:0]) == 0x0_8 ; SF := (OP1[15:15] & OP2[7:7]) == 0x1_1 ; OF := false)
(test al, imm8) -> (CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[7:0] & OP2[7:0]) == 0x0_8 ; SF := (OP1[7:7] & OP2[7:7]) == 0x1_1 ; OF := false)
(test r8, imm8) -> (CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[7:0] & OP2[7:0]) == 0x0_8 ; SF := (OP1[7:7] & OP2[7:7]) == 0x1_1 ; OF := false)
(test r8, rh) -> (CF := false ; PF := !((OP1[0:0] & OP2[8:8]) == 0x1_1 bool_xor (OP1[1:1] & OP2[9:9]) == 0x1_1 bool_xor (OP1[2:2] & OP2[10:10]) == 0x1_1 bool_xor (OP1[3:3] & OP2[11:11]) == 0x1_1 bool_xor (OP1[4:4] & OP2[12:12]) == 0x1_1 bool_xor (OP1[5:5] & OP2[13:13]) == 0x1_1 bool_xor (OP1[6:6] & OP2[14:14]) == 0x1_1 bool_xor (OP1[7:7] & OP2[15:15]) == 0x1_1) ; ZF := (OP1[7:0] & OP2[15:8]) == 0x0_8 ; SF := (OP1[7:7] & OP2[15:15]) == 0x1_1 ; OF := false)
(test r8, r8) -> (CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[7:0] & OP2[7:0]) == 0x0_8 ; SF := (OP1[7:7] & OP2[7:7]) == 0x1_1 ; OF := false)
(test m8, imm8) -> (CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[7:0] & OP2[7:0]) == 0x0_8 ; SF := (OP1[7:7] & OP2[7:7]) == 0x1_1 ; OF := false)
(test m8, rh) -> (CF := false ; PF := !((OP1[0:0] & OP2[8:8]) == 0x1_1 bool_xor (OP1[1:1] & OP2[9:9]) == 0x1_1 bool_xor (OP1[2:2] & OP2[10:10]) == 0x1_1 bool_xor (OP1[3:3] & OP2[11:11]) == 0x1_1 bool_xor (OP1[4:4] & OP2[12:12]) == 0x1_1 bool_xor (OP1[5:5] & OP2[13:13]) == 0x1_1 bool_xor (OP1[6:6] & OP2[14:14]) == 0x1_1 bool_xor (OP1[7:7] & OP2[15:15]) == 0x1_1) ; ZF := (OP1[7:0] & OP2[15:8]) == 0x0_8 ; SF := (OP1[7:7] & OP2[15:15]) == 0x1_1 ; OF := false)
(test m8, r8) -> (CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[7:0] & OP2[7:0]) == 0x0_8 ; SF := (OP1[7:7] & OP2[7:7]) == 0x1_1 ; OF := false)
(test eax, imm32) -> (CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[31:0] & OP2[31:0]) == 0x0_32 ; SF := (OP1[31:31] & OP2[31:31]) == 0x1_1 ; OF := false)
(test r32, imm32) -> (CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[31:0] & OP2[31:0]) == 0x0_32 ; SF := (OP1[31:31] & OP2[31:31]) == 0x1_1 ; OF := false)
(test r32, r32) -> (CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[31:0] & OP2[31:0]) == 0x0_32 ; SF := (OP1[31:31] & OP2[31:31]) == 0x1_1 ; OF := false)
(test m32, imm32) -> (CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[31:0] & OP2[31:0]) == 0x0_32 ; SF := (OP1[31:31] & OP2[31:31]) == 0x1_1 ; OF := false)
(test m32, r32) -> (CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[31:0] & OP2[31:0]) == 0x0_32 ; SF := (OP1[31:31] & OP2[31:31]) == 0x1_1 ; OF := false)
(test rax, imm32) -> (CF := false ; PF := !((OP1[0:0] & (sign-extend-64(OP2))[0:0]) == 0x1_1 bool_xor (OP1[1:1] & (sign-extend-64(OP2))[1:1]) == 0x1_1 bool_xor (OP1[2:2] & (sign-extend-64(OP2))[2:2]) == 0x1_1 bool_xor (OP1[3:3] & (sign-extend-64(OP2))[3:3]) == 0x1_1 bool_xor (OP1[4:4] & (sign-extend-64(OP2))[4:4]) == 0x1_1 bool_xor (OP1[5:5] & (sign-extend-64(OP2))[5:5]) == 0x1_1 bool_xor (OP1[6:6] & (sign-extend-64(OP2))[6:6]) == 0x1_1 bool_xor (OP1[7:7] & (sign-extend-64(OP2))[7:7]) == 0x1_1) ; ZF := (OP1 & (sign-extend-64(OP2))) == 0x0_64 ; SF := (OP1[63:63] & (sign-extend-64(OP2))[63:63]) == 0x1_1 ; OF := false)
(test r64, imm32) -> (CF := false ; PF := !((OP1[0:0] & (sign-extend-64(OP2))[0:0]) == 0x1_1 bool_xor (OP1[1:1] & (sign-extend-64(OP2))[1:1]) == 0x1_1 bool_xor (OP1[2:2] & (sign-extend-64(OP2))[2:2]) == 0x1_1 bool_xor (OP1[3:3] & (sign-extend-64(OP2))[3:3]) == 0x1_1 bool_xor (OP1[4:4] & (sign-extend-64(OP2))[4:4]) == 0x1_1 bool_xor (OP1[5:5] & (sign-extend-64(OP2))[5:5]) == 0x1_1 bool_xor (OP1[6:6] & (sign-extend-64(OP2))[6:6]) == 0x1_1 bool_xor (OP1[7:7] & (sign-extend-64(OP2))[7:7]) == 0x1_1) ; ZF := (OP1 & (sign-extend-64(OP2))) == 0x0_64 ; SF := (OP1[63:63] & (sign-extend-64(OP2))[63:63]) == 0x1_1 ; OF := false)
(test r64, r64) -> (CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1 & OP2) == 0x0_64 ; SF := (OP1[63:63] & OP2[63:63]) == 0x1_1 ; OF := false)
(test m64, imm32) -> (CF := false ; PF := !((OP1[0:0] & (sign-extend-64(OP2))[0:0]) == 0x1_1 bool_xor (OP1[1:1] & (sign-extend-64(OP2))[1:1]) == 0x1_1 bool_xor (OP1[2:2] & (sign-extend-64(OP2))[2:2]) == 0x1_1 bool_xor (OP1[3:3] & (sign-extend-64(OP2))[3:3]) == 0x1_1 bool_xor (OP1[4:4] & (sign-extend-64(OP2))[4:4]) == 0x1_1 bool_xor (OP1[5:5] & (sign-extend-64(OP2))[5:5]) == 0x1_1 bool_xor (OP1[6:6] & (sign-extend-64(OP2))[6:6]) == 0x1_1 bool_xor (OP1[7:7] & (sign-extend-64(OP2))[7:7]) == 0x1_1) ; ZF := (OP1 & (sign-extend-64(OP2))) == 0x0_64 ; SF := (OP1[63:63] & (sign-extend-64(OP2))[63:63]) == 0x1_1 ; OF := false)
(test m64, r64) -> (CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1 & OP2) == 0x0_64 ; SF := (OP1[63:63] & OP2[63:63]) == 0x1_1 ; OF := false)
(test ax, imm16) -> (CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:0] & OP2[15:0]) == 0x0_16 ; SF := (OP1[15:15] & OP2[15:15]) == 0x1_1 ; OF := false)
(test r16, imm16) -> (CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:0] & OP2[15:0]) == 0x0_16 ; SF := (OP1[15:15] & OP2[15:15]) == 0x1_1 ; OF := false)
(test r16, r16) -> (CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:0] & OP2[15:0]) == 0x0_16 ; SF := (OP1[15:15] & OP2[15:15]) == 0x1_1 ; OF := false)
(test m16, imm16) -> (CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:0] & OP2[15:0]) == 0x0_16 ; SF := (OP1[15:15] & OP2[15:15]) == 0x1_1 ; OF := false)
(test m16, r16) -> (CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[15:0] & OP2[15:0]) == 0x0_16 ; SF := (OP1[15:15] & OP2[15:15]) == 0x1_1 ; OF := false)
