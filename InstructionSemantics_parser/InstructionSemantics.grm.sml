functor InstructionSemanticsLrValsFun(structure Token : TOKEN)
 : sig structure ParserData : PARSER_DATA
       structure Tokens : InstructionSemantics_TOKENS
   end
 = 
struct
structure ParserData=
struct
structure Header = 
struct
(*#line 1.2 "InstructionSemantics.grm"*)

(*#line 13.1 "InstructionSemantics.grm.sml"*)
end
structure LrTable = Token.LrTable
structure Token = Token
local open LrTable in 
val table=let val actionRows =
"\
\\001\000\001\000\098\004\240\003\014\004\241\003\013\004\242\003\012\004\
\\243\003\011\004\244\003\010\004\245\003\009\004\246\003\008\004\
\\247\003\007\004\248\003\006\004\005\004\005\004\006\004\004\004\
\\007\004\003\004\008\004\002\004\014\004\097\004\026\004\096\004\
\\027\004\095\004\033\004\094\004\034\004\093\004\035\004\092\004\
\\036\004\091\004\037\004\090\004\038\004\089\004\039\004\088\004\
\\040\004\087\004\057\004\086\004\058\004\085\004\059\004\084\004\
\\060\004\083\004\061\004\082\004\062\004\081\004\063\004\080\004\
\\064\004\079\004\065\004\078\004\066\004\077\004\067\004\076\004\
\\068\004\075\004\069\004\074\004\070\004\073\004\071\004\072\004\
\\072\004\071\004\073\004\070\004\074\004\069\004\075\004\068\004\
\\076\004\067\004\077\004\066\004\078\004\065\004\079\004\064\004\
\\080\004\063\004\081\004\062\004\082\004\061\004\083\004\060\004\
\\084\004\059\004\085\004\058\004\086\004\057\004\087\004\056\004\
\\088\004\055\004\089\004\054\004\090\004\053\004\091\004\052\004\
\\092\004\051\004\093\004\050\004\094\004\049\004\095\004\048\004\
\\096\004\047\004\097\004\046\004\098\004\045\004\099\004\044\004\
\\100\004\043\004\101\004\042\004\102\004\041\004\103\004\040\004\
\\104\004\039\004\105\004\038\004\106\004\037\004\107\004\036\004\
\\108\004\035\004\109\004\034\004\110\004\033\004\111\004\032\004\
\\112\004\031\004\000\000\
\\001\000\001\000\181\004\000\000\
\\001\000\001\000\183\004\000\000\
\\001\000\001\000\192\004\000\000\
\\001\000\002\000\225\003\003\000\224\003\004\000\223\003\005\000\222\003\
\\006\000\221\003\007\000\220\003\008\000\219\003\009\000\218\003\
\\010\000\217\003\011\000\216\003\012\000\215\003\013\000\214\003\
\\014\000\213\003\015\000\212\003\016\000\211\003\017\000\210\003\
\\018\000\209\003\019\000\208\003\020\000\207\003\021\000\206\003\
\\022\000\205\003\023\000\204\003\024\000\203\003\025\000\202\003\
\\026\000\201\003\027\000\200\003\028\000\199\003\029\000\198\003\
\\030\000\197\003\031\000\196\003\032\000\195\003\033\000\194\003\
\\034\000\193\003\035\000\192\003\036\000\191\003\037\000\190\003\
\\038\000\189\003\039\000\188\003\040\000\187\003\041\000\186\003\
\\042\000\185\003\043\000\184\003\044\000\183\003\045\000\182\003\
\\046\000\181\003\047\000\180\003\048\000\179\003\049\000\178\003\
\\050\000\177\003\051\000\176\003\052\000\175\003\053\000\174\003\
\\054\000\173\003\055\000\172\003\056\000\171\003\057\000\170\003\
\\058\000\169\003\059\000\168\003\060\000\167\003\061\000\166\003\
\\062\000\165\003\063\000\164\003\064\000\163\003\065\000\162\003\
\\066\000\161\003\067\000\160\003\068\000\159\003\069\000\158\003\
\\070\000\157\003\071\000\156\003\072\000\155\003\073\000\154\003\
\\074\000\153\003\075\000\152\003\076\000\151\003\077\000\150\003\
\\078\000\149\003\079\000\148\003\080\000\147\003\081\000\146\003\
\\082\000\145\003\083\000\144\003\084\000\143\003\085\000\142\003\
\\086\000\141\003\087\000\140\003\088\000\139\003\089\000\138\003\
\\090\000\137\003\091\000\136\003\092\000\135\003\093\000\134\003\
\\094\000\133\003\095\000\132\003\096\000\131\003\097\000\130\003\
\\098\000\129\003\099\000\128\003\100\000\127\003\101\000\126\003\
\\102\000\125\003\103\000\124\003\104\000\123\003\105\000\122\003\
\\106\000\121\003\107\000\120\003\108\000\119\003\109\000\118\003\
\\110\000\117\003\111\000\116\003\112\000\115\003\113\000\114\003\
\\114\000\113\003\115\000\112\003\116\000\111\003\117\000\110\003\
\\118\000\109\003\119\000\108\003\120\000\107\003\121\000\106\003\
\\122\000\105\003\123\000\104\003\124\000\103\003\125\000\102\003\
\\126\000\101\003\127\000\100\003\128\000\099\003\129\000\098\003\
\\130\000\097\003\131\000\096\003\132\000\095\003\133\000\094\003\
\\134\000\093\003\135\000\092\003\136\000\091\003\137\000\090\003\
\\138\000\089\003\139\000\088\003\140\000\087\003\141\000\086\003\
\\142\000\085\003\143\000\084\003\144\000\083\003\145\000\082\003\
\\146\000\081\003\147\000\080\003\148\000\079\003\149\000\078\003\
\\150\000\077\003\151\000\076\003\152\000\075\003\153\000\074\003\
\\154\000\073\003\155\000\072\003\156\000\071\003\157\000\070\003\
\\158\000\069\003\159\000\068\003\160\000\067\003\161\000\066\003\
\\162\000\065\003\163\000\064\003\164\000\063\003\165\000\062\003\
\\166\000\061\003\167\000\060\003\168\000\059\003\169\000\058\003\
\\170\000\057\003\171\000\056\003\172\000\055\003\173\000\054\003\
\\174\000\053\003\175\000\052\003\176\000\051\003\177\000\050\003\
\\178\000\049\003\179\000\048\003\180\000\047\003\181\000\046\003\
\\182\000\045\003\183\000\044\003\184\000\043\003\185\000\042\003\
\\186\000\041\003\187\000\040\003\188\000\039\003\189\000\038\003\
\\190\000\037\003\191\000\036\003\192\000\035\003\193\000\034\003\
\\194\000\033\003\195\000\032\003\196\000\031\003\197\000\030\003\
\\198\000\029\003\199\000\028\003\200\000\027\003\201\000\026\003\
\\202\000\025\003\203\000\024\003\204\000\023\003\205\000\022\003\
\\206\000\021\003\207\000\020\003\208\000\019\003\209\000\018\003\
\\210\000\017\003\211\000\016\003\212\000\015\003\213\000\014\003\
\\214\000\013\003\215\000\012\003\216\000\011\003\217\000\010\003\
\\218\000\009\003\219\000\008\003\220\000\007\003\221\000\006\003\
\\222\000\005\003\223\000\004\003\224\000\003\003\225\000\002\003\
\\226\000\001\003\227\000\000\003\228\000\255\002\229\000\254\002\
\\230\000\253\002\231\000\252\002\232\000\251\002\233\000\250\002\
\\234\000\249\002\235\000\248\002\236\000\247\002\237\000\246\002\
\\238\000\245\002\239\000\244\002\240\000\243\002\241\000\242\002\
\\242\000\241\002\243\000\240\002\244\000\239\002\245\000\238\002\
\\246\000\237\002\247\000\236\002\248\000\235\002\249\000\234\002\
\\250\000\233\002\251\000\232\002\252\000\231\002\253\000\230\002\
\\254\000\229\002\255\000\228\002\000\001\227\002\001\001\226\002\
\\002\001\225\002\003\001\224\002\004\001\223\002\005\001\222\002\
\\006\001\221\002\007\001\220\002\008\001\219\002\009\001\218\002\
\\010\001\217\002\011\001\216\002\012\001\215\002\013\001\214\002\
\\014\001\213\002\015\001\212\002\016\001\211\002\017\001\210\002\
\\018\001\209\002\019\001\208\002\020\001\207\002\021\001\206\002\
\\022\001\205\002\023\001\204\002\024\001\203\002\025\001\202\002\
\\026\001\201\002\027\001\200\002\028\001\199\002\029\001\198\002\
\\030\001\197\002\031\001\196\002\032\001\195\002\033\001\194\002\
\\034\001\193\002\035\001\192\002\036\001\191\002\037\001\190\002\
\\038\001\189\002\039\001\188\002\040\001\187\002\041\001\186\002\
\\042\001\185\002\043\001\184\002\044\001\183\002\045\001\182\002\
\\046\001\181\002\047\001\180\002\048\001\179\002\049\001\178\002\
\\050\001\177\002\051\001\176\002\052\001\175\002\053\001\174\002\
\\054\001\173\002\055\001\172\002\056\001\171\002\057\001\170\002\
\\058\001\169\002\059\001\168\002\060\001\167\002\061\001\166\002\
\\062\001\165\002\063\001\164\002\064\001\163\002\065\001\162\002\
\\066\001\161\002\067\001\160\002\068\001\159\002\069\001\158\002\
\\070\001\157\002\071\001\156\002\072\001\155\002\073\001\154\002\
\\074\001\153\002\075\001\152\002\076\001\151\002\077\001\150\002\
\\078\001\149\002\079\001\148\002\080\001\147\002\081\001\146\002\
\\082\001\145\002\083\001\144\002\084\001\143\002\085\001\142\002\
\\086\001\141\002\087\001\140\002\088\001\139\002\089\001\138\002\
\\090\001\137\002\091\001\136\002\092\001\135\002\093\001\134\002\
\\094\001\133\002\095\001\132\002\096\001\131\002\097\001\130\002\
\\098\001\129\002\099\001\128\002\100\001\127\002\101\001\126\002\
\\102\001\125\002\103\001\124\002\104\001\123\002\105\001\122\002\
\\106\001\121\002\107\001\120\002\108\001\119\002\109\001\118\002\
\\110\001\117\002\111\001\116\002\112\001\115\002\113\001\114\002\
\\114\001\113\002\115\001\112\002\116\001\111\002\117\001\110\002\
\\118\001\109\002\119\001\108\002\120\001\107\002\121\001\106\002\
\\122\001\105\002\123\001\104\002\124\001\103\002\125\001\102\002\
\\126\001\101\002\127\001\100\002\128\001\099\002\129\001\098\002\
\\130\001\097\002\131\001\096\002\132\001\095\002\133\001\094\002\
\\134\001\093\002\135\001\092\002\136\001\091\002\137\001\090\002\
\\138\001\089\002\139\001\088\002\140\001\087\002\141\001\086\002\
\\142\001\085\002\143\001\084\002\144\001\083\002\145\001\082\002\
\\146\001\081\002\147\001\080\002\148\001\079\002\149\001\078\002\
\\150\001\077\002\151\001\076\002\152\001\075\002\153\001\074\002\
\\154\001\073\002\155\001\072\002\156\001\071\002\157\001\070\002\
\\158\001\069\002\159\001\068\002\160\001\067\002\161\001\066\002\
\\162\001\065\002\163\001\064\002\164\001\063\002\165\001\062\002\
\\166\001\061\002\167\001\060\002\168\001\059\002\169\001\058\002\
\\170\001\057\002\171\001\056\002\172\001\055\002\173\001\054\002\
\\174\001\053\002\175\001\052\002\176\001\051\002\177\001\050\002\
\\178\001\049\002\179\001\048\002\180\001\047\002\181\001\046\002\
\\182\001\045\002\183\001\044\002\184\001\043\002\185\001\042\002\
\\186\001\041\002\187\001\040\002\188\001\039\002\189\001\038\002\
\\190\001\037\002\191\001\036\002\192\001\035\002\193\001\034\002\
\\194\001\033\002\195\001\032\002\196\001\031\002\197\001\030\002\
\\198\001\029\002\199\001\028\002\200\001\027\002\201\001\026\002\
\\202\001\025\002\203\001\024\002\204\001\023\002\205\001\022\002\
\\206\001\021\002\207\001\020\002\208\001\019\002\209\001\018\002\
\\210\001\017\002\211\001\016\002\212\001\015\002\213\001\014\002\
\\214\001\013\002\215\001\012\002\216\001\011\002\217\001\010\002\
\\218\001\009\002\219\001\008\002\220\001\007\002\221\001\006\002\
\\222\001\005\002\223\001\004\002\224\001\003\002\225\001\002\002\
\\226\001\001\002\227\001\000\002\228\001\255\001\229\001\254\001\
\\230\001\253\001\231\001\252\001\232\001\251\001\233\001\250\001\
\\234\001\249\001\235\001\248\001\236\001\247\001\237\001\246\001\
\\238\001\245\001\239\001\244\001\240\001\243\001\241\001\242\001\
\\242\001\241\001\243\001\240\001\244\001\239\001\245\001\238\001\
\\246\001\237\001\247\001\236\001\248\001\235\001\249\001\234\001\
\\250\001\233\001\251\001\232\001\252\001\231\001\253\001\230\001\
\\254\001\229\001\255\001\228\001\000\002\227\001\001\002\226\001\
\\002\002\225\001\003\002\224\001\004\002\223\001\005\002\222\001\
\\006\002\221\001\007\002\220\001\008\002\219\001\009\002\218\001\
\\010\002\217\001\011\002\216\001\012\002\215\001\013\002\214\001\
\\014\002\213\001\015\002\212\001\016\002\211\001\017\002\210\001\
\\018\002\209\001\019\002\208\001\020\002\207\001\021\002\206\001\
\\022\002\205\001\023\002\204\001\024\002\203\001\025\002\202\001\
\\026\002\201\001\027\002\200\001\028\002\199\001\029\002\198\001\
\\030\002\197\001\031\002\196\001\032\002\195\001\033\002\194\001\
\\034\002\193\001\035\002\192\001\036\002\191\001\037\002\190\001\
\\038\002\189\001\039\002\188\001\040\002\187\001\041\002\186\001\
\\042\002\185\001\043\002\184\001\044\002\183\001\045\002\182\001\
\\046\002\181\001\047\002\180\001\048\002\179\001\049\002\178\001\
\\050\002\177\001\051\002\176\001\052\002\175\001\053\002\174\001\
\\054\002\173\001\055\002\172\001\056\002\171\001\057\002\170\001\
\\058\002\169\001\059\002\168\001\060\002\167\001\061\002\166\001\
\\062\002\165\001\063\002\164\001\064\002\163\001\065\002\162\001\
\\066\002\161\001\067\002\160\001\068\002\159\001\069\002\158\001\
\\070\002\157\001\071\002\156\001\072\002\155\001\073\002\154\001\
\\074\002\153\001\075\002\152\001\076\002\151\001\077\002\150\001\
\\078\002\149\001\079\002\148\001\080\002\147\001\081\002\146\001\
\\082\002\145\001\083\002\144\001\084\002\143\001\085\002\142\001\
\\086\002\141\001\087\002\140\001\088\002\139\001\089\002\138\001\
\\090\002\137\001\091\002\136\001\092\002\135\001\093\002\134\001\
\\094\002\133\001\095\002\132\001\096\002\131\001\097\002\130\001\
\\098\002\129\001\099\002\128\001\100\002\127\001\101\002\126\001\
\\102\002\125\001\103\002\124\001\104\002\123\001\105\002\122\001\
\\106\002\121\001\107\002\120\001\108\002\119\001\109\002\118\001\
\\110\002\117\001\111\002\116\001\112\002\115\001\113\002\114\001\
\\114\002\113\001\115\002\112\001\116\002\111\001\117\002\110\001\
\\118\002\109\001\119\002\108\001\120\002\107\001\121\002\106\001\
\\122\002\105\001\123\002\104\001\124\002\103\001\125\002\102\001\
\\126\002\101\001\127\002\100\001\128\002\099\001\129\002\098\001\
\\130\002\097\001\131\002\096\001\132\002\095\001\133\002\094\001\
\\134\002\093\001\135\002\092\001\136\002\091\001\137\002\090\001\
\\138\002\089\001\139\002\088\001\140\002\087\001\141\002\086\001\
\\142\002\085\001\143\002\084\001\144\002\083\001\145\002\082\001\
\\146\002\081\001\147\002\080\001\148\002\079\001\149\002\078\001\
\\150\002\077\001\151\002\076\001\152\002\075\001\153\002\074\001\
\\154\002\073\001\155\002\072\001\156\002\071\001\157\002\070\001\
\\158\002\069\001\159\002\068\001\160\002\067\001\161\002\066\001\
\\162\002\065\001\163\002\064\001\164\002\063\001\165\002\062\001\
\\166\002\061\001\167\002\060\001\168\002\059\001\169\002\058\001\
\\170\002\057\001\171\002\056\001\172\002\055\001\173\002\054\001\
\\174\002\053\001\175\002\052\001\176\002\051\001\177\002\050\001\
\\178\002\049\001\179\002\048\001\180\002\047\001\181\002\046\001\
\\182\002\045\001\183\002\044\001\184\002\043\001\185\002\042\001\
\\186\002\041\001\187\002\040\001\188\002\039\001\189\002\038\001\
\\190\002\037\001\191\002\036\001\192\002\035\001\193\002\034\001\
\\194\002\033\001\195\002\032\001\196\002\031\001\197\002\030\001\
\\198\002\029\001\199\002\028\001\200\002\027\001\201\002\026\001\
\\202\002\025\001\203\002\024\001\204\002\023\001\205\002\022\001\
\\206\002\021\001\207\002\020\001\208\002\019\001\209\002\018\001\
\\210\002\017\001\211\002\016\001\212\002\015\001\213\002\014\001\
\\214\002\013\001\215\002\012\001\216\002\011\001\217\002\010\001\
\\218\002\009\001\219\002\008\001\220\002\007\001\221\002\006\001\
\\222\002\005\001\223\002\004\001\224\002\003\001\225\002\002\001\
\\226\002\001\001\227\002\000\001\228\002\255\000\229\002\254\000\
\\230\002\253\000\231\002\252\000\232\002\251\000\233\002\250\000\
\\234\002\249\000\235\002\248\000\236\002\247\000\237\002\246\000\
\\238\002\245\000\239\002\244\000\240\002\243\000\241\002\242\000\
\\242\002\241\000\243\002\240\000\244\002\239\000\245\002\238\000\
\\246\002\237\000\247\002\236\000\248\002\235\000\249\002\234\000\
\\250\002\233\000\251\002\232\000\252\002\231\000\253\002\230\000\
\\254\002\229\000\255\002\228\000\000\003\227\000\001\003\226\000\
\\002\003\225\000\003\003\224\000\004\003\223\000\005\003\222\000\
\\006\003\221\000\007\003\220\000\008\003\219\000\009\003\218\000\
\\010\003\217\000\011\003\216\000\012\003\215\000\013\003\214\000\
\\014\003\213\000\015\003\212\000\016\003\211\000\017\003\210\000\
\\018\003\209\000\019\003\208\000\020\003\207\000\021\003\206\000\
\\022\003\205\000\023\003\204\000\024\003\203\000\025\003\202\000\
\\026\003\201\000\027\003\200\000\028\003\199\000\029\003\198\000\
\\030\003\197\000\031\003\196\000\032\003\195\000\033\003\194\000\
\\034\003\193\000\035\003\192\000\036\003\191\000\037\003\190\000\
\\038\003\189\000\039\003\188\000\040\003\187\000\041\003\186\000\
\\042\003\185\000\043\003\184\000\044\003\183\000\045\003\182\000\
\\046\003\181\000\047\003\180\000\048\003\179\000\049\003\178\000\
\\050\003\177\000\051\003\176\000\052\003\175\000\053\003\174\000\
\\054\003\173\000\055\003\172\000\056\003\171\000\057\003\170\000\
\\058\003\169\000\059\003\168\000\060\003\167\000\061\003\166\000\
\\062\003\165\000\063\003\164\000\064\003\163\000\065\003\162\000\
\\066\003\161\000\067\003\160\000\068\003\159\000\069\003\158\000\
\\070\003\157\000\071\003\156\000\072\003\155\000\073\003\154\000\
\\074\003\153\000\075\003\152\000\076\003\151\000\077\003\150\000\
\\078\003\149\000\079\003\148\000\080\003\147\000\081\003\146\000\
\\082\003\145\000\083\003\144\000\084\003\143\000\085\003\142\000\
\\086\003\141\000\087\003\140\000\088\003\139\000\089\003\138\000\
\\090\003\137\000\091\003\136\000\092\003\135\000\093\003\134\000\
\\094\003\133\000\095\003\132\000\096\003\131\000\097\003\130\000\
\\098\003\129\000\099\003\128\000\100\003\127\000\101\003\126\000\
\\102\003\125\000\103\003\124\000\104\003\123\000\105\003\122\000\
\\106\003\121\000\107\003\120\000\108\003\119\000\109\003\118\000\
\\110\003\117\000\111\003\116\000\112\003\115\000\113\003\114\000\
\\114\003\113\000\115\003\112\000\116\003\111\000\117\003\110\000\
\\118\003\109\000\119\003\108\000\120\003\107\000\121\003\106\000\
\\122\003\105\000\123\003\104\000\124\003\103\000\125\003\102\000\
\\126\003\101\000\127\003\100\000\128\003\099\000\129\003\098\000\
\\130\003\097\000\131\003\096\000\132\003\095\000\133\003\094\000\
\\134\003\093\000\135\003\092\000\136\003\091\000\137\003\090\000\
\\138\003\089\000\139\003\088\000\140\003\087\000\141\003\086\000\
\\142\003\085\000\143\003\084\000\144\003\083\000\145\003\082\000\
\\146\003\081\000\147\003\080\000\148\003\079\000\149\003\078\000\
\\150\003\077\000\151\003\076\000\152\003\075\000\153\003\074\000\
\\154\003\073\000\155\003\072\000\156\003\071\000\157\003\070\000\
\\158\003\069\000\159\003\068\000\160\003\067\000\161\003\066\000\
\\162\003\065\000\163\003\064\000\164\003\063\000\165\003\062\000\
\\166\003\061\000\167\003\060\000\168\003\059\000\169\003\058\000\
\\170\003\057\000\171\003\056\000\172\003\055\000\173\003\054\000\
\\174\003\053\000\175\003\052\000\176\003\051\000\177\003\050\000\
\\178\003\049\000\179\003\048\000\180\003\047\000\181\003\046\000\
\\182\003\045\000\183\003\044\000\184\003\043\000\185\003\042\000\
\\186\003\041\000\187\003\040\000\188\003\039\000\189\003\038\000\
\\190\003\037\000\191\003\036\000\192\003\035\000\193\003\034\000\
\\194\003\033\000\195\003\032\000\196\003\031\000\197\003\030\000\
\\198\003\029\000\199\003\028\000\200\003\027\000\201\003\026\000\
\\202\003\025\000\203\003\024\000\204\003\023\000\205\003\022\000\
\\206\003\021\000\207\003\020\000\208\003\019\000\209\003\018\000\
\\210\003\017\000\211\003\016\000\212\003\015\000\213\003\014\000\
\\214\003\013\000\215\003\012\000\216\003\011\000\000\000\
\\001\000\217\003\251\003\218\003\250\003\219\003\249\003\220\003\248\003\
\\221\003\247\003\222\003\246\003\223\003\245\003\224\003\244\003\
\\227\003\243\003\228\003\242\003\229\003\241\003\230\003\240\003\
\\231\003\239\003\232\003\238\003\235\003\237\003\236\003\236\003\
\\237\003\235\003\238\003\234\003\000\000\
\\001\000\217\003\251\003\218\003\250\003\219\003\249\003\220\003\248\003\
\\221\003\247\003\222\003\246\003\223\003\245\003\224\003\244\003\
\\227\003\243\003\228\003\242\003\229\003\241\003\230\003\240\003\
\\231\003\239\003\232\003\238\003\235\003\237\003\236\003\236\003\
\\237\003\235\003\238\003\234\003\015\004\233\003\000\000\
\\001\000\009\004\101\004\015\004\100\004\000\000\
\\001\000\009\004\185\004\012\004\127\004\023\004\126\004\025\004\125\004\
\\028\004\124\004\029\004\123\004\030\004\122\004\031\004\121\004\
\\032\004\120\004\041\004\119\004\042\004\118\004\043\004\117\004\
\\044\004\116\004\045\004\115\004\046\004\114\004\047\004\113\004\
\\048\004\112\004\049\004\111\004\050\004\110\004\051\004\109\004\
\\052\004\108\004\053\004\107\004\054\004\106\004\055\004\105\004\
\\056\004\104\004\000\000\
\\001\000\009\004\186\004\012\004\127\004\023\004\126\004\025\004\125\004\
\\028\004\124\004\029\004\123\004\030\004\122\004\031\004\121\004\
\\032\004\120\004\041\004\119\004\042\004\118\004\043\004\117\004\
\\044\004\116\004\045\004\115\004\046\004\114\004\047\004\113\004\
\\048\004\112\004\049\004\111\004\050\004\110\004\051\004\109\004\
\\052\004\108\004\053\004\107\004\054\004\106\004\055\004\105\004\
\\056\004\104\004\000\000\
\\001\000\009\004\194\004\012\004\127\004\023\004\126\004\025\004\125\004\
\\028\004\124\004\029\004\123\004\030\004\122\004\031\004\121\004\
\\032\004\120\004\041\004\119\004\042\004\118\004\043\004\117\004\
\\044\004\116\004\045\004\115\004\046\004\114\004\047\004\113\004\
\\048\004\112\004\049\004\111\004\050\004\110\004\051\004\109\004\
\\052\004\108\004\053\004\107\004\054\004\106\004\055\004\105\004\
\\056\004\104\004\000\000\
\\001\000\011\004\187\004\012\004\127\004\023\004\126\004\025\004\125\004\
\\028\004\124\004\029\004\123\004\030\004\122\004\031\004\121\004\
\\032\004\120\004\041\004\119\004\042\004\118\004\043\004\117\004\
\\044\004\116\004\045\004\115\004\046\004\114\004\047\004\113\004\
\\048\004\112\004\049\004\111\004\050\004\110\004\051\004\109\004\
\\052\004\108\004\053\004\107\004\054\004\106\004\055\004\105\004\
\\056\004\104\004\000\000\
\\001\000\011\004\188\004\000\000\
\\001\000\012\004\127\004\015\004\182\004\023\004\126\004\025\004\125\004\
\\028\004\124\004\029\004\123\004\030\004\122\004\031\004\121\004\
\\032\004\120\004\041\004\119\004\042\004\118\004\043\004\117\004\
\\044\004\116\004\045\004\115\004\046\004\114\004\047\004\113\004\
\\048\004\112\004\049\004\111\004\050\004\110\004\051\004\109\004\
\\052\004\108\004\053\004\107\004\054\004\106\004\055\004\105\004\
\\056\004\104\004\000\000\
\\001\000\012\004\127\004\015\004\193\004\023\004\126\004\025\004\125\004\
\\028\004\124\004\029\004\123\004\030\004\122\004\031\004\121\004\
\\032\004\120\004\041\004\119\004\042\004\118\004\043\004\117\004\
\\044\004\116\004\045\004\115\004\046\004\114\004\047\004\113\004\
\\048\004\112\004\049\004\111\004\050\004\110\004\051\004\109\004\
\\052\004\108\004\053\004\107\004\054\004\106\004\055\004\105\004\
\\056\004\104\004\000\000\
\\001\000\012\004\127\004\015\004\197\004\023\004\126\004\025\004\125\004\
\\028\004\124\004\029\004\123\004\030\004\122\004\031\004\121\004\
\\032\004\120\004\041\004\119\004\042\004\118\004\043\004\117\004\
\\044\004\116\004\045\004\115\004\046\004\114\004\047\004\113\004\
\\048\004\112\004\049\004\111\004\050\004\110\004\051\004\109\004\
\\052\004\108\004\053\004\107\004\054\004\106\004\055\004\105\004\
\\056\004\104\004\000\000\
\\001\000\013\004\195\004\000\000\
\\001\000\014\004\226\003\000\000\
\\001\000\014\004\102\004\000\000\
\\001\000\014\004\103\004\000\000\
\\001\000\015\004\015\004\000\000\
\\001\000\015\004\020\004\000\000\
\\001\000\015\004\184\004\000\000\
\\001\000\018\004\017\004\000\000\
\\001\000\019\004\007\000\000\000\
\\001\000\020\004\000\000\000\000\
\\001\000\021\004\154\004\000\000\
\\001\000\022\004\008\000\000\000\
\\001\000\024\004\019\004\000\000\
\\199\004\000\000\
\\200\004\000\000\
\\201\004\014\004\006\000\022\004\005\000\000\000\
\\202\004\000\000\
\\203\004\000\000\
\\204\004\000\000\
\\205\004\000\000\
\\206\004\000\000\
\\207\004\000\000\
\\208\004\000\000\
\\209\004\240\003\014\004\241\003\013\004\242\003\012\004\243\003\011\004\
\\244\003\010\004\245\003\009\004\246\003\008\004\247\003\007\004\
\\248\003\006\004\005\004\005\004\006\004\004\004\007\004\003\004\
\\008\004\002\004\010\004\001\004\016\004\000\004\000\000\
\\210\004\000\000\
\\211\004\000\000\
\\212\004\000\000\
\\213\004\000\000\
\\214\004\000\000\
\\215\004\000\000\
\\216\004\000\000\
\\217\004\000\000\
\\218\004\012\004\127\004\023\004\126\004\025\004\125\004\028\004\124\004\
\\029\004\123\004\030\004\122\004\031\004\121\004\032\004\120\004\
\\041\004\119\004\042\004\118\004\043\004\117\004\044\004\116\004\
\\045\004\115\004\046\004\114\004\047\004\113\004\048\004\112\004\
\\049\004\111\004\050\004\110\004\051\004\109\004\052\004\108\004\
\\053\004\107\004\054\004\106\004\055\004\105\004\056\004\104\004\000\000\
\\219\004\012\004\127\004\023\004\126\004\025\004\125\004\028\004\124\004\
\\029\004\123\004\030\004\122\004\031\004\121\004\032\004\120\004\
\\041\004\119\004\042\004\118\004\043\004\117\004\044\004\116\004\
\\045\004\115\004\046\004\114\004\047\004\113\004\048\004\112\004\
\\049\004\111\004\050\004\110\004\051\004\109\004\052\004\108\004\
\\053\004\107\004\054\004\106\004\055\004\105\004\056\004\104\004\000\000\
\\220\004\000\000\
\\221\004\000\000\
\\222\004\000\000\
\\223\004\000\000\
\\224\004\000\000\
\\225\004\000\000\
\\226\004\000\000\
\\227\004\000\000\
\\228\004\000\000\
\\229\004\000\000\
\\230\004\000\000\
\\231\004\000\000\
\\232\004\000\000\
\\233\004\000\000\
\\234\004\000\000\
\\235\004\000\000\
\\236\004\000\000\
\\237\004\000\000\
\\238\004\000\000\
\\239\004\000\000\
\\240\004\000\000\
\\241\004\000\000\
\\242\004\000\000\
\\243\004\000\000\
\\244\004\000\000\
\\245\004\000\000\
\\246\004\000\000\
\\247\004\000\000\
\\248\004\000\000\
\\249\004\000\000\
\\250\004\000\000\
\\251\004\000\000\
\\252\004\000\000\
\\253\004\000\000\
\\254\004\000\000\
\\255\004\000\000\
\\000\005\000\000\
\\001\005\000\000\
\\002\005\012\004\127\004\025\004\125\004\042\004\118\004\043\004\117\004\
\\044\004\116\004\045\004\115\004\046\004\114\004\048\004\112\004\
\\049\004\111\004\050\004\110\004\051\004\109\004\052\004\108\004\
\\053\004\107\004\054\004\106\004\055\004\105\004\000\000\
\\003\005\012\004\127\004\000\000\
\\004\005\012\004\127\004\042\004\118\004\000\000\
\\005\005\012\004\127\004\042\004\118\004\043\004\117\004\045\004\115\004\
\\046\004\114\004\053\004\107\004\054\004\106\004\000\000\
\\006\005\012\004\127\004\042\004\118\004\000\000\
\\007\005\012\004\127\004\042\004\118\004\000\000\
\\008\005\012\004\127\004\025\004\125\004\028\004\124\004\030\004\122\004\
\\041\004\119\004\042\004\118\004\043\004\117\004\044\004\116\004\
\\045\004\115\004\046\004\114\004\048\004\112\004\049\004\111\004\
\\050\004\110\004\051\004\109\004\052\004\108\004\053\004\107\004\
\\054\004\106\004\055\004\105\004\056\004\104\004\000\000\
\\009\005\012\004\127\004\042\004\118\004\043\004\117\004\045\004\115\004\
\\046\004\114\004\053\004\107\004\054\004\106\004\000\000\
\\010\005\012\004\127\004\042\004\118\004\043\004\117\004\044\004\116\004\
\\045\004\115\004\046\004\114\004\048\004\112\004\053\004\107\004\
\\054\004\106\004\000\000\
\\011\005\012\004\127\004\042\004\118\004\043\004\117\004\044\004\116\004\
\\045\004\115\004\046\004\114\004\048\004\112\004\053\004\107\004\
\\054\004\106\004\000\000\
\\012\005\012\004\127\004\042\004\118\004\043\004\117\004\044\004\116\004\
\\045\004\115\004\046\004\114\004\048\004\112\004\053\004\107\004\
\\054\004\106\004\000\000\
\\013\005\012\004\127\004\042\004\118\004\043\004\117\004\044\004\116\004\
\\045\004\115\004\046\004\114\004\048\004\112\004\053\004\107\004\
\\054\004\106\004\000\000\
\\014\005\012\004\127\004\042\004\118\004\000\000\
\\015\005\012\004\127\004\042\004\118\004\000\000\
\\016\005\012\004\127\004\042\004\118\004\043\004\117\004\044\004\116\004\
\\045\004\115\004\046\004\114\004\048\004\112\004\053\004\107\004\
\\054\004\106\004\000\000\
\\017\005\012\004\127\004\025\004\125\004\028\004\124\004\041\004\119\004\
\\042\004\118\004\043\004\117\004\044\004\116\004\045\004\115\004\
\\046\004\114\004\048\004\112\004\049\004\111\004\050\004\110\004\
\\051\004\109\004\052\004\108\004\053\004\107\004\054\004\106\004\
\\055\004\105\004\000\000\
\\018\005\000\000\
\\019\005\000\000\
\\020\005\000\000\
\\021\005\000\000\
\\022\005\000\000\
\\023\005\012\004\127\004\000\000\
\\024\005\012\004\127\004\000\000\
\\025\005\000\000\
\\026\005\000\000\
\\027\005\000\000\
\\028\005\000\000\
\\029\005\000\000\
\\030\005\000\000\
\\031\005\000\000\
\\032\005\000\000\
\\033\005\000\000\
\\034\005\000\000\
\\035\005\000\000\
\\036\005\000\000\
\\037\005\000\000\
\\038\005\000\000\
\\039\005\000\000\
\\040\005\000\000\
\\041\005\000\000\
\\042\005\000\000\
\\043\005\000\000\
\\044\005\000\000\
\\045\005\000\000\
\\046\005\000\000\
\\047\005\000\000\
\\048\005\000\000\
\\049\005\000\000\
\\050\005\012\004\127\004\025\004\125\004\028\004\124\004\029\004\123\004\
\\030\004\122\004\031\004\121\004\032\004\120\004\041\004\119\004\
\\042\004\118\004\043\004\117\004\044\004\116\004\045\004\115\004\
\\046\004\114\004\047\004\113\004\048\004\112\004\049\004\111\004\
\\050\004\110\004\051\004\109\004\052\004\108\004\053\004\107\004\
\\054\004\106\004\055\004\105\004\056\004\104\004\000\000\
\\051\005\000\000\
\\052\005\000\000\
\\053\005\000\000\
\\054\005\012\004\127\004\025\004\125\004\042\004\118\004\043\004\117\004\
\\044\004\116\004\045\004\115\004\046\004\114\004\048\004\112\004\
\\049\004\111\004\050\004\110\004\051\004\109\004\052\004\108\004\
\\053\004\107\004\054\004\106\004\055\004\105\004\000\000\
\\055\005\000\000\
\\056\005\012\004\127\004\025\004\125\004\042\004\118\004\043\004\117\004\
\\044\004\116\004\045\004\115\004\046\004\114\004\048\004\112\004\
\\049\004\111\004\050\004\110\004\051\004\109\004\052\004\108\004\
\\053\004\107\004\054\004\106\004\055\004\105\004\000\000\
\\057\005\012\004\127\004\025\004\125\004\028\004\124\004\030\004\122\004\
\\041\004\119\004\042\004\118\004\043\004\117\004\044\004\116\004\
\\045\004\115\004\046\004\114\004\048\004\112\004\049\004\111\004\
\\050\004\110\004\051\004\109\004\052\004\108\004\053\004\107\004\
\\054\004\106\004\055\004\105\004\056\004\104\004\000\000\
\\058\005\012\004\127\004\025\004\125\004\028\004\124\004\041\004\119\004\
\\042\004\118\004\043\004\117\004\044\004\116\004\045\004\115\004\
\\046\004\114\004\048\004\112\004\049\004\111\004\050\004\110\004\
\\051\004\109\004\052\004\108\004\053\004\107\004\054\004\106\004\
\\055\004\105\004\000\000\
\\059\005\012\004\127\004\025\004\125\004\028\004\124\004\029\004\123\004\
\\030\004\122\004\032\004\120\004\041\004\119\004\042\004\118\004\
\\043\004\117\004\044\004\116\004\045\004\115\004\046\004\114\004\
\\047\004\113\004\048\004\112\004\049\004\111\004\050\004\110\004\
\\051\004\109\004\052\004\108\004\053\004\107\004\054\004\106\004\
\\055\004\105\004\056\004\104\004\000\000\
\\060\005\012\004\127\004\025\004\125\004\028\004\124\004\029\004\123\004\
\\030\004\122\004\041\004\119\004\042\004\118\004\043\004\117\004\
\\044\004\116\004\045\004\115\004\046\004\114\004\047\004\113\004\
\\048\004\112\004\049\004\111\004\050\004\110\004\051\004\109\004\
\\052\004\108\004\053\004\107\004\054\004\106\004\055\004\105\004\
\\056\004\104\004\000\000\
\\061\005\000\000\
\\062\005\000\000\
\\063\005\000\000\
\\064\005\000\000\
\\065\005\000\000\
\\066\005\000\000\
\\067\005\000\000\
\\068\005\000\000\
\\069\005\000\000\
\\070\005\000\000\
\\071\005\000\000\
\\072\005\000\000\
\\073\005\000\000\
\\074\005\000\000\
\\075\005\000\000\
\\076\005\000\000\
\\077\005\000\000\
\\078\005\000\000\
\\079\005\000\000\
\\080\005\000\000\
\\081\005\000\000\
\\082\005\000\000\
\\083\005\000\000\
\\084\005\000\000\
\\085\005\000\000\
\\086\005\000\000\
\\087\005\000\000\
\\088\005\000\000\
\\089\005\000\000\
\\090\005\000\000\
\\091\005\000\000\
\\092\005\000\000\
\\093\005\000\000\
\\094\005\000\000\
\\095\005\000\000\
\\096\005\000\000\
\\097\005\000\000\
\\098\005\000\000\
\\099\005\000\000\
\\100\005\000\000\
\\101\005\000\000\
\\102\005\000\000\
\\103\005\000\000\
\\104\005\000\000\
\\105\005\000\000\
\\106\005\000\000\
\\107\005\000\000\
\\108\005\000\000\
\\109\005\000\000\
\\110\005\000\000\
\\111\005\000\000\
\\112\005\000\000\
\\113\005\000\000\
\\114\005\000\000\
\\115\005\000\000\
\\116\005\000\000\
\\117\005\000\000\
\\118\005\000\000\
\\119\005\000\000\
\\120\005\000\000\
\\121\005\000\000\
\\122\005\000\000\
\\123\005\000\000\
\\124\005\000\000\
\\125\005\000\000\
\\126\005\000\000\
\\127\005\000\000\
\\128\005\000\000\
\\129\005\000\000\
\\130\005\000\000\
\\131\005\000\000\
\\132\005\000\000\
\\133\005\000\000\
\\134\005\000\000\
\\135\005\000\000\
\\136\005\000\000\
\\137\005\000\000\
\\138\005\000\000\
\\139\005\000\000\
\\140\005\000\000\
\\141\005\000\000\
\\142\005\000\000\
\\143\005\000\000\
\\144\005\000\000\
\\145\005\000\000\
\\146\005\000\000\
\\147\005\000\000\
\\148\005\000\000\
\\149\005\000\000\
\\150\005\000\000\
\\151\005\000\000\
\\152\005\000\000\
\\153\005\000\000\
\\154\005\000\000\
\\155\005\000\000\
\\156\005\000\000\
\\157\005\000\000\
\\158\005\000\000\
\\159\005\000\000\
\\160\005\000\000\
\\161\005\000\000\
\\162\005\000\000\
\\163\005\000\000\
\\164\005\000\000\
\\165\005\000\000\
\\166\005\000\000\
\\167\005\000\000\
\\168\005\000\000\
\\169\005\000\000\
\\170\005\000\000\
\\171\005\000\000\
\\172\005\000\000\
\\173\005\000\000\
\\174\005\000\000\
\\175\005\000\000\
\\176\005\000\000\
\\177\005\000\000\
\\178\005\000\000\
\\179\005\000\000\
\\180\005\000\000\
\\181\005\000\000\
\\182\005\000\000\
\\183\005\000\000\
\\184\005\000\000\
\\185\005\000\000\
\\186\005\000\000\
\\187\005\000\000\
\\188\005\000\000\
\\189\005\000\000\
\\190\005\000\000\
\\191\005\000\000\
\\192\005\000\000\
\\193\005\000\000\
\\194\005\000\000\
\\195\005\000\000\
\\196\005\000\000\
\\197\005\000\000\
\\198\005\000\000\
\\199\005\000\000\
\\200\005\000\000\
\\201\005\000\000\
\\202\005\000\000\
\\203\005\000\000\
\\204\005\000\000\
\\205\005\000\000\
\\206\005\000\000\
\\207\005\000\000\
\\208\005\000\000\
\\209\005\000\000\
\\210\005\000\000\
\\211\005\000\000\
\\212\005\000\000\
\\213\005\000\000\
\\214\005\000\000\
\\215\005\000\000\
\\216\005\000\000\
\\217\005\000\000\
\\218\005\000\000\
\\219\005\000\000\
\\220\005\000\000\
\\221\005\000\000\
\\222\005\000\000\
\\223\005\000\000\
\\224\005\000\000\
\\225\005\000\000\
\\226\005\000\000\
\\227\005\000\000\
\\228\005\000\000\
\\229\005\000\000\
\\230\005\000\000\
\\231\005\000\000\
\\232\005\000\000\
\\233\005\000\000\
\\234\005\000\000\
\\235\005\000\000\
\\236\005\000\000\
\\237\005\000\000\
\\238\005\000\000\
\\239\005\000\000\
\\240\005\000\000\
\\241\005\000\000\
\\242\005\000\000\
\\243\005\000\000\
\\244\005\000\000\
\\245\005\000\000\
\\246\005\000\000\
\\247\005\000\000\
\\248\005\000\000\
\\249\005\000\000\
\\250\005\000\000\
\\251\005\000\000\
\\252\005\000\000\
\\253\005\000\000\
\\254\005\000\000\
\\255\005\000\000\
\\000\006\000\000\
\\001\006\000\000\
\\002\006\000\000\
\\003\006\000\000\
\\004\006\000\000\
\\005\006\000\000\
\\006\006\000\000\
\\007\006\000\000\
\\008\006\000\000\
\\009\006\000\000\
\\010\006\000\000\
\\011\006\000\000\
\\012\006\000\000\
\\013\006\000\000\
\\014\006\000\000\
\\015\006\000\000\
\\016\006\000\000\
\\017\006\000\000\
\\018\006\000\000\
\\019\006\000\000\
\\020\006\000\000\
\\021\006\000\000\
\\022\006\000\000\
\\023\006\000\000\
\\024\006\000\000\
\\025\006\000\000\
\\026\006\000\000\
\\027\006\000\000\
\\028\006\000\000\
\\029\006\000\000\
\\030\006\000\000\
\\031\006\000\000\
\\032\006\000\000\
\\033\006\000\000\
\\034\006\000\000\
\\035\006\000\000\
\\036\006\000\000\
\\037\006\000\000\
\\038\006\000\000\
\\039\006\000\000\
\\040\006\000\000\
\\041\006\000\000\
\\042\006\000\000\
\\043\006\000\000\
\\044\006\000\000\
\\045\006\000\000\
\\046\006\000\000\
\\047\006\000\000\
\\048\006\000\000\
\\049\006\000\000\
\\050\006\000\000\
\\051\006\000\000\
\\052\006\000\000\
\\053\006\000\000\
\\054\006\000\000\
\\055\006\000\000\
\\056\006\000\000\
\\057\006\000\000\
\\058\006\000\000\
\\059\006\000\000\
\\060\006\000\000\
\\061\006\000\000\
\\062\006\000\000\
\\063\006\000\000\
\\064\006\000\000\
\\065\006\000\000\
\\066\006\000\000\
\\067\006\000\000\
\\068\006\000\000\
\\069\006\000\000\
\\070\006\000\000\
\\071\006\000\000\
\\072\006\000\000\
\\073\006\000\000\
\\074\006\000\000\
\\075\006\000\000\
\\076\006\000\000\
\\077\006\000\000\
\\078\006\000\000\
\\079\006\000\000\
\\080\006\000\000\
\\081\006\000\000\
\\082\006\000\000\
\\083\006\000\000\
\\084\006\000\000\
\\085\006\000\000\
\\086\006\000\000\
\\087\006\000\000\
\\088\006\000\000\
\\089\006\000\000\
\\090\006\000\000\
\\091\006\000\000\
\\092\006\000\000\
\\093\006\000\000\
\\094\006\000\000\
\\095\006\000\000\
\\096\006\000\000\
\\097\006\000\000\
\\098\006\000\000\
\\099\006\000\000\
\\100\006\000\000\
\\101\006\000\000\
\\102\006\000\000\
\\103\006\000\000\
\\104\006\000\000\
\\105\006\000\000\
\\106\006\000\000\
\\107\006\000\000\
\\108\006\000\000\
\\109\006\000\000\
\\110\006\000\000\
\\111\006\000\000\
\\112\006\000\000\
\\113\006\000\000\
\\114\006\000\000\
\\115\006\000\000\
\\116\006\000\000\
\\117\006\000\000\
\\118\006\000\000\
\\119\006\000\000\
\\120\006\000\000\
\\121\006\000\000\
\\122\006\000\000\
\\123\006\000\000\
\\124\006\000\000\
\\125\006\000\000\
\\126\006\000\000\
\\127\006\000\000\
\\128\006\000\000\
\\129\006\000\000\
\\130\006\000\000\
\\131\006\000\000\
\\132\006\000\000\
\\133\006\000\000\
\\134\006\000\000\
\\135\006\000\000\
\\136\006\000\000\
\\137\006\000\000\
\\138\006\000\000\
\\139\006\000\000\
\\140\006\000\000\
\\141\006\000\000\
\\142\006\000\000\
\\143\006\000\000\
\\144\006\000\000\
\\145\006\000\000\
\\146\006\000\000\
\\147\006\000\000\
\\148\006\000\000\
\\149\006\000\000\
\\150\006\000\000\
\\151\006\000\000\
\\152\006\000\000\
\\153\006\000\000\
\\154\006\000\000\
\\155\006\000\000\
\\156\006\000\000\
\\157\006\000\000\
\\158\006\000\000\
\\159\006\000\000\
\\160\006\000\000\
\\161\006\000\000\
\\162\006\000\000\
\\163\006\000\000\
\\164\006\000\000\
\\165\006\000\000\
\\166\006\000\000\
\\167\006\000\000\
\\168\006\000\000\
\\169\006\000\000\
\\170\006\000\000\
\\171\006\000\000\
\\172\006\000\000\
\\173\006\000\000\
\\174\006\000\000\
\\175\006\000\000\
\\176\006\000\000\
\\177\006\000\000\
\\178\006\000\000\
\\179\006\000\000\
\\180\006\000\000\
\\181\006\000\000\
\\182\006\000\000\
\\183\006\000\000\
\\184\006\000\000\
\\185\006\000\000\
\\186\006\000\000\
\\187\006\000\000\
\\188\006\000\000\
\\189\006\000\000\
\\190\006\000\000\
\\191\006\000\000\
\\192\006\000\000\
\\193\006\000\000\
\\194\006\000\000\
\\195\006\000\000\
\\196\006\000\000\
\\197\006\000\000\
\\198\006\000\000\
\\199\006\000\000\
\\200\006\000\000\
\\201\006\000\000\
\\202\006\000\000\
\\203\006\000\000\
\\204\006\000\000\
\\205\006\000\000\
\\206\006\000\000\
\\207\006\000\000\
\\208\006\000\000\
\\209\006\000\000\
\\210\006\000\000\
\\211\006\000\000\
\\212\006\000\000\
\\213\006\000\000\
\\214\006\000\000\
\\215\006\000\000\
\\216\006\000\000\
\\217\006\000\000\
\\218\006\000\000\
\\219\006\000\000\
\\220\006\000\000\
\\221\006\000\000\
\\222\006\000\000\
\\223\006\000\000\
\\224\006\000\000\
\\225\006\000\000\
\\226\006\000\000\
\\227\006\000\000\
\\228\006\000\000\
\\229\006\000\000\
\\230\006\000\000\
\\231\006\000\000\
\\232\006\000\000\
\\233\006\000\000\
\\234\006\000\000\
\\235\006\000\000\
\\236\006\000\000\
\\237\006\000\000\
\\238\006\000\000\
\\239\006\000\000\
\\240\006\000\000\
\\241\006\000\000\
\\242\006\000\000\
\\243\006\000\000\
\\244\006\000\000\
\\245\006\000\000\
\\246\006\000\000\
\\247\006\000\000\
\\248\006\000\000\
\\249\006\000\000\
\\250\006\000\000\
\\251\006\000\000\
\\252\006\000\000\
\\253\006\000\000\
\\254\006\000\000\
\\255\006\000\000\
\\000\007\000\000\
\\001\007\000\000\
\\002\007\000\000\
\\003\007\000\000\
\\004\007\000\000\
\\005\007\000\000\
\\006\007\000\000\
\\007\007\000\000\
\\008\007\000\000\
\\009\007\000\000\
\\010\007\000\000\
\\011\007\000\000\
\\012\007\000\000\
\\013\007\000\000\
\\014\007\000\000\
\\015\007\000\000\
\\016\007\000\000\
\\017\007\000\000\
\\018\007\000\000\
\\019\007\000\000\
\\020\007\000\000\
\\021\007\000\000\
\\022\007\000\000\
\\023\007\000\000\
\\024\007\000\000\
\\025\007\000\000\
\\026\007\000\000\
\\027\007\000\000\
\\028\007\000\000\
\\029\007\000\000\
\\030\007\000\000\
\\031\007\000\000\
\\032\007\000\000\
\\033\007\000\000\
\\034\007\000\000\
\\035\007\000\000\
\\036\007\000\000\
\\037\007\000\000\
\\038\007\000\000\
\\039\007\000\000\
\\040\007\000\000\
\\041\007\000\000\
\\042\007\000\000\
\\043\007\000\000\
\\044\007\000\000\
\\045\007\000\000\
\\046\007\000\000\
\\047\007\000\000\
\\048\007\000\000\
\\049\007\000\000\
\\050\007\000\000\
\\051\007\000\000\
\\052\007\000\000\
\\053\007\000\000\
\\054\007\000\000\
\\055\007\000\000\
\\056\007\000\000\
\\057\007\000\000\
\\058\007\000\000\
\\059\007\000\000\
\\060\007\000\000\
\\061\007\000\000\
\\062\007\000\000\
\\063\007\000\000\
\\064\007\000\000\
\\065\007\000\000\
\\066\007\000\000\
\\067\007\000\000\
\\068\007\000\000\
\\069\007\000\000\
\\070\007\000\000\
\\071\007\000\000\
\\072\007\000\000\
\\073\007\000\000\
\\074\007\000\000\
\\075\007\000\000\
\\076\007\000\000\
\\077\007\000\000\
\\078\007\000\000\
\\079\007\000\000\
\\080\007\000\000\
\\081\007\000\000\
\\082\007\000\000\
\\083\007\000\000\
\\084\007\000\000\
\\085\007\000\000\
\\086\007\000\000\
\\087\007\000\000\
\\088\007\000\000\
\\089\007\000\000\
\\090\007\000\000\
\\091\007\000\000\
\\092\007\000\000\
\\093\007\000\000\
\\094\007\000\000\
\\095\007\000\000\
\\096\007\000\000\
\\097\007\000\000\
\\098\007\000\000\
\\099\007\000\000\
\\100\007\000\000\
\\101\007\000\000\
\\102\007\000\000\
\\103\007\000\000\
\\104\007\000\000\
\\105\007\000\000\
\\106\007\000\000\
\\107\007\000\000\
\\108\007\000\000\
\\109\007\000\000\
\\110\007\000\000\
\\111\007\000\000\
\\112\007\000\000\
\\113\007\000\000\
\\114\007\000\000\
\\115\007\000\000\
\\116\007\000\000\
\\117\007\000\000\
\\118\007\000\000\
\\119\007\000\000\
\\120\007\000\000\
\\121\007\000\000\
\\122\007\000\000\
\\123\007\000\000\
\\124\007\000\000\
\\125\007\000\000\
\\126\007\000\000\
\\127\007\000\000\
\\128\007\000\000\
\\129\007\000\000\
\\130\007\000\000\
\\131\007\000\000\
\\132\007\000\000\
\\133\007\000\000\
\\134\007\000\000\
\\135\007\000\000\
\\136\007\000\000\
\\137\007\000\000\
\\138\007\000\000\
\\139\007\000\000\
\\140\007\000\000\
\\141\007\000\000\
\\142\007\000\000\
\\143\007\000\000\
\\144\007\000\000\
\\145\007\000\000\
\\146\007\000\000\
\\147\007\000\000\
\\148\007\000\000\
\\149\007\000\000\
\\150\007\000\000\
\\151\007\000\000\
\\152\007\000\000\
\\153\007\000\000\
\\154\007\000\000\
\\155\007\000\000\
\\156\007\000\000\
\\157\007\000\000\
\\158\007\000\000\
\\159\007\000\000\
\\160\007\000\000\
\\161\007\000\000\
\\162\007\000\000\
\\163\007\000\000\
\\164\007\000\000\
\\165\007\000\000\
\\166\007\000\000\
\\167\007\000\000\
\\168\007\000\000\
\\169\007\000\000\
\\170\007\000\000\
\\171\007\000\000\
\\172\007\000\000\
\\173\007\000\000\
\\174\007\000\000\
\\175\007\000\000\
\\176\007\000\000\
\\177\007\000\000\
\\178\007\000\000\
\\179\007\000\000\
\\180\007\000\000\
\\181\007\000\000\
\\182\007\000\000\
\\183\007\000\000\
\\184\007\000\000\
\\185\007\000\000\
\\186\007\000\000\
\\187\007\000\000\
\\188\007\000\000\
\\189\007\000\000\
\\190\007\000\000\
\\191\007\000\000\
\\192\007\000\000\
\\193\007\000\000\
\\194\007\000\000\
\\195\007\000\000\
\\196\007\000\000\
\\197\007\000\000\
\\198\007\000\000\
\\199\007\000\000\
\\200\007\000\000\
\\201\007\000\000\
\\202\007\000\000\
\\203\007\000\000\
\\204\007\000\000\
\\205\007\000\000\
\\206\007\000\000\
\\207\007\000\000\
\\208\007\000\000\
\\209\007\000\000\
\\210\007\000\000\
\\211\007\000\000\
\\212\007\000\000\
\\213\007\000\000\
\\214\007\000\000\
\\215\007\000\000\
\\216\007\000\000\
\\217\007\000\000\
\\218\007\000\000\
\\219\007\000\000\
\\220\007\000\000\
\\221\007\000\000\
\\222\007\000\000\
\\223\007\000\000\
\\224\007\000\000\
\\225\007\000\000\
\\226\007\000\000\
\\227\007\000\000\
\\228\007\000\000\
\\229\007\000\000\
\\230\007\000\000\
\\231\007\000\000\
\\232\007\000\000\
\\233\007\000\000\
\\234\007\000\000\
\\235\007\000\000\
\\236\007\000\000\
\\237\007\000\000\
\\238\007\000\000\
\\239\007\000\000\
\\240\007\000\000\
\\241\007\000\000\
\\242\007\000\000\
\\243\007\000\000\
\\244\007\000\000\
\\245\007\000\000\
\\246\007\000\000\
\\247\007\000\000\
\\248\007\000\000\
\\249\007\000\000\
\\250\007\000\000\
\\251\007\000\000\
\\252\007\000\000\
\\253\007\000\000\
\\254\007\000\000\
\\255\007\000\000\
\\000\008\000\000\
\\001\008\000\000\
\\002\008\000\000\
\\003\008\000\000\
\\004\008\000\000\
\\005\008\000\000\
\\006\008\000\000\
\\007\008\000\000\
\\008\008\000\000\
\\009\008\000\000\
\\010\008\000\000\
\\011\008\000\000\
\\012\008\000\000\
\\013\008\000\000\
\\014\008\000\000\
\\015\008\000\000\
\\016\008\000\000\
\\017\008\000\000\
\\018\008\000\000\
\\019\008\000\000\
\\020\008\000\000\
\\021\008\000\000\
\\022\008\000\000\
\\023\008\000\000\
\\024\008\000\000\
\\025\008\000\000\
\\026\008\000\000\
\\027\008\000\000\
\\028\008\000\000\
\\029\008\000\000\
\\030\008\000\000\
\\031\008\000\000\
\\032\008\000\000\
\\033\008\000\000\
\\034\008\000\000\
\\035\008\000\000\
\\036\008\000\000\
\\037\008\000\000\
\\038\008\000\000\
\\039\008\000\000\
\\040\008\000\000\
\\041\008\000\000\
\\042\008\000\000\
\\043\008\000\000\
\\044\008\000\000\
\\045\008\000\000\
\\046\008\000\000\
\\047\008\000\000\
\\048\008\000\000\
\\049\008\000\000\
\\050\008\000\000\
\\051\008\000\000\
\\052\008\000\000\
\\053\008\000\000\
\\054\008\000\000\
\\055\008\000\000\
\\056\008\000\000\
\\057\008\000\000\
\\058\008\000\000\
\\059\008\000\000\
\\060\008\000\000\
\\061\008\000\000\
\\062\008\000\000\
\\063\008\000\000\
\\064\008\000\000\
\\065\008\000\000\
\\066\008\000\000\
\\067\008\000\000\
\\068\008\000\000\
\\069\008\000\000\
\\070\008\000\000\
\\071\008\000\000\
\\072\008\000\000\
\\073\008\000\000\
\\074\008\000\000\
\\075\008\000\000\
\\076\008\000\000\
\\077\008\000\000\
\\078\008\000\000\
\\079\008\000\000\
\\080\008\000\000\
\\081\008\000\000\
\\082\008\000\000\
\\083\008\000\000\
\\084\008\000\000\
\\085\008\000\000\
\\086\008\000\000\
\\087\008\000\000\
\\088\008\000\000\
\\089\008\000\000\
\\090\008\000\000\
\\091\008\000\000\
\\092\008\000\000\
\\093\008\000\000\
\\094\008\000\000\
\\095\008\000\000\
\\096\008\000\000\
\\097\008\000\000\
\\098\008\000\000\
\\099\008\000\000\
\\100\008\000\000\
\\101\008\000\000\
\\102\008\000\000\
\\103\008\000\000\
\\104\008\000\000\
\\105\008\000\000\
\\106\008\000\000\
\\107\008\000\000\
\\108\008\000\000\
\\109\008\000\000\
\\110\008\000\000\
\\111\008\000\000\
\\112\008\000\000\
\\113\008\000\000\
\\114\008\000\000\
\\115\008\000\000\
\\116\008\000\000\
\\117\008\000\000\
\\118\008\000\000\
\\119\008\000\000\
\\120\008\000\000\
\\121\008\000\000\
\\122\008\000\000\
\\123\008\000\000\
\\124\008\000\000\
\\125\008\000\000\
\\126\008\000\000\
\\127\008\000\000\
\\128\008\000\000\
\\129\008\000\000\
\\130\008\000\000\
\\131\008\000\000\
\\132\008\000\000\
\\133\008\000\000\
\\134\008\000\000\
\\135\008\000\000\
\\136\008\000\000\
\\137\008\000\000\
\\138\008\000\000\
\\139\008\000\000\
\\140\008\000\000\
\\141\008\000\000\
\\142\008\000\000\
\\143\008\000\000\
\\144\008\000\000\
\\145\008\000\000\
\\146\008\000\000\
\\147\008\000\000\
\\148\008\000\000\
\\149\008\000\000\
\\150\008\000\000\
\\151\008\000\000\
\\152\008\000\000\
\\153\008\000\000\
\\154\008\000\000\
\\155\008\000\000\
\\156\008\000\000\
\\157\008\000\000\
\\158\008\000\000\
\\159\008\000\000\
\\160\008\000\000\
\\161\008\000\000\
\\162\008\000\000\
\\163\008\000\000\
\\164\008\000\000\
\\165\008\000\000\
\\166\008\000\000\
\\167\008\000\000\
\\168\008\000\000\
\\169\008\000\000\
\\170\008\000\000\
\\171\008\000\000\
\\172\008\000\000\
\\173\008\000\000\
\\174\008\000\000\
\\175\008\000\000\
\\176\008\000\000\
\\177\008\000\000\
\\178\008\000\000\
\\179\008\000\000\
\\180\008\000\000\
\\181\008\000\000\
\\182\008\000\000\
\\183\008\000\000\
\\184\008\000\000\
\\185\008\000\000\
\\186\008\000\000\
\\187\008\000\000\
\\188\008\000\000\
\\189\008\000\000\
\\190\008\000\000\
\\191\008\000\000\
\\192\008\000\000\
\\193\008\000\000\
\\194\008\000\000\
\\195\008\000\000\
\\196\008\000\000\
\\197\008\000\000\
\\198\008\000\000\
\\199\008\000\000\
\\200\008\000\000\
\\201\008\000\000\
\\202\008\000\000\
\\203\008\000\000\
\\204\008\000\000\
\\205\008\000\000\
\\206\008\000\000\
\\207\008\000\000\
\\208\008\000\000\
\\209\008\000\000\
\\210\008\000\000\
\\211\008\000\000\
\\212\008\000\000\
\\213\008\000\000\
\\214\008\000\000\
\\215\008\000\000\
\\216\008\000\000\
\\217\008\000\000\
\\218\008\000\000\
\\219\008\000\000\
\\220\008\000\000\
\\221\008\000\000\
\\222\008\000\000\
\\223\008\000\000\
\\224\008\000\000\
\\225\008\000\000\
\\226\008\000\000\
\\227\008\000\000\
\\228\008\000\000\
\\229\008\000\000\
\\230\008\000\000\
\\231\008\000\000\
\\232\008\000\000\
\\233\008\000\000\
\\234\008\000\000\
\\235\008\000\000\
\\236\008\000\000\
\\237\008\000\000\
\\238\008\000\000\
\\239\008\000\000\
\\240\008\000\000\
\\241\008\000\000\
\\242\008\000\000\
\\243\008\000\000\
\\244\008\000\000\
\\245\008\000\000\
\\246\008\000\000\
\\247\008\000\000\
\\248\008\000\000\
\\249\008\000\000\
\\250\008\000\000\
\\251\008\000\000\
\\252\008\000\000\
\\253\008\000\000\
\\254\008\000\000\
\\255\008\000\000\
\\000\009\000\000\
\\001\009\000\000\
\\002\009\000\000\
\\003\009\000\000\
\\004\009\000\000\
\\005\009\000\000\
\\006\009\000\000\
\\007\009\000\000\
\\008\009\000\000\
\\009\009\000\000\
\\010\009\000\000\
\\011\009\000\000\
\\012\009\000\000\
\\013\009\000\000\
\\014\009\000\000\
\\015\009\000\000\
\\016\009\000\000\
\\017\009\000\000\
\\018\009\000\000\
\\019\009\000\000\
\\020\009\000\000\
\\021\009\000\000\
\\022\009\000\000\
\\023\009\000\000\
\\024\009\000\000\
\\025\009\000\000\
\\026\009\000\000\
\\027\009\000\000\
\\028\009\000\000\
\\029\009\000\000\
\\030\009\000\000\
\\031\009\000\000\
\\032\009\000\000\
\\033\009\000\000\
\\034\009\000\000\
\\035\009\000\000\
\\036\009\000\000\
\\037\009\000\000\
\\038\009\000\000\
\\039\009\000\000\
\\040\009\000\000\
\\041\009\000\000\
\\042\009\000\000\
\\043\009\000\000\
\\044\009\000\000\
\\045\009\000\000\
\\046\009\000\000\
\\047\009\000\000\
\\047\009\009\004\016\004\000\000\
\\048\009\000\000\
\"
val actionRowNumbers =
"\031\000\024\000\027\000\031\000\
\\004\000\017\000\031\000\030\000\
\\006\000\112\004\111\004\110\004\
\\109\004\108\004\107\004\106\004\
\\105\004\104\004\103\004\102\004\
\\101\004\100\004\099\004\098\004\
\\097\004\096\004\095\004\094\004\
\\093\004\092\004\091\004\090\004\
\\089\004\088\004\087\004\086\004\
\\085\004\084\004\083\004\082\004\
\\081\004\080\004\079\004\078\004\
\\077\004\076\004\075\004\074\004\
\\073\004\072\004\071\004\070\004\
\\069\004\068\004\067\004\066\004\
\\065\004\064\004\063\004\062\004\
\\061\004\060\004\059\004\058\004\
\\057\004\056\004\055\004\054\004\
\\053\004\052\004\051\004\050\004\
\\049\004\048\004\047\004\046\004\
\\045\004\044\004\043\004\042\004\
\\041\004\040\004\039\004\038\004\
\\037\004\036\004\035\004\034\004\
\\033\004\032\004\031\004\030\004\
\\029\004\028\004\027\004\026\004\
\\025\004\024\004\023\004\022\004\
\\021\004\020\004\019\004\018\004\
\\017\004\016\004\015\004\014\004\
\\013\004\012\004\011\004\010\004\
\\009\004\008\004\007\004\006\004\
\\005\004\004\004\003\004\002\004\
\\001\004\000\004\255\003\254\003\
\\253\003\252\003\251\003\250\003\
\\249\003\248\003\247\003\246\003\
\\245\003\244\003\243\003\242\003\
\\241\003\240\003\239\003\238\003\
\\237\003\236\003\235\003\234\003\
\\233\003\232\003\231\003\230\003\
\\229\003\228\003\227\003\226\003\
\\225\003\224\003\223\003\222\003\
\\221\003\220\003\219\003\218\003\
\\217\003\216\003\215\003\214\003\
\\213\003\212\003\211\003\210\003\
\\209\003\208\003\207\003\206\003\
\\205\003\204\003\203\003\202\003\
\\201\003\200\003\199\003\198\003\
\\197\003\196\003\195\003\194\003\
\\193\003\192\003\191\003\190\003\
\\189\003\188\003\187\003\186\003\
\\185\003\184\003\183\003\182\003\
\\181\003\180\003\179\003\178\003\
\\177\003\176\003\175\003\174\003\
\\173\003\172\003\171\003\170\003\
\\169\003\168\003\167\003\166\003\
\\165\003\164\003\163\003\162\003\
\\161\003\160\003\159\003\158\003\
\\157\003\156\003\155\003\154\003\
\\153\003\152\003\151\003\150\003\
\\149\003\148\003\147\003\146\003\
\\145\003\144\003\143\003\142\003\
\\141\003\140\003\139\003\138\003\
\\137\003\136\003\135\003\134\003\
\\133\003\132\003\131\003\130\003\
\\129\003\128\003\127\003\126\003\
\\125\003\124\003\123\003\122\003\
\\121\003\120\003\119\003\118\003\
\\117\003\116\003\115\003\114\003\
\\113\003\112\003\111\003\110\003\
\\109\003\108\003\107\003\106\003\
\\105\003\104\003\103\003\102\003\
\\101\003\100\003\099\003\098\003\
\\097\003\096\003\095\003\094\003\
\\093\003\092\003\091\003\090\003\
\\089\003\088\003\087\003\086\003\
\\085\003\084\003\083\003\082\003\
\\081\003\080\003\079\003\078\003\
\\077\003\076\003\075\003\074\003\
\\073\003\072\003\071\003\070\003\
\\069\003\068\003\067\003\066\003\
\\065\003\064\003\063\003\062\003\
\\061\003\060\003\059\003\058\003\
\\057\003\056\003\055\003\054\003\
\\053\003\052\003\051\003\050\003\
\\049\003\048\003\047\003\046\003\
\\045\003\044\003\043\003\042\003\
\\041\003\040\003\039\003\038\003\
\\037\003\036\003\035\003\034\003\
\\033\003\032\003\031\003\030\003\
\\029\003\028\003\027\003\026\003\
\\025\003\024\003\023\003\022\003\
\\021\003\020\003\019\003\018\003\
\\017\003\016\003\015\003\014\003\
\\013\003\012\003\011\003\010\003\
\\009\003\008\003\007\003\006\003\
\\005\003\004\003\003\003\002\003\
\\001\003\000\003\255\002\254\002\
\\253\002\252\002\251\002\250\002\
\\249\002\248\002\247\002\246\002\
\\245\002\244\002\243\002\242\002\
\\241\002\240\002\239\002\238\002\
\\237\002\236\002\235\002\234\002\
\\233\002\232\002\231\002\230\002\
\\229\002\228\002\227\002\226\002\
\\225\002\224\002\223\002\222\002\
\\221\002\220\002\219\002\218\002\
\\217\002\216\002\215\002\214\002\
\\213\002\212\002\211\002\210\002\
\\209\002\208\002\207\002\206\002\
\\205\002\204\002\203\002\202\002\
\\201\002\200\002\199\002\198\002\
\\197\002\196\002\195\002\194\002\
\\193\002\192\002\191\002\190\002\
\\189\002\188\002\187\002\186\002\
\\185\002\184\002\183\002\182\002\
\\181\002\180\002\179\002\178\002\
\\177\002\176\002\175\002\174\002\
\\173\002\172\002\171\002\170\002\
\\169\002\168\002\167\002\166\002\
\\165\002\164\002\163\002\162\002\
\\161\002\160\002\159\002\158\002\
\\157\002\156\002\155\002\154\002\
\\153\002\152\002\151\002\150\002\
\\149\002\148\002\147\002\146\002\
\\145\002\144\002\143\002\142\002\
\\141\002\140\002\139\002\138\002\
\\137\002\136\002\135\002\134\002\
\\133\002\132\002\131\002\130\002\
\\129\002\128\002\127\002\126\002\
\\125\002\124\002\123\002\122\002\
\\121\002\120\002\119\002\118\002\
\\117\002\116\002\115\002\114\002\
\\113\002\112\002\111\002\110\002\
\\109\002\108\002\107\002\106\002\
\\105\002\104\002\103\002\102\002\
\\101\002\100\002\099\002\098\002\
\\097\002\096\002\095\002\094\002\
\\093\002\092\002\091\002\090\002\
\\089\002\088\002\087\002\086\002\
\\085\002\084\002\083\002\082\002\
\\081\002\080\002\079\002\078\002\
\\077\002\076\002\075\002\074\002\
\\073\002\072\002\071\002\070\002\
\\069\002\068\002\067\002\066\002\
\\065\002\064\002\063\002\062\002\
\\061\002\060\002\059\002\058\002\
\\057\002\056\002\055\002\054\002\
\\053\002\052\002\051\002\050\002\
\\049\002\048\002\047\002\046\002\
\\045\002\044\002\043\002\042\002\
\\041\002\040\002\039\002\038\002\
\\037\002\036\002\035\002\034\002\
\\033\002\032\002\031\002\030\002\
\\029\002\028\002\027\002\026\002\
\\025\002\024\002\023\002\022\002\
\\021\002\020\002\019\002\018\002\
\\017\002\016\002\015\002\014\002\
\\013\002\012\002\011\002\010\002\
\\009\002\008\002\007\002\006\002\
\\005\002\004\002\003\002\002\002\
\\001\002\000\002\255\001\254\001\
\\253\001\252\001\251\001\250\001\
\\249\001\248\001\247\001\246\001\
\\245\001\244\001\243\001\242\001\
\\241\001\240\001\239\001\238\001\
\\237\001\236\001\235\001\234\001\
\\233\001\232\001\231\001\230\001\
\\229\001\228\001\227\001\226\001\
\\225\001\224\001\223\001\222\001\
\\221\001\220\001\219\001\218\001\
\\217\001\216\001\215\001\214\001\
\\213\001\212\001\211\001\210\001\
\\209\001\208\001\207\001\206\001\
\\205\001\204\001\203\001\202\001\
\\201\001\200\001\199\001\198\001\
\\197\001\196\001\195\001\194\001\
\\193\001\192\001\191\001\190\001\
\\189\001\188\001\187\001\186\001\
\\185\001\184\001\183\001\182\001\
\\181\001\180\001\179\001\178\001\
\\177\001\176\001\175\001\174\001\
\\173\001\172\001\171\001\170\001\
\\169\001\168\001\167\001\166\001\
\\165\001\164\001\163\001\162\001\
\\161\001\160\001\159\001\158\001\
\\157\001\156\001\155\001\154\001\
\\153\001\152\001\151\001\150\001\
\\149\001\148\001\147\001\146\001\
\\145\001\144\001\143\001\142\001\
\\141\001\140\001\139\001\138\001\
\\137\001\136\001\135\001\134\001\
\\133\001\132\001\131\001\130\001\
\\129\001\128\001\127\001\126\001\
\\125\001\124\001\123\001\122\001\
\\121\001\120\001\119\001\118\001\
\\117\001\116\001\115\001\114\001\
\\113\001\112\001\111\001\110\001\
\\109\001\108\001\107\001\106\001\
\\105\001\104\001\103\001\102\001\
\\101\001\100\001\099\001\098\001\
\\097\001\096\001\095\001\094\001\
\\093\001\092\001\091\001\090\001\
\\089\001\088\001\087\001\086\001\
\\085\001\084\001\083\001\082\001\
\\081\001\080\001\079\001\078\001\
\\077\001\076\001\075\001\074\001\
\\073\001\072\001\071\001\070\001\
\\069\001\068\001\067\001\066\001\
\\065\001\064\001\063\001\062\001\
\\061\001\060\001\059\001\058\001\
\\057\001\056\001\055\001\054\001\
\\053\001\052\001\051\001\050\001\
\\049\001\048\001\047\001\046\001\
\\045\001\044\001\043\001\042\001\
\\041\001\040\001\039\001\038\001\
\\037\001\036\001\035\001\034\001\
\\033\001\032\001\031\001\030\001\
\\029\001\028\001\027\001\026\001\
\\025\001\024\001\023\001\022\001\
\\021\001\020\001\019\001\018\001\
\\017\001\016\001\015\001\014\001\
\\013\001\012\001\011\001\010\001\
\\009\001\008\001\007\001\006\001\
\\005\001\004\001\003\001\002\001\
\\001\001\000\001\255\000\254\000\
\\253\000\252\000\251\000\250\000\
\\249\000\248\000\247\000\246\000\
\\245\000\244\000\243\000\242\000\
\\241\000\240\000\239\000\238\000\
\\237\000\236\000\235\000\234\000\
\\233\000\232\000\231\000\230\000\
\\229\000\228\000\227\000\226\000\
\\225\000\224\000\223\000\222\000\
\\221\000\220\000\219\000\218\000\
\\217\000\216\000\215\000\214\000\
\\213\000\212\000\211\000\210\000\
\\209\000\208\000\207\000\206\000\
\\205\000\204\000\203\000\202\000\
\\201\000\200\000\199\000\198\000\
\\197\000\196\000\195\000\194\000\
\\193\000\192\000\191\000\190\000\
\\189\000\188\000\187\000\186\000\
\\185\000\184\000\183\000\182\000\
\\181\000\180\000\179\000\178\000\
\\177\000\176\000\175\000\174\000\
\\173\000\172\000\171\000\170\000\
\\169\000\168\000\167\000\166\000\
\\165\000\164\000\163\000\162\000\
\\161\000\160\000\159\000\158\000\
\\157\000\156\000\155\000\154\000\
\\039\000\029\000\128\004\135\004\
\\020\000\134\004\127\004\033\000\
\\132\004\131\004\130\004\129\004\
\\126\004\125\004\124\004\123\004\
\\122\004\121\004\120\004\119\004\
\\118\004\117\004\116\004\115\004\
\\113\004\114\004\023\000\039\000\
\\028\000\021\000\039\000\040\000\
\\047\000\046\000\045\000\044\000\
\\043\000\042\000\041\000\152\000\
\\153\000\148\000\150\000\151\000\
\\149\000\034\000\005\000\000\000\
\\037\000\000\000\032\000\038\000\
\\007\000\133\004\135\000\137\000\
\\018\000\019\000\132\000\141\000\
\\048\000\147\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\087\000\
\\086\000\085\000\084\000\083\000\
\\082\000\081\000\080\000\079\000\
\\078\000\077\000\076\000\075\000\
\\074\000\073\000\072\000\071\000\
\\070\000\069\000\068\000\067\000\
\\066\000\065\000\064\000\063\000\
\\062\000\061\000\060\000\059\000\
\\058\000\057\000\056\000\055\000\
\\054\000\053\000\052\000\051\000\
\\050\000\139\000\138\000\000\000\
\\026\000\049\000\035\000\005\000\
\\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\
\\000\000\001\000\128\000\127\000\
\\126\000\125\000\124\000\123\000\
\\122\000\121\000\120\000\119\000\
\\118\000\117\000\116\000\115\000\
\\114\000\113\000\112\000\111\000\
\\110\000\109\000\108\000\107\000\
\\106\000\105\000\104\000\013\000\
\\002\000\022\000\008\000\009\000\
\\103\000\102\000\101\000\100\000\
\\099\000\098\000\097\000\096\000\
\\095\000\094\000\093\000\092\000\
\\091\000\090\000\089\000\088\000\
\\146\000\145\000\144\000\143\000\
\\142\000\140\000\011\000\012\000\
\\129\000\130\000\036\000\000\000\
\\000\000\000\000\003\000\014\000\
\\010\000\136\000\016\000\134\000\
\\000\000\131\000\015\000\133\000\
\\025\000"
val gotoT =
"\
\\001\000\196\004\002\000\002\000\003\000\001\000\000\000\
\\000\000\
\\000\000\
\\001\000\007\000\002\000\002\000\003\000\001\000\000\000\
\\006\000\008\000\000\000\
\\000\000\
\\001\000\225\003\002\000\002\000\003\000\001\000\000\000\
\\000\000\
\\007\000\230\003\008\000\229\003\009\000\228\003\012\000\227\003\
\\013\000\226\003\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\004\000\253\003\010\000\252\003\011\000\251\003\014\000\250\003\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\004\000\016\004\010\000\252\003\011\000\251\003\014\000\250\003\000\000\
\\000\000\
\\000\000\
\\004\000\019\004\010\000\252\003\011\000\251\003\014\000\250\003\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\007\000\230\003\008\000\021\004\009\000\020\004\012\000\227\003\
\\013\000\226\003\000\000\
\\005\000\028\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\000\000\
\\005\000\097\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\005\000\126\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\127\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\128\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\129\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\130\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\131\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\132\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\133\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\134\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\135\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\136\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\137\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\138\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\139\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\140\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\141\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\142\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\143\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\144\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\145\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\146\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\147\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\148\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\149\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\150\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\005\000\151\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\000\000\
\\000\000\
\\000\000\
\\007\000\230\003\008\000\021\004\009\000\153\004\012\000\227\003\
\\013\000\226\003\000\000\
\\005\000\154\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\155\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\156\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\157\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\158\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\159\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\160\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\161\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\162\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\163\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\164\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\165\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\166\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\167\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\168\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\169\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\170\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\171\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\172\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\173\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\174\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\175\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\176\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\177\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\178\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\005\000\187\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\188\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\005\000\189\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\005\000\194\004\010\000\027\004\014\000\026\004\015\000\025\004\
\\016\000\024\004\017\000\023\004\018\000\022\004\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\"
val numstates = 1221
val numrules = 1130
val s = ref "" and index = ref 0
val string_to_int = fn () => 
let val i = !index
in index := i+2; Char.ord(String.sub(!s,i)) + Char.ord(String.sub(!s,i+1)) * 256
end
val string_to_list = fn s' =>
    let val len = String.size s'
        fun f () =
           if !index < len then string_to_int() :: f()
           else nil
   in index := 0; s := s'; f ()
   end
val string_to_pairlist = fn (conv_key,conv_entry) =>
     let fun f () =
         case string_to_int()
         of 0 => EMPTY
          | n => PAIR(conv_key (n-1),conv_entry (string_to_int()),f())
     in f
     end
val string_to_pairlist_default = fn (conv_key,conv_entry) =>
    let val conv_row = string_to_pairlist(conv_key,conv_entry)
    in fn () =>
       let val default = conv_entry(string_to_int())
           val row = conv_row()
       in (row,default)
       end
   end
val string_to_table = fn (convert_row,s') =>
    let val len = String.size s'
        fun f ()=
           if !index < len then convert_row() :: f()
           else nil
     in (s := s'; index := 0; f ())
     end
local
  val memo = Array.array(numstates+numrules,ERROR)
  val _ =let fun g i=(Array.update(memo,i,REDUCE(i-numstates)); g(i+1))
       fun f i =
            if i=numstates then g i
            else (Array.update(memo,i,SHIFT (STATE i)); f (i+1))
          in f 0 handle Subscript => ()
          end
in
val entry_to_action = fn 0 => ACCEPT | 1 => ERROR | j => Array.sub(memo,(j-2))
end
val gotoT=Array.fromList(string_to_table(string_to_pairlist(NT,STATE),gotoT))
val actionRows=string_to_table(string_to_pairlist_default(T,entry_to_action),actionRows)
val actionRowNumbers = string_to_list actionRowNumbers
val actionT = let val actionRowLookUp=
let val a=Array.fromList(actionRows) in fn i=>Array.sub(a,i) end
in Array.fromList(map actionRowLookUp actionRowNumbers)
end
in LrTable.mkLrTable {actions=actionT,gotos=gotoT,numRules=numrules,
numStates=numstates,initialState=STATE 0}
end
end
local open Header in
type pos = int
type arg = unit
structure MlyValue = 
struct
datatype svalue = VOID | ntVOID of unit ->  unit | NAT of unit ->  (int) | BV_UNOP of unit ->  (bitvector_formula) | BV_BINOP_INFIX of unit ->  (bitvector_formula) | BV_BINOP of unit ->  (BV_binary_operators) | BV_TERNOP of unit ->  (BV_ternary_operators) | BV_VAR of unit ->  (BV_var) | MEMORY_SIZE of unit ->  (int) | IMMEDIATE_SIG of unit ->  (int) | BVFORMULA_ASSIGNMENT of unit ->  (bitvector_formula) | FLG of unit ->  (flag) | OPERAND_SRC_SIG of unit ->  (operand_src_sig) | OPERAND_DEST_SIG of unit ->  (operand_dest_sig) | REG_TYPE of unit ->  ( ( int ) ) | INSTR_NMENONIC of unit ->  ( ( instr_mnemonic_family*instr_mnemonic ) ) | BVFORMULA of unit ->  (bitvector_formula) | BVFORMULAS of unit ->  ( ( bitvector_formula list ) ) | SIGNATURE of unit ->  ( ( (instr_mnemonic_family*instr_mnemonic)*operand_sig ) ) | SEMANTIC of unit ->  ( ( ((instr_mnemonic_family*instr_mnemonic)*operand_sig) * bitvector_formula list ) ) | START of unit ->  ( ( ((instr_mnemonic_family*instr_mnemonic)*operand_sig) * (bitvector_formula list) )  list)
end
type svalue = MlyValue.svalue
type result =  ( ((instr_mnemonic_family*instr_mnemonic)*operand_sig) * (bitvector_formula list) )  list
end
structure EC=
struct
open LrTable
infix 5 $$
fun x $$ y = y::x
val is_keyword =
fn _ => false
val preferred_change : (term list * term list) list = 
nil
val noShift = 
fn (T 1043) => true | _ => false
val showTerminal =
fn (T 0) => "NAT"
  | (T 1) => "AAA"
  | (T 2) => "AAD"
  | (T 3) => "AAM"
  | (T 4) => "AAS"
  | (T 5) => "ADC"
  | (T 6) => "ADD"
  | (T 7) => "AND"
  | (T 8) => "CALL"
  | (T 9) => "CBW"
  | (T 10) => "CLC"
  | (T 11) => "CLD"
  | (T 12) => "CLI"
  | (T 13) => "CMC"
  | (T 14) => "CMP"
  | (T 15) => "CMPSB"
  | (T 16) => "CWD"
  | (T 17) => "DAA"
  | (T 18) => "DAS"
  | (T 19) => "DEC"
  | (T 20) => "DIV"
  | (T 21) => "ESC"
  | (T 22) => "HLT"
  | (T 23) => "IDIV"
  | (T 24) => "IMUL"
  | (T 25) => "IN"
  | (T 26) => "INC"
  | (T 27) => "INT"
  | (T 28) => "INTO"
  | (T 29) => "IRET"
  | (T 30) => "JA"
  | (T 31) => "JAE"
  | (T 32) => "JB"
  | (T 33) => "JBE"
  | (T 34) => "JC"
  | (T 35) => "JE"
  | (T 36) => "JG"
  | (T 37) => "JGE"
  | (T 38) => "JL"
  | (T 39) => "JLE"
  | (T 40) => "JNA"
  | (T 41) => "JNAE"
  | (T 42) => "JNB"
  | (T 43) => "JNBE"
  | (T 44) => "JNC"
  | (T 45) => "JNE"
  | (T 46) => "JNG"
  | (T 47) => "JNGE"
  | (T 48) => "JNL"
  | (T 49) => "JNLE"
  | (T 50) => "JNO"
  | (T 51) => "JNP"
  | (T 52) => "JNS"
  | (T 53) => "JNZ"
  | (T 54) => "JO"
  | (T 55) => "JP"
  | (T 56) => "JPE"
  | (T 57) => "JPO"
  | (T 58) => "JS"
  | (T 59) => "JZ"
  | (T 60) => "JMP"
  | (T 61) => "LAHF"
  | (T 62) => "LDS"
  | (T 63) => "LEA"
  | (T 64) => "LES"
  | (T 65) => "LOCK"
  | (T 66) => "LODSB"
  | (T 67) => "LODSW"
  | (T 68) => "LOOP"
  | (T 69) => "LOOPE"
  | (T 70) => "LOOPNE"
  | (T 71) => "LOOPNZ"
  | (T 72) => "LOOPZ"
  | (T 73) => "MOV"
  | (T 74) => "MOVSB"
  | (T 75) => "MOVSW"
  | (T 76) => "MUL"
  | (T 77) => "NEG"
  | (T 78) => "NOP"
  | (T 79) => "NOT"
  | (T 80) => "OR"
  | (T 81) => "OUT"
  | (T 82) => "POP"
  | (T 83) => "POPF"
  | (T 84) => "PUSH"
  | (T 85) => "PUSHF"
  | (T 86) => "RCL"
  | (T 87) => "RCR"
  | (T 88) => "RET"
  | (T 89) => "RETN"
  | (T 90) => "RETF"
  | (T 91) => "ROL"
  | (T 92) => "ROR"
  | (T 93) => "SAHF"
  | (T 94) => "SAL"
  | (T 95) => "SAR"
  | (T 96) => "SBB"
  | (T 97) => "SCASB"
  | (T 98) => "SCASW"
  | (T 99) => "SHL"
  | (T 100) => "SHR"
  | (T 101) => "STC"
  | (T 102) => "STD"
  | (T 103) => "STI"
  | (T 104) => "STOSB"
  | (T 105) => "STOSW"
  | (T 106) => "SUB"
  | (T 107) => "TEST"
  | (T 108) => "WAIT"
  | (T 109) => "XCHG"
  | (T 110) => "XLAT"
  | (T 111) => "XOR"
  | (T 112) => "F2XM1"
  | (T 113) => "FABS"
  | (T 114) => "FADD"
  | (T 115) => "FADDP"
  | (T 116) => "FBLD"
  | (T 117) => "FBSTP"
  | (T 118) => "FCHS"
  | (T 119) => "FCLEX"
  | (T 120) => "FCOM"
  | (T 121) => "FCOMP"
  | (T 122) => "FCOMPP"
  | (T 123) => "DECSTP"
  | (T 124) => "FDISI"
  | (T 125) => "FDIV"
  | (T 126) => "FDIVP"
  | (T 127) => "FDIVR"
  | (T 128) => "FDIVRP"
  | (T 129) => "FENI"
  | (T 130) => "FFREE"
  | (T 131) => "FIADD"
  | (T 132) => "FICOM"
  | (T 133) => "FICOMP"
  | (T 134) => "FIDIV"
  | (T 135) => "FIDIVR"
  | (T 136) => "FILD"
  | (T 137) => "FIMUL"
  | (T 138) => "FINCSTP"
  | (T 139) => "FINIT"
  | (T 140) => "FIST"
  | (T 141) => "FISTP"
  | (T 142) => "FISUB"
  | (T 143) => "ISUBR"
  | (T 144) => "FLD"
  | (T 145) => "FLD1"
  | (T 146) => "FLDCW"
  | (T 147) => "FLDENV"
  | (T 148) => "FLDENVW"
  | (T 149) => "FLDL2E"
  | (T 150) => "FLDL2T"
  | (T 151) => "FLDLG2"
  | (T 152) => "FLDLN2"
  | (T 153) => "LDPI"
  | (T 154) => "FLDZ"
  | (T 155) => "FMUL"
  | (T 156) => "FMULP"
  | (T 157) => "FNCLEX"
  | (T 158) => "FNDISI"
  | (T 159) => "FNENI"
  | (T 160) => "FNINIT"
  | (T 161) => "FNOP"
  | (T 162) => "FNSAVE"
  | (T 163) => "FNSAVEW"
  | (T 164) => "FNSTCW"
  | (T 165) => "FNSTENV"
  | (T 166) => "FNSTENVW"
  | (T 167) => "FNSTSW"
  | (T 168) => "FPATAN"
  | (T 169) => "FPREM"
  | (T 170) => "FPTAN"
  | (T 171) => "FRNDINT"
  | (T 172) => "FRSTOR"
  | (T 173) => "FRSTORW"
  | (T 174) => "SAVE"
  | (T 175) => "FSAVEW"
  | (T 176) => "FSCALE"
  | (T 177) => "FSQRT"
  | (T 178) => "FST"
  | (T 179) => "FSTCW"
  | (T 180) => "FSTENV"
  | (T 181) => "FSTENVW"
  | (T 182) => "FSTP"
  | (T 183) => "FSTSW"
  | (T 184) => "FSUB"
  | (T 185) => "FSUBP"
  | (T 186) => "FSUBR"
  | (T 187) => "FSUBRP"
  | (T 188) => "FTST"
  | (T 189) => "FWAIT"
  | (T 190) => "FXAM"
  | (T 191) => "FXCH"
  | (T 192) => "FXTRACT"
  | (T 193) => "FYL2X"
  | (T 194) => "FYL2XP1"
  | (T 195) => "BOUND"
  | (T 196) => "ENTER"
  | (T 197) => "INS"
  | (T 198) => "LEAVE"
  | (T 199) => "OUTS"
  | (T 200) => "POPA"
  | (T 201) => "PUSHA"
  | (T 202) => "ARPL"
  | (T 203) => "CLTS"
  | (T 204) => "LAR"
  | (T 205) => "LGDT"
  | (T 206) => "LIDT"
  | (T 207) => "LLDT"
  | (T 208) => "LMSW"
  | (T 209) => "LOADALL"
  | (T 210) => "LSL"
  | (T 211) => "LTR"
  | (T 212) => "SGDT"
  | (T 213) => "SIDT"
  | (T 214) => "SLDT"
  | (T 215) => "SMSW"
  | (T 216) => "STR"
  | (T 217) => "VERR"
  | (T 218) => "VERW"
  | (T 219) => "FSETPM"
  | (T 220) => "BSF"
  | (T 221) => "BSR"
  | (T 222) => "BT"
  | (T 223) => "BTC"
  | (T 224) => "BTR"
  | (T 225) => "BTS"
  | (T 226) => "CDQ"
  | (T 227) => "CWDE"
  | (T 228) => "IBTS"
  | (T 229) => "INSD"
  | (T 230) => "IRETD"
  | (T 231) => "IRETF"
  | (T 232) => "JECXZ"
  | (T 233) => "LFS"
  | (T 234) => "LGS"
  | (T 235) => "LSS"
  | (T 236) => "LODSD"
  | (T 237) => "LOOPW"
  | (T 238) => "LOOPZW"
  | (T 239) => "LOOPEW"
  | (T 240) => "LOOPNZW"
  | (T 241) => "LOOPNEW"
  | (T 242) => "LOOPD"
  | (T 243) => "LOOPZD"
  | (T 244) => "LOOPED"
  | (T 245) => "LOOPNZD"
  | (T 246) => "LOOPNED"
  | (T 247) => "MOVSX"
  | (T 248) => "MOVZX"
  | (T 249) => "OUTSD"
  | (T 250) => "POPAD"
  | (T 251) => "POPFD"
  | (T 252) => "PUSHAD"
  | (T 253) => "PUSHFD"
  | (T 254) => "SCASD"
  | (T 255) => "SETA"
  | (T 256) => "SETAE"
  | (T 257) => "SETB"
  | (T 258) => "SETBE"
  | (T 259) => "SETC"
  | (T 260) => "SETE"
  | (T 261) => "SETG"
  | (T 262) => "SETGE"
  | (T 263) => "SETL"
  | (T 264) => "SETLE"
  | (T 265) => "SETNA"
  | (T 266) => "SETNAE"
  | (T 267) => "SETNB"
  | (T 268) => "SETNBE"
  | (T 269) => "SETNC"
  | (T 270) => "SETNE"
  | (T 271) => "SETNG"
  | (T 272) => "SETNGE"
  | (T 273) => "SETNL"
  | (T 274) => "SETNLE"
  | (T 275) => "SETNO"
  | (T 276) => "SETNP"
  | (T 277) => "SETNS"
  | (T 278) => "SETNZ"
  | (T 279) => "SETO"
  | (T 280) => "SETP"
  | (T 281) => "SETPE"
  | (T 282) => "SETPO"
  | (T 283) => "SETS"
  | (T 284) => "SETZ"
  | (T 285) => "FCOS"
  | (T 286) => "FLDENVD"
  | (T 287) => "FSAVED"
  | (T 288) => "FSTENVD"
  | (T 289) => "FPREM1"
  | (T 290) => "FRSTORD"
  | (T 291) => "FSIN"
  | (T 292) => "FSINCOS"
  | (T 293) => "FUCOM"
  | (T 294) => "FUCOMP"
  | (T 295) => "FUCOMPP"
  | (T 296) => "BSWAP"
  | (T 297) => "CMPXCHG"
  | (T 298) => "INVD"
  | (T 299) => "INVLPG"
  | (T 300) => "WBINVD"
  | (T 301) => "XADD"
  | (T 302) => "CPUID"
  | (T 303) => "CMPXCHG8B"
  | (T 304) => "RDMSR"
  | (T 305) => "RDTSC"
  | (T 306) => "WRMSR"
  | (T 307) => "RSM"
  | (T 308) => "RDPMC"
  | (T 309) => "EMMS"
  | (T 310) => "MOVD"
  | (T 311) => "MOVQ"
  | (T 312) => "PACKSSDW"
  | (T 313) => "PACKSSWB"
  | (T 314) => "PACKUSWB"
  | (T 315) => "PADDB"
  | (T 316) => "PADDW"
  | (T 317) => "PADDD"
  | (T 318) => "PADDQ"
  | (T 319) => "PADDSB"
  | (T 320) => "PADDSW"
  | (T 321) => "PADDUSB"
  | (T 322) => "PADDUSW"
  | (T 323) => "PAND"
  | (T 324) => "PANDN"
  | (T 325) => "POR"
  | (T 326) => "PXOR"
  | (T 327) => "PCMPEQB"
  | (T 328) => "PCMPEQW"
  | (T 329) => "PCMPEQD"
  | (T 330) => "PCMPGTB"
  | (T 331) => "PCMPGTW"
  | (T 332) => "PCMPGTD"
  | (T 333) => "PMADDWD"
  | (T 334) => "PMULHW"
  | (T 335) => "PMULLW"
  | (T 336) => "PSLLW"
  | (T 337) => "PSLLD"
  | (T 338) => "PSLLQ"
  | (T 339) => "PSRAD"
  | (T 340) => "PSRAW"
  | (T 341) => "PSRLW"
  | (T 342) => "PSRLD"
  | (T 343) => "PSRLQ"
  | (T 344) => "PSUBB"
  | (T 345) => "PSUBW"
  | (T 346) => "PSUBD"
  | (T 347) => "PSUBSB"
  | (T 348) => "PSUBSW"
  | (T 349) => "PSUBUSB"
  | (T 350) => "PSUBUSW"
  | (T 351) => "PUNPCKHBW"
  | (T 352) => "PUNPCKHWD"
  | (T 353) => "PUNPCKHDQ"
  | (T 354) => "PUNPCKLBW"
  | (T 355) => "PUNPCKLWD"
  | (T 356) => "PUNPCKLDQ"
  | (T 357) => "CMOVA"
  | (T 358) => "CMOVAE"
  | (T 359) => "CMOVB"
  | (T 360) => "CMOVBE"
  | (T 361) => "CMOVC"
  | (T 362) => "CMOVE"
  | (T 363) => "CMOVG"
  | (T 364) => "CMOVGE"
  | (T 365) => "CMOVL"
  | (T 366) => "CMOVLE"
  | (T 367) => "CMOVNA"
  | (T 368) => "CMOVNAE"
  | (T 369) => "CMOVNB"
  | (T 370) => "CMOVNBE"
  | (T 371) => "CMOVNC"
  | (T 372) => "CMOVNE"
  | (T 373) => "CMOVNG"
  | (T 374) => "CMOVNGE"
  | (T 375) => "CMOVNL"
  | (T 376) => "CMOVNLE"
  | (T 377) => "CMOVNO"
  | (T 378) => "CMOVNP"
  | (T 379) => "CMOVNS"
  | (T 380) => "CMOVNZ"
  | (T 381) => "CMOVO"
  | (T 382) => "CMOVP"
  | (T 383) => "CMOVPE"
  | (T 384) => "CMOVPO"
  | (T 385) => "CMOVS"
  | (T 386) => "CMOVZ"
  | (T 387) => "UD2"
  | (T 388) => "FCMOVB"
  | (T 389) => "FCMOVBE"
  | (T 390) => "FCMOVE"
  | (T 391) => "FCMOVNB"
  | (T 392) => "FCMOVNBE"
  | (T 393) => "FCMOVNE"
  | (T 394) => "FCMOVNU"
  | (T 395) => "FCMOVU"
  | (T 396) => "FCOMI"
  | (T 397) => "FCOMIP"
  | (T 398) => "FUCOMI"
  | (T 399) => "FUCOMIP"
  | (T 400) => "SYSENTER"
  | (T 401) => "SYSEXIT"
  | (T 402) => "MASKMOVQ"
  | (T 403) => "MOVNTQ"
  | (T 404) => "PREFETCHT0"
  | (T 405) => "PREFETCHT1"
  | (T 406) => "PREFETCHT2"
  | (T 407) => "PREFETCHNTA"
  | (T 408) => "SFENCE"
  | (T 409) => "FXRSTOR"
  | (T 410) => "FXSAVE"
  | (T 411) => "PSHUFW"
  | (T 412) => "PINSRW"
  | (T 413) => "PEXTRW"
  | (T 414) => "PMOVMSKB"
  | (T 415) => "PMINUB"
  | (T 416) => "PMAXUB"
  | (T 417) => "PAVGB"
  | (T 418) => "PAVGW"
  | (T 419) => "PMULHUW"
  | (T 420) => "PMINSW"
  | (T 421) => "PMAXSW"
  | (T 422) => "PSADBW"
  | (T 423) => "ANDPS"
  | (T 424) => "ANDNPS"
  | (T 425) => "ORPS"
  | (T 426) => "XORPS"
  | (T 427) => "MOVUPS"
  | (T 428) => "MOVSS"
  | (T 429) => "MOVHLPS"
  | (T 430) => "MOVLPS"
  | (T 431) => "UNPCKLPS"
  | (T 432) => "UNPCKHPS"
  | (T 433) => "MOVLHPS"
  | (T 434) => "MOVHPS"
  | (T 435) => "MOVAPS"
  | (T 436) => "MOVMSKPS"
  | (T 437) => "CVTPI2PS"
  | (T 438) => "CVTSI2SS"
  | (T 439) => "MOVNTPS"
  | (T 440) => "CVTTPS2PI"
  | (T 441) => "CVTTSS2SI"
  | (T 442) => "CVTPS2PI"
  | (T 443) => "CVTSS2SI"
  | (T 444) => "UCOMISS"
  | (T 445) => "COMISS"
  | (T 446) => "SQRTPS"
  | (T 447) => "SQRTSS"
  | (T 448) => "RSQRTPS"
  | (T 449) => "RSQRTSS"
  | (T 450) => "RCPPS"
  | (T 451) => "RCPSS"
  | (T 452) => "ADDPS"
  | (T 453) => "ADDSS"
  | (T 454) => "MULPS"
  | (T 455) => "MULSS"
  | (T 456) => "SUBPS"
  | (T 457) => "SUBSS"
  | (T 458) => "MINPS"
  | (T 459) => "MINSS"
  | (T 460) => "DIVPS"
  | (T 461) => "DIVSS"
  | (T 462) => "MAXPS"
  | (T 463) => "MAXSS"
  | (T 464) => "LDMXCSR"
  | (T 465) => "STMXCSR"
  | (T 466) => "CMPPS"
  | (T 467) => "CMPSS"
  | (T 468) => "SHUFPS"
  | (T 469) => "CLFLUSH"
  | (T 470) => "LFENCE"
  | (T 471) => "MFENCE"
  | (T 472) => "MOVNTI"
  | (T 473) => "PAUSE"
  | (T 474) => "PSUBQ"
  | (T 475) => "PMULUDQ"
  | (T 476) => "MOVAPD"
  | (T 477) => "MOVNTPD"
  | (T 478) => "MOVHPD"
  | (T 479) => "MOVLPD"
  | (T 480) => "MOVUPD"
  | (T 481) => "MOVMSKPD"
  | (T 482) => "MOVSD"
  | (T 483) => "ADDPD"
  | (T 484) => "ADDSD"
  | (T 485) => "DIVPD"
  | (T 486) => "DIVSD"
  | (T 487) => "MAXPD"
  | (T 488) => "MAXSD"
  | (T 489) => "MINPD"
  | (T 490) => "MINSD"
  | (T 491) => "MULPD"
  | (T 492) => "MULSD"
  | (T 493) => "SQRTPD"
  | (T 494) => "SQRTSD"
  | (T 495) => "SUBPD"
  | (T 496) => "SUBSD"
  | (T 497) => "ANDPD"
  | (T 498) => "ANDNPD"
  | (T 499) => "ORPD"
  | (T 500) => "XORPD"
  | (T 501) => "CMPPD"
  | (T 502) => "CMPSD"
  | (T 503) => "COMISD"
  | (T 504) => "UCOMISD"
  | (T 505) => "SHUFPD"
  | (T 506) => "UNPCKHPD"
  | (T 507) => "UNPCKLPD"
  | (T 508) => "CVTDQ2PD"
  | (T 509) => "CVTDQ2PS"
  | (T 510) => "CVTPD2DQ"
  | (T 511) => "CVTPD2PI"
  | (T 512) => "CVTPD2PS"
  | (T 513) => "CVTPI2PD"
  | (T 514) => "CVTPS2DQ"
  | (T 515) => "CVTPS2PD"
  | (T 516) => "CVTSD2SI"
  | (T 517) => "CVTSD2SS"
  | (T 518) => "CVTSI2SD"
  | (T 519) => "CVTSS2SD"
  | (T 520) => "CVTTPD2DQ"
  | (T 521) => "CVTTPD2PI"
  | (T 522) => "CVTTPS2DQ"
  | (T 523) => "CVTTSD2SI"
  | (T 524) => "MASKMOVDQU"
  | (T 525) => "MOVDQ2Q"
  | (T 526) => "MOVDQA"
  | (T 527) => "MOVDQU"
  | (T 528) => "MOVQ2DQ"
  | (T 529) => "MOVNTDQ"
  | (T 530) => "PSHUFHW"
  | (T 531) => "PSHUFLW"
  | (T 532) => "PSHUFD"
  | (T 533) => "PSLLDQ"
  | (T 534) => "PSRLDQ"
  | (T 535) => "PUNPCKHQDQ"
  | (T 536) => "PUNPCKLQDQ"
  | (T 537) => "CDQE"
  | (T 538) => "CQO"
  | (T 539) => "CMPSQ"
  | (T 540) => "CMPXCHG16B"
  | (T 541) => "IRETQ"
  | (T 542) => "JRCXZ"
  | (T 543) => "LODSQ"
  | (T 544) => "MOVSXD"
  | (T 545) => "POPFQ"
  | (T 546) => "PUSHFQ"
  | (T 547) => "RDTSCP"
  | (T 548) => "SCASQ"
  | (T 549) => "STOSQ"
  | (T 550) => "SWAPGS"
  | (T 551) => "MONITOR"
  | (T 552) => "MWAIT"
  | (T 553) => "FISTTP"
  | (T 554) => "ADDSUBPS"
  | (T 555) => "ADDSUBPD"
  | (T 556) => "MOVDDUP"
  | (T 557) => "MOVSLDUP"
  | (T 558) => "MOVSHDUP"
  | (T 559) => "HADDPS"
  | (T 560) => "HADDPD"
  | (T 561) => "HSUBPS"
  | (T 562) => "HSUBPD"
  | (T 563) => "LDDQU"
  | (T 564) => "PSIGNB"
  | (T 565) => "PSIGNW"
  | (T 566) => "PSIGND"
  | (T 567) => "PSHUFB"
  | (T 568) => "PMULHRSW"
  | (T 569) => "PMADDUBSW"
  | (T 570) => "PHSUBW"
  | (T 571) => "PHSUBSW"
  | (T 572) => "PHSUBD"
  | (T 573) => "PHADDSW"
  | (T 574) => "PHADDW"
  | (T 575) => "PHADDD"
  | (T 576) => "PALIGNR"
  | (T 577) => "PABSB"
  | (T 578) => "PABSW"
  | (T 579) => "PABSD"
  | (T 580) => "DPPS"
  | (T 581) => "DPPD"
  | (T 582) => "BLENDPS"
  | (T 583) => "BLENDVPS"
  | (T 584) => "BLENDPD"
  | (T 585) => "BLENDVPD"
  | (T 586) => "ROUNDPS"
  | (T 587) => "ROUNDSS"
  | (T 588) => "ROUNDPD"
  | (T 589) => "ROUNDSD"
  | (T 590) => "INSERTPS"
  | (T 591) => "EXTRACTPS"
  | (T 592) => "MPSADBW"
  | (T 593) => "PHMINPOSUW"
  | (T 594) => "PMULLD"
  | (T 595) => "PMULDQ"
  | (T 596) => "PBLENDVB"
  | (T 597) => "PBLENDW"
  | (T 598) => "PMINSB"
  | (T 599) => "PMINUW"
  | (T 600) => "PMINSD"
  | (T 601) => "PMINUD"
  | (T 602) => "PMAXSB"
  | (T 603) => "PMAXUW"
  | (T 604) => "PMAXSD"
  | (T 605) => "PMAXUD"
  | (T 606) => "PINSRB"
  | (T 607) => "PINSRD"
  | (T 608) => "PINSRQ"
  | (T 609) => "PEXTRB"
  | (T 610) => "PEXTRD"
  | (T 611) => "PEXTRQ"
  | (T 612) => "PMOVSXBW"
  | (T 613) => "PMOVZXBW"
  | (T 614) => "PMOVSXBD"
  | (T 615) => "PMOVZXBD"
  | (T 616) => "PMOVSXBQ"
  | (T 617) => "PMOVZXBQ"
  | (T 618) => "PMOVSXWD"
  | (T 619) => "PMOVZXWD"
  | (T 620) => "PMOVSXWQ"
  | (T 621) => "PMOVZXWQ"
  | (T 622) => "PMOVSXDQ"
  | (T 623) => "PMOVZXDQ"
  | (T 624) => "PTEST"
  | (T 625) => "PCMPEQQ"
  | (T 626) => "PACKUSDW"
  | (T 627) => "MOVNTDQA"
  | (T 628) => "VMPTRLD"
  | (T 629) => "VMPTRST"
  | (T 630) => "VMCLEAR"
  | (T 631) => "VMREAD"
  | (T 632) => "VMWRITE"
  | (T 633) => "VMCALL"
  | (T 634) => "VMLAUNCH"
  | (T 635) => "VMRESUME"
  | (T 636) => "VMXOFF"
  | (T 637) => "VMXON"
  | (T 638) => "VMFUNC"
  | (T 639) => "INVVPID"
  | (T 640) => "INVEPT"
  | (T 641) => "CRC32"
  | (T 642) => "POPCNT"
  | (T 643) => "PCMPESTRI"
  | (T 644) => "PCMPESTRM"
  | (T 645) => "PCMPISTRI"
  | (T 646) => "PCMPISTRM"
  | (T 647) => "PCMPGTQ"
  | (T 648) => "VSQRTPS"
  | (T 649) => "VSQRTPD"
  | (T 650) => "VRSQRTPS"
  | (T 651) => "VRCPPS"
  | (T 652) => "VADDPS"
  | (T 653) => "VADDPD"
  | (T 654) => "VSUBPS"
  | (T 655) => "VSUBPD"
  | (T 656) => "VMULPS"
  | (T 657) => "VMULPD"
  | (T 658) => "VDIVPS"
  | (T 659) => "VDIVPD"
  | (T 660) => "VCVTPS2PD"
  | (T 661) => "VCVTPD2PS"
  | (T 662) => "VCVTDQ2PS"
  | (T 663) => "VCVTPS2DQ"
  | (T 664) => "VCVTTPS2DQ"
  | (T 665) => "VCVTTPD2DQ"
  | (T 666) => "VCVTPD2DQ"
  | (T 667) => "VCVTDQ2PD"
  | (T 668) => "VMINPS"
  | (T 669) => "VMINPD"
  | (T 670) => "VMAXPS"
  | (T 671) => "VMAXPD"
  | (T 672) => "VHADDPD"
  | (T 673) => "VHADDPS"
  | (T 674) => "VHSUBPD"
  | (T 675) => "VHSUBPS"
  | (T 676) => "VCMPPS"
  | (T 677) => "VCMPPD"
  | (T 678) => "VADDSUBPD"
  | (T 679) => "VADDSUBPS"
  | (T 680) => "VDPPS"
  | (T 681) => "VROUNDPD"
  | (T 682) => "VROUNDPS"
  | (T 683) => "VMOVAPS"
  | (T 684) => "VMOVAPD"
  | (T 685) => "VMOVDQA"
  | (T 686) => "VMOVUPS"
  | (T 687) => "VMOVUPD"
  | (T 688) => "VMOVDQU"
  | (T 689) => "VMOVMSKPS"
  | (T 690) => "VMOVMSKPD"
  | (T 691) => "VLDDQU"
  | (T 692) => "VMOVNTPS"
  | (T 693) => "VMOVNTPD"
  | (T 694) => "VMOVNTDQ"
  | (T 695) => "VMOVNTDQA"
  | (T 696) => "VMOVSHDUP"
  | (T 697) => "VMOVSLDUP"
  | (T 698) => "VMOVDDUP"
  | (T 699) => "VUNPCKHPD"
  | (T 700) => "VUNPCKHPS"
  | (T 701) => "VUNPCKLPD"
  | (T 702) => "VBLENDPS"
  | (T 703) => "VBLENDPD"
  | (T 704) => "VSHUFPD"
  | (T 705) => "VSHUFPS"
  | (T 706) => "VUNPCKLPS"
  | (T 707) => "VBLENDVPS"
  | (T 708) => "VBLENDVPD"
  | (T 709) => "VPTEST"
  | (T 710) => "VXORPS"
  | (T 711) => "VXORPD"
  | (T 712) => "VORPS"
  | (T 713) => "VORPD"
  | (T 714) => "VANDNPD"
  | (T 715) => "VANDNPS"
  | (T 716) => "VANDPD"
  | (T 717) => "VANDPS"
  | (T 718) => "VBROADCASTF128"
  | (T 719) => "VBROADCASTSD"
  | (T 720) => "VBROADCASTSS"
  | (T 721) => "VEXTRACTF128"
  | (T 722) => "VINSERTF128"
  | (T 723) => "VMASKMOVPS"
  | (T 724) => "VMASKMOVPD"
  | (T 725) => "VPERMILPD"
  | (T 726) => "VPERMILPS"
  | (T 727) => "VPERM2F128"
  | (T 728) => "VTESTPS"
  | (T 729) => "VTESTPD"
  | (T 730) => "VZEROALL"
  | (T 731) => "VZEROUPPER"
  | (T 732) => "VCVTSI2SS"
  | (T 733) => "VCVTSI2SD"
  | (T 734) => "VCVTSD2SI"
  | (T 735) => "VCVTTSS2SI"
  | (T 736) => "VCVTTSD2SI"
  | (T 737) => "VCVTSS2SI"
  | (T 738) => "VCOMISD"
  | (T 739) => "VRSQRTSS"
  | (T 740) => "VRCPSS"
  | (T 741) => "VUCOMISS"
  | (T 742) => "VUCOMISD"
  | (T 743) => "VCOMISS"
  | (T 744) => "VADDSS"
  | (T 745) => "VADDSD"
  | (T 746) => "VSUBSS"
  | (T 747) => "VSUBSD"
  | (T 748) => "VMULSS"
  | (T 749) => "VMULSD"
  | (T 750) => "VDIVSS"
  | (T 751) => "VDIVSD"
  | (T 752) => "VSQRTSS"
  | (T 753) => "VSQRTSD"
  | (T 754) => "VCVTSS2SD"
  | (T 755) => "VCVTSD2SS"
  | (T 756) => "VMINSS"
  | (T 757) => "VMINSD"
  | (T 758) => "VMAXSS"
  | (T 759) => "VMAXSD"
  | (T 760) => "VPAND"
  | (T 761) => "VPANDN"
  | (T 762) => "VPOR"
  | (T 763) => "VPXOR"
  | (T 764) => "VPCMPGTB"
  | (T 765) => "VPCMPGTW"
  | (T 766) => "VPCMPGTD"
  | (T 767) => "VPMADDWD"
  | (T 768) => "VPMADDUBSW"
  | (T 769) => "VPAVGB"
  | (T 770) => "VPAVGW"
  | (T 771) => "VPMULUDQ"
  | (T 772) => "VPCMPEQB"
  | (T 773) => "VPCMPEQW"
  | (T 774) => "VPCMPEQD"
  | (T 775) => "VPMULLW"
  | (T 776) => "VPMULHUW"
  | (T 777) => "VPMULHW"
  | (T 778) => "VPSUBSW"
  | (T 779) => "VPADDSW"
  | (T 780) => "VPSADBW"
  | (T 781) => "VPADDUSB"
  | (T 782) => "VPADDUSW"
  | (T 783) => "VPADDSB"
  | (T 784) => "VPSUBUSB"
  | (T 785) => "VPSUBUSW"
  | (T 786) => "VPSUBSB"
  | (T 787) => "VPMINUB"
  | (T 788) => "VPMINSW"
  | (T 789) => "VPMAXUB"
  | (T 790) => "VPMAXSW"
  | (T 791) => "VPADDB"
  | (T 792) => "VPADDW"
  | (T 793) => "VPADDD"
  | (T 794) => "VPADDQ"
  | (T 795) => "VPSUBB"
  | (T 796) => "VPSUBW"
  | (T 797) => "VPSUBD"
  | (T 798) => "VPSUBQ"
  | (T 799) => "VPSLLW"
  | (T 800) => "VPSLLD"
  | (T 801) => "VPSLLQ"
  | (T 802) => "VPSRAW"
  | (T 803) => "VPSRLW"
  | (T 804) => "VPSRLD"
  | (T 805) => "VPSRLQ"
  | (T 806) => "VPSRAD"
  | (T 807) => "VPHSUBW"
  | (T 808) => "VPHSUBD"
  | (T 809) => "VPHSUBSW"
  | (T 810) => "VPHADDW"
  | (T 811) => "VPHADDD"
  | (T 812) => "VPHADDSW"
  | (T 813) => "VPMULHRSW"
  | (T 814) => "VPSIGNB"
  | (T 815) => "VPSIGNW"
  | (T 816) => "VPSIGND"
  | (T 817) => "VPABSB"
  | (T 818) => "VPABSW"
  | (T 819) => "VPABSD"
  | (T 820) => "VDPPD"
  | (T 821) => "VPHMINPOSUW"
  | (T 822) => "VMPSADBW"
  | (T 823) => "VPMAXSB"
  | (T 824) => "VPMAXSD"
  | (T 825) => "VPMAXUD"
  | (T 826) => "VPMINSB"
  | (T 827) => "VPMINSD"
  | (T 828) => "VPMINUD"
  | (T 829) => "VPMAXUW"
  | (T 830) => "VPMINUW"
  | (T 831) => "VPMOVSXBW"
  | (T 832) => "VPMOVZXBW"
  | (T 833) => "VPMOVSXBD"
  | (T 834) => "VPMOVZXBD"
  | (T 835) => "VPMOVSXBQ"
  | (T 836) => "VPMOVZXBQ"
  | (T 837) => "VPMOVSXWD"
  | (T 838) => "VPMOVZXWD"
  | (T 839) => "VPMOVSXWQ"
  | (T 840) => "VPMOVZXWQ"
  | (T 841) => "VPMOVSXDQ"
  | (T 842) => "VPMOVZXDQ"
  | (T 843) => "VPMULDQ"
  | (T 844) => "VPMULLD"
  | (T 845) => "VROUNDSD"
  | (T 846) => "VROUNDSS"
  | (T 847) => "VPOPCNT"
  | (T 848) => "VPCMPGTQ"
  | (T 849) => "VPCMPESTRI"
  | (T 850) => "VPCMPESTRM"
  | (T 851) => "VPCMPISTRI"
  | (T 852) => "VPCMPISTRM"
  | (T 853) => "VPCLMULQDQ"
  | (T 854) => "VAESDEC"
  | (T 855) => "VAESDECLAST"
  | (T 856) => "VAESENC"
  | (T 857) => "VAESENCLAST"
  | (T 858) => "VAESIMX"
  | (T 859) => "VAESKEYGENASSIST"
  | (T 860) => "VSTMXCSR"
  | (T 861) => "VMOVSS"
  | (T 862) => "VMOVSD"
  | (T 863) => "VCMPSS"
  | (T 864) => "VCMPSD"
  | (T 865) => "VMOVHPS"
  | (T 866) => "VMOVHPD"
  | (T 867) => "VMOVLPS"
  | (T 868) => "VMOVLPD"
  | (T 869) => "VMOVLHPS"
  | (T 870) => "VMOVHLPS"
  | (T 871) => "VMOVQ"
  | (T 872) => "VMOVD"
  | (T 873) => "VPACKUSWB"
  | (T 874) => "VPACKSSDW"
  | (T 875) => "VPACKSSWB"
  | (T 876) => "VPUNPCKHBW"
  | (T 877) => "VPUNPCKHWD"
  | (T 878) => "VPUNPCKLBW"
  | (T 879) => "VPUNPCKLWD"
  | (T 880) => "VPUNPCKHDQ"
  | (T 881) => "VPUNPCKLDQ"
  | (T 882) => "VPUNPCKLQDQ"
  | (T 883) => "VPUNPCKHQDQ"
  | (T 884) => "VPSHUFHW"
  | (T 885) => "VPSHUFLW"
  | (T 886) => "VPSHUFD"
  | (T 887) => "VPMOVMSKB"
  | (T 888) => "VMASKMOVDQU"
  | (T 889) => "VPINSRW"
  | (T 890) => "VPEXTRW"
  | (T 891) => "VPALIGNR"
  | (T 892) => "VPSHUFB"
  | (T 893) => "VEXTRACTPS"
  | (T 894) => "VINSERTPS"
  | (T 895) => "VPACKUSDW"
  | (T 896) => "VPCMPEQQ"
  | (T 897) => "VPBLENDVB"
  | (T 898) => "VPBLENDW"
  | (T 899) => "VPEXTRB"
  | (T 900) => "VPEXTRD"
  | (T 901) => "VPEXTRQ"
  | (T 902) => "VPINSRB"
  | (T 903) => "VPINSRD"
  | (T 904) => "VPINSRQ"
  | (T 905) => "VFMADD132PD"
  | (T 906) => "VFMADD213PD"
  | (T 907) => "VFMADD231PD"
  | (T 908) => "VFMADD132PS"
  | (T 909) => "VFMADD213PS"
  | (T 910) => "VFMADD231PS"
  | (T 911) => "VFMADD132SD"
  | (T 912) => "VFMADD213SD"
  | (T 913) => "VFMADD231SD"
  | (T 914) => "VFMADD132SS"
  | (T 915) => "VFMADD213SS"
  | (T 916) => "VFMADD231SS"
  | (T 917) => "VFMADDSUB132PD"
  | (T 918) => "VFMADDSUB213PD"
  | (T 919) => "VFMADDSUB231PD"
  | (T 920) => "VFMADDSUB132PS"
  | (T 921) => "VFMADDSUB213PS"
  | (T 922) => "VFMADDSUB231PS"
  | (T 923) => "VFMSUBADD132PD"
  | (T 924) => "VFMSUBADD213PD"
  | (T 925) => "VFMSUBADD231PD"
  | (T 926) => "VFMSUBADD132PS"
  | (T 927) => "VFMSUBADD213PS"
  | (T 928) => "VFMSUBADD231PS"
  | (T 929) => "VFMSUB132PD"
  | (T 930) => "VFMSUB213PD"
  | (T 931) => "VFMSUB231PD"
  | (T 932) => "VFMSUB132PS"
  | (T 933) => "VFMSUB213PS"
  | (T 934) => "VFMSUB231PS"
  | (T 935) => "VFMSUB132SD"
  | (T 936) => "VFMSUB213SD"
  | (T 937) => "VFMSUB231SD"
  | (T 938) => "VFMSUB132SS"
  | (T 939) => "VFMSUB213SS"
  | (T 940) => "VFMSUB231SS"
  | (T 941) => "VFNMADD132PD"
  | (T 942) => "VFNMADD213PD"
  | (T 943) => "VFNMADD231PD"
  | (T 944) => "VFNMADD132PS"
  | (T 945) => "VFNMADD213PS"
  | (T 946) => "VFNMADD231PS"
  | (T 947) => "VFNMADD132SD"
  | (T 948) => "VFNMADD213SD"
  | (T 949) => "VFNMADD231SD"
  | (T 950) => "VFNMADD132SS"
  | (T 951) => "VFNMADD213SS"
  | (T 952) => "VFNMADD231SS"
  | (T 953) => "VFNMSUB132PD"
  | (T 954) => "VFNMSUB213PD"
  | (T 955) => "VFNMSUB231PD"
  | (T 956) => "VFNMSUB132PS"
  | (T 957) => "VFNMSUB213PS"
  | (T 958) => "VFNMSUB231PS"
  | (T 959) => "VFNMSUB132SD"
  | (T 960) => "VFNMSUB213SD"
  | (T 961) => "VFNMSUB231SD"
  | (T 962) => "VFNMSUB132SS"
  | (T 963) => "VFNMSUB213SS"
  | (T 964) => "VFNMSUB231SS"
  | (T 965) => "ANDN"
  | (T 966) => "BEXTR"
  | (T 967) => "BLSI"
  | (T 968) => "BLSMSK"
  | (T 969) => "BLSR"
  | (T 970) => "BZHI"
  | (T 971) => "LZCNT"
  | (T 972) => "MULX"
  | (T 973) => "PDEP"
  | (T 974) => "PEXT"
  | (T 975) => "RORX"
  | (T 976) => "SARX"
  | (T 977) => "SHLX"
  | (T 978) => "SHRX"
  | (T 979) => "TZCNT"
  | (T 980) => "VPBROADCASTB"
  | (T 981) => "VPBROADCASTD"
  | (T 982) => "VPBROADCASTQ"
  | (T 983) => "VPBROADCASTW"
  | (T 984) => "R8"
  | (T 985) => "RH"
  | (T 986) => "R16"
  | (T 987) => "R32"
  | (T 988) => "R64"
  | (T 989) => "XMM"
  | (T 990) => "YMM"
  | (T 991) => "ZMM"
  | (T 992) => "SPECIFICREG"
  | (T 993) => "REG_TYPE_TERMINAL"
  | (T 994) => "M8"
  | (T 995) => "M16"
  | (T 996) => "M32"
  | (T 997) => "M64"
  | (T 998) => "M128"
  | (T 999) => "M256"
  | (T 1000) => "MEM_TERMINAL"
  | (T 1001) => "IMMONE"
  | (T 1002) => "IMM8"
  | (T 1003) => "IMM16"
  | (T 1004) => "IMM32"
  | (T 1005) => "IMM64"
  | (T 1006) => "IMM_TERMINAL"
  | (T 1007) => "ZF"
  | (T 1008) => "PF"
  | (T 1009) => "SF"
  | (T 1010) => "CF"
  | (T 1011) => "OF"
  | (T 1012) => "AF"
  | (T 1013) => "OP1"
  | (T 1014) => "OP2"
  | (T 1015) => "OP3"
  | (T 1016) => "OP1_W3"
  | (T 1017) => "OP1_W2"
  | (T 1018) => "OP1_W1"
  | (T 1019) => "OP1_W0"
  | (T 1020) => "OP2_W3"
  | (T 1021) => "OP2_W2"
  | (T 1022) => "OP2_W1"
  | (T 1023) => "OP2_W0"
  | (T 1024) => "OP3_W3"
  | (T 1025) => "OP3_W2"
  | (T 1026) => "OP3_W1"
  | (T 1027) => "OP3_W0"
  | (T 1028) => "RAX"
  | (T 1029) => "RBX"
  | (T 1030) => "RCX"
  | (T 1031) => "RDX"
  | (T 1032) => "COMMA"
  | (T 1033) => "EMPTY_FORMULA"
  | (T 1034) => "COLON"
  | (T 1035) => "LBRACKET"
  | (T 1036) => "RBRACKET"
  | (T 1037) => "LPAREN"
  | (T 1038) => "RPAREN"
  | (T 1039) => "SEMI_COLON"
  | (T 1040) => "OP_PLUS"
  | (T 1041) => "EQ"
  | (T 1042) => "ARROW"
  | (T 1043) => "EOF"
  | (T 1044) => "UNDERSCORE"
  | (T 1045) => "NEWLINE"
  | (T 1046) => "QMARK"
  | (T 1047) => "FEQ"
  | (T 1048) => "BEQ"
  | (T 1049) => "TRUE"
  | (T 1050) => "FALSE"
  | (T 1051) => "B_BINOP_AND"
  | (T 1052) => "B_BINOP_OR"
  | (T 1053) => "B_BINOP_XOR"
  | (T 1054) => "B_BINOP_IFF"
  | (T 1055) => "B_BINOP_IMPLIES"
  | (T 1056) => "TERNOP_VFMADD132_SINGLE"
  | (T 1057) => "TERNOP_VFMADD132_DOUBLE"
  | (T 1058) => "TERNOP_VFMSUB132_SINGLE"
  | (T 1059) => "TERNOP_VFMSUB132_DOUBLE"
  | (T 1060) => "TERNOP_VFNMADD132_SINGLE"
  | (T 1061) => "TERNOP_VFNMADD132_DOUBLE"
  | (T 1062) => "TERNOP_VFNMSUB132_SINGLE"
  | (T 1063) => "TERNOP_VNFMSUB132_DOUBLE"
  | (T 1064) => "BINOP_AND"
  | (T 1065) => "BINOP_CONCAT"
  | (T 1066) => "BINOP_DIV"
  | (T 1067) => "BINOP_MINUS"
  | (T 1068) => "BINOP_MODULUS"
  | (T 1069) => "BINOP_MULT"
  | (T 1070) => "BINOP_OR"
  | (T 1071) => "BINOP_PLUS"
  | (T 1072) => "BINOP_ROT_LEFT"
  | (T 1073) => "BINOP_ROT_RIGHT"
  | (T 1074) => "BINOP_SHIFT_LEFT"
  | (T 1075) => "BINOP_SHIFT_RIGHT"
  | (T 1076) => "BINOP_SIGNED_DIV"
  | (T 1077) => "BINOP_SIGNED_MOD"
  | (T 1078) => "BINOP_SIGN_SHIFT_RIGHT"
  | (T 1079) => "BINOP_XOR"
  | (T 1080) => "BINOP_ADD_SINGLE"
  | (T 1081) => "BINOP_SUB_SINGLE"
  | (T 1082) => "BINOP_DIV_SINGLE"
  | (T 1083) => "BINOP_MUL_SINGLE"
  | (T 1084) => "BINOP_ADD_DOUBLE"
  | (T 1085) => "BINOP_SUB_DOUBLE"
  | (T 1086) => "BINOP_DIV_DOUBLE"
  | (T 1087) => "BINOP_MUL_DOUBLE"
  | (T 1088) => "BINOP_CMPF"
  | (T 1089) => "BINOP_CMPD"
  | (T 1090) => "BINOP_MINCMP_SINGLE"
  | (T 1091) => "BINOP_MAXCMP_SINGLE"
  | (T 1092) => "BINOP_MAXCMP_DOUBLE"
  | (T 1093) => "BINOP_MINCMP_DOUBLE"
  | (T 1094) => "BINOP_IDIV_QUOTIENT_INT8"
  | (T 1095) => "BINOP_IDIV_REMAINDER_INT8"
  | (T 1096) => "BINOP_DIV_QUOTIENT_INT8"
  | (T 1097) => "BINOP_DIV_REMAINDER_INT8"
  | (T 1098) => "BINOP_IDIV_QUOTIENT_INT16"
  | (T 1099) => "BINOP_IDIV_REMAINDER_INT16"
  | (T 1100) => "BINOP_DIV_QUOTIENT_INT16"
  | (T 1101) => "BINOP_DIV_REMAINDER_INT16"
  | (T 1102) => "BINOP_IDIV_QUOTIENT_INT32"
  | (T 1103) => "BINOP_IDIV_REMAINDER_INT32"
  | (T 1104) => "BINOP_DIV_QUOTIENT_INT32"
  | (T 1105) => "BINOP_DIV_REMAINDER_INT32"
  | (T 1106) => "BINOP_DIV_QUOTIENT_INT64"
  | (T 1107) => "BINOP_DIV_REMAINDER_INT64"
  | (T 1108) => "BINOP_IDIV_QUOTIENT_INT64"
  | (T 1109) => "BINOP_IDIV_REMAINDER_INT64"
  | (T 1110) => "UNOP_SEXTEND16"
  | (T 1111) => "UNOP_SEXTEND32"
  | (T 1112) => "UNOP_SEXTEND64"
  | (T 1113) => "UNOP_SEXTEND128"
  | (T 1114) => "UNOP_SEXTEND256"
  | (T 1115) => "UNOP_NOT"
  | (T 1116) => "UNOP_NEG"
  | (T 1117) => "UNOP_CVT_INT32_TO_DOUBLE"
  | (T 1118) => "UNOP_CVT_INT32_TO_SINGLE"
  | (T 1119) => "UNOP_CVT_DOUBLE_TO_INT32"
  | (T 1120) => "UNOP_CVT_DOUBLE_TO_SINGLE"
  | (T 1121) => "UNOP_CVT_SINGLE_TO_INT32"
  | (T 1122) => "UNOP_CVT_SINGLE_TO_DOUBLE"
  | (T 1123) => "UNOP_CVT_DOUBLE_TO_INT64"
  | (T 1124) => "UNOP_CVT_INT64_TO_DOUBLE"
  | (T 1125) => "UNOP_CVT_INT64_TO_SINGLE"
  | (T 1126) => "UNOP_CVT_SINGLE_TO_INT64"
  | (T 1127) => "UNOP_CVT_DOUBLE_TO_INT32_TRUNCATE"
  | (T 1128) => "UNOP_CVT_SINGLE_TO_INT32_TRUNCATE"
  | (T 1129) => "UNOP_CVT_DOUBLE_TO_INT64_TRUNCATE"
  | (T 1130) => "UNOP_CVT_SINGLE_TO_INT64_TRUNCATE"
  | (T 1131) => "UNOP_APPROX_RECIPROCAL_SINGLE"
  | (T 1132) => "UNOP_APPROX_RECIPROCAL_SQRT_SINGLE"
  | (T 1133) => "UNOP_SQRT_DOUBLE"
  | (T 1134) => "UNOP_SQRT_SINGLE"
  | (T 1135) => "UNDEF"
  | _ => "bogus-term"
local open Header in
val errtermvalue=
fn _ => MlyValue.VOID
end
val terms : term list = nil
 $$ (T 1135) $$ (T 1134) $$ (T 1133) $$ (T 1132) $$ (T 1131) $$ (T 1130) $$ (T 1129) $$ (T 1128) $$ (T 1127) $$ (T 1126) $$ (T 1125) $$ (T 1124) $$ (T 1123) $$ (T 1122) $$ (T 1121) $$ (T 1120) $$ (T 1119) $$ (T 1118) $$ (T 1117) $$ (T 1116) $$ (T 1115) $$ (T 1114) $$ (T 1113) $$ (T 1112) $$ (T 1111) $$ (T 1110) $$ (T 1109) $$ (T 1108) $$ (T 1107) $$ (T 1106) $$ (T 1105) $$ (T 1104) $$ (T 1103) $$ (T 1102) $$ (T 1101) $$ (T 1100) $$ (T 1099) $$ (T 1098) $$ (T 1097) $$ (T 1096) $$ (T 1095) $$ (T 1094) $$ (T 1093) $$ (T 1092) $$ (T 1091) $$ (T 1090) $$ (T 1089) $$ (T 1088) $$ (T 1087) $$ (T 1086) $$ (T 1085) $$ (T 1084) $$ (T 1083) $$ (T 1082) $$ (T 1081) $$ (T 1080) $$ (T 1079) $$ (T 1078) $$ (T 1077) $$ (T 1076) $$ (T 1075) $$ (T 1074) $$ (T 1073) $$ (T 1072) $$ (T 1071) $$ (T 1070) $$ (T 1069) $$ (T 1068) $$ (T 1067) $$ (T 1066) $$ (T 1065) $$ (T 1064) $$ (T 1063) $$ (T 1062) $$ (T 1061) $$ (T 1060) $$ (T 1059) $$ (T 1058) $$ (T 1057) $$ (T 1056) $$ (T 1055) $$ (T 1054) $$ (T 1053) $$ (T 1052) $$ (T 1051) $$ (T 1050) $$ (T 1049) $$ (T 1048) $$ (T 1047) $$ (T 1046) $$ (T 1045) $$ (T 1044) $$ (T 1043) $$ (T 1042) $$ (T 1041) $$ (T 1040) $$ (T 1039) $$ (T 1038) $$ (T 1037) $$ (T 1036) $$ (T 1035) $$ (T 1034) $$ (T 1033) $$ (T 1032) $$ (T 1031) $$ (T 1030) $$ (T 1029) $$ (T 1028) $$ (T 1027) $$ (T 1026) $$ (T 1025) $$ (T 1024) $$ (T 1023) $$ (T 1022) $$ (T 1021) $$ (T 1020) $$ (T 1019) $$ (T 1018) $$ (T 1017) $$ (T 1016) $$ (T 1015) $$ (T 1014) $$ (T 1013) $$ (T 1012) $$ (T 1011) $$ (T 1010) $$ (T 1009) $$ (T 1008) $$ (T 1007) $$ (T 1006) $$ (T 1005) $$ (T 1004) $$ (T 1003) $$ (T 1002) $$ (T 1001) $$ (T 1000) $$ (T 999) $$ (T 998) $$ (T 997) $$ (T 996) $$ (T 995) $$ (T 994) $$ (T 993) $$ (T 992) $$ (T 991) $$ (T 990) $$ (T 989) $$ (T 988) $$ (T 987) $$ (T 986) $$ (T 985) $$ (T 984) $$ (T 983) $$ (T 982) $$ (T 981) $$ (T 980) $$ (T 979) $$ (T 978) $$ (T 977) $$ (T 976) $$ (T 975) $$ (T 974) $$ (T 973) $$ (T 972) $$ (T 971) $$ (T 970) $$ (T 969) $$ (T 968) $$ (T 967) $$ (T 966) $$ (T 965) $$ (T 964) $$ (T 963) $$ (T 962) $$ (T 961) $$ (T 960) $$ (T 959) $$ (T 958) $$ (T 957) $$ (T 956) $$ (T 955) $$ (T 954) $$ (T 953) $$ (T 952) $$ (T 951) $$ (T 950) $$ (T 949) $$ (T 948) $$ (T 947) $$ (T 946) $$ (T 945) $$ (T 944) $$ (T 943) $$ (T 942) $$ (T 941) $$ (T 940) $$ (T 939) $$ (T 938) $$ (T 937) $$ (T 936) $$ (T 935) $$ (T 934) $$ (T 933) $$ (T 932) $$ (T 931) $$ (T 930) $$ (T 929) $$ (T 928) $$ (T 927) $$ (T 926) $$ (T 925) $$ (T 924) $$ (T 923) $$ (T 922) $$ (T 921) $$ (T 920) $$ (T 919) $$ (T 918) $$ (T 917) $$ (T 916) $$ (T 915) $$ (T 914) $$ (T 913) $$ (T 912) $$ (T 911) $$ (T 910) $$ (T 909) $$ (T 908) $$ (T 907) $$ (T 906) $$ (T 905) $$ (T 904) $$ (T 903) $$ (T 902) $$ (T 901) $$ (T 900) $$ (T 899) $$ (T 898) $$ (T 897) $$ (T 896) $$ (T 895) $$ (T 894) $$ (T 893) $$ (T 892) $$ (T 891) $$ (T 890) $$ (T 889) $$ (T 888) $$ (T 887) $$ (T 886) $$ (T 885) $$ (T 884) $$ (T 883) $$ (T 882) $$ (T 881) $$ (T 880) $$ (T 879) $$ (T 878) $$ (T 877) $$ (T 876) $$ (T 875) $$ (T 874) $$ (T 873) $$ (T 872) $$ (T 871) $$ (T 870) $$ (T 869) $$ (T 868) $$ (T 867) $$ (T 866) $$ (T 865) $$ (T 864) $$ (T 863) $$ (T 862) $$ (T 861) $$ (T 860) $$ (T 859) $$ (T 858) $$ (T 857) $$ (T 856) $$ (T 855) $$ (T 854) $$ (T 853) $$ (T 852) $$ (T 851) $$ (T 850) $$ (T 849) $$ (T 848) $$ (T 847) $$ (T 846) $$ (T 845) $$ (T 844) $$ (T 843) $$ (T 842) $$ (T 841) $$ (T 840) $$ (T 839) $$ (T 838) $$ (T 837) $$ (T 836) $$ (T 835) $$ (T 834) $$ (T 833) $$ (T 832) $$ (T 831) $$ (T 830) $$ (T 829) $$ (T 828) $$ (T 827) $$ (T 826) $$ (T 825) $$ (T 824) $$ (T 823) $$ (T 822) $$ (T 821) $$ (T 820) $$ (T 819) $$ (T 818) $$ (T 817) $$ (T 816) $$ (T 815) $$ (T 814) $$ (T 813) $$ (T 812) $$ (T 811) $$ (T 810) $$ (T 809) $$ (T 808) $$ (T 807) $$ (T 806) $$ (T 805) $$ (T 804) $$ (T 803) $$ (T 802) $$ (T 801) $$ (T 800) $$ (T 799) $$ (T 798) $$ (T 797) $$ (T 796) $$ (T 795) $$ (T 794) $$ (T 793) $$ (T 792) $$ (T 791) $$ (T 790) $$ (T 789) $$ (T 788) $$ (T 787) $$ (T 786) $$ (T 785) $$ (T 784) $$ (T 783) $$ (T 782) $$ (T 781) $$ (T 780) $$ (T 779) $$ (T 778) $$ (T 777) $$ (T 776) $$ (T 775) $$ (T 774) $$ (T 773) $$ (T 772) $$ (T 771) $$ (T 770) $$ (T 769) $$ (T 768) $$ (T 767) $$ (T 766) $$ (T 765) $$ (T 764) $$ (T 763) $$ (T 762) $$ (T 761) $$ (T 760) $$ (T 759) $$ (T 758) $$ (T 757) $$ (T 756) $$ (T 755) $$ (T 754) $$ (T 753) $$ (T 752) $$ (T 751) $$ (T 750) $$ (T 749) $$ (T 748) $$ (T 747) $$ (T 746) $$ (T 745) $$ (T 744) $$ (T 743) $$ (T 742) $$ (T 741) $$ (T 740) $$ (T 739) $$ (T 738) $$ (T 737) $$ (T 736) $$ (T 735) $$ (T 734) $$ (T 733) $$ (T 732) $$ (T 731) $$ (T 730) $$ (T 729) $$ (T 728) $$ (T 727) $$ (T 726) $$ (T 725) $$ (T 724) $$ (T 723) $$ (T 722) $$ (T 721) $$ (T 720) $$ (T 719) $$ (T 718) $$ (T 717) $$ (T 716) $$ (T 715) $$ (T 714) $$ (T 713) $$ (T 712) $$ (T 711) $$ (T 710) $$ (T 709) $$ (T 708) $$ (T 707) $$ (T 706) $$ (T 705) $$ (T 704) $$ (T 703) $$ (T 702) $$ (T 701) $$ (T 700) $$ (T 699) $$ (T 698) $$ (T 697) $$ (T 696) $$ (T 695) $$ (T 694) $$ (T 693) $$ (T 692) $$ (T 691) $$ (T 690) $$ (T 689) $$ (T 688) $$ (T 687) $$ (T 686) $$ (T 685) $$ (T 684) $$ (T 683) $$ (T 682) $$ (T 681) $$ (T 680) $$ (T 679) $$ (T 678) $$ (T 677) $$ (T 676) $$ (T 675) $$ (T 674) $$ (T 673) $$ (T 672) $$ (T 671) $$ (T 670) $$ (T 669) $$ (T 668) $$ (T 667) $$ (T 666) $$ (T 665) $$ (T 664) $$ (T 663) $$ (T 662) $$ (T 661) $$ (T 660) $$ (T 659) $$ (T 658) $$ (T 657) $$ (T 656) $$ (T 655) $$ (T 654) $$ (T 653) $$ (T 652) $$ (T 651) $$ (T 650) $$ (T 649) $$ (T 648) $$ (T 647) $$ (T 646) $$ (T 645) $$ (T 644) $$ (T 643) $$ (T 642) $$ (T 641) $$ (T 640) $$ (T 639) $$ (T 638) $$ (T 637) $$ (T 636) $$ (T 635) $$ (T 634) $$ (T 633) $$ (T 632) $$ (T 631) $$ (T 630) $$ (T 629) $$ (T 628) $$ (T 627) $$ (T 626) $$ (T 625) $$ (T 624) $$ (T 623) $$ (T 622) $$ (T 621) $$ (T 620) $$ (T 619) $$ (T 618) $$ (T 617) $$ (T 616) $$ (T 615) $$ (T 614) $$ (T 613) $$ (T 612) $$ (T 611) $$ (T 610) $$ (T 609) $$ (T 608) $$ (T 607) $$ (T 606) $$ (T 605) $$ (T 604) $$ (T 603) $$ (T 602) $$ (T 601) $$ (T 600) $$ (T 599) $$ (T 598) $$ (T 597) $$ (T 596) $$ (T 595) $$ (T 594) $$ (T 593) $$ (T 592) $$ (T 591) $$ (T 590) $$ (T 589) $$ (T 588) $$ (T 587) $$ (T 586) $$ (T 585) $$ (T 584) $$ (T 583) $$ (T 582) $$ (T 581) $$ (T 580) $$ (T 579) $$ (T 578) $$ (T 577) $$ (T 576) $$ (T 575) $$ (T 574) $$ (T 573) $$ (T 572) $$ (T 571) $$ (T 570) $$ (T 569) $$ (T 568) $$ (T 567) $$ (T 566) $$ (T 565) $$ (T 564) $$ (T 563) $$ (T 562) $$ (T 561) $$ (T 560) $$ (T 559) $$ (T 558) $$ (T 557) $$ (T 556) $$ (T 555) $$ (T 554) $$ (T 553) $$ (T 552) $$ (T 551) $$ (T 550) $$ (T 549) $$ (T 548) $$ (T 547) $$ (T 546) $$ (T 545) $$ (T 544) $$ (T 543) $$ (T 542) $$ (T 541) $$ (T 540) $$ (T 539) $$ (T 538) $$ (T 537) $$ (T 536) $$ (T 535) $$ (T 534) $$ (T 533) $$ (T 532) $$ (T 531) $$ (T 530) $$ (T 529) $$ (T 528) $$ (T 527) $$ (T 526) $$ (T 525) $$ (T 524) $$ (T 523) $$ (T 522) $$ (T 521) $$ (T 520) $$ (T 519) $$ (T 518) $$ (T 517) $$ (T 516) $$ (T 515) $$ (T 514) $$ (T 513) $$ (T 512) $$ (T 511) $$ (T 510) $$ (T 509) $$ (T 508) $$ (T 507) $$ (T 506) $$ (T 505) $$ (T 504) $$ (T 503) $$ (T 502) $$ (T 501) $$ (T 500) $$ (T 499) $$ (T 498) $$ (T 497) $$ (T 496) $$ (T 495) $$ (T 494) $$ (T 493) $$ (T 492) $$ (T 491) $$ (T 490) $$ (T 489) $$ (T 488) $$ (T 487) $$ (T 486) $$ (T 485) $$ (T 484) $$ (T 483) $$ (T 482) $$ (T 481) $$ (T 480) $$ (T 479) $$ (T 478) $$ (T 477) $$ (T 476) $$ (T 475) $$ (T 474) $$ (T 473) $$ (T 472) $$ (T 471) $$ (T 470) $$ (T 469) $$ (T 468) $$ (T 467) $$ (T 466) $$ (T 465) $$ (T 464) $$ (T 463) $$ (T 462) $$ (T 461) $$ (T 460) $$ (T 459) $$ (T 458) $$ (T 457) $$ (T 456) $$ (T 455) $$ (T 454) $$ (T 453) $$ (T 452) $$ (T 451) $$ (T 450) $$ (T 449) $$ (T 448) $$ (T 447) $$ (T 446) $$ (T 445) $$ (T 444) $$ (T 443) $$ (T 442) $$ (T 441) $$ (T 440) $$ (T 439) $$ (T 438) $$ (T 437) $$ (T 436) $$ (T 435) $$ (T 434) $$ (T 433) $$ (T 432) $$ (T 431) $$ (T 430) $$ (T 429) $$ (T 428) $$ (T 427) $$ (T 426) $$ (T 425) $$ (T 424) $$ (T 423) $$ (T 422) $$ (T 421) $$ (T 420) $$ (T 419) $$ (T 418) $$ (T 417) $$ (T 416) $$ (T 415) $$ (T 414) $$ (T 413) $$ (T 412) $$ (T 411) $$ (T 410) $$ (T 409) $$ (T 408) $$ (T 407) $$ (T 406) $$ (T 405) $$ (T 404) $$ (T 403) $$ (T 402) $$ (T 401) $$ (T 400) $$ (T 399) $$ (T 398) $$ (T 397) $$ (T 396) $$ (T 395) $$ (T 394) $$ (T 393) $$ (T 392) $$ (T 391) $$ (T 390) $$ (T 389) $$ (T 388) $$ (T 387) $$ (T 386) $$ (T 385) $$ (T 384) $$ (T 383) $$ (T 382) $$ (T 381) $$ (T 380) $$ (T 379) $$ (T 378) $$ (T 377) $$ (T 376) $$ (T 375) $$ (T 374) $$ (T 373) $$ (T 372) $$ (T 371) $$ (T 370) $$ (T 369) $$ (T 368) $$ (T 367) $$ (T 366) $$ (T 365) $$ (T 364) $$ (T 363) $$ (T 362) $$ (T 361) $$ (T 360) $$ (T 359) $$ (T 358) $$ (T 357) $$ (T 356) $$ (T 355) $$ (T 354) $$ (T 353) $$ (T 352) $$ (T 351) $$ (T 350) $$ (T 349) $$ (T 348) $$ (T 347) $$ (T 346) $$ (T 345) $$ (T 344) $$ (T 343) $$ (T 342) $$ (T 341) $$ (T 340) $$ (T 339) $$ (T 338) $$ (T 337) $$ (T 336) $$ (T 335) $$ (T 334) $$ (T 333) $$ (T 332) $$ (T 331) $$ (T 330) $$ (T 329) $$ (T 328) $$ (T 327) $$ (T 326) $$ (T 325) $$ (T 324) $$ (T 323) $$ (T 322) $$ (T 321) $$ (T 320) $$ (T 319) $$ (T 318) $$ (T 317) $$ (T 316) $$ (T 315) $$ (T 314) $$ (T 313) $$ (T 312) $$ (T 311) $$ (T 310) $$ (T 309) $$ (T 308) $$ (T 307) $$ (T 306) $$ (T 305) $$ (T 304) $$ (T 303) $$ (T 302) $$ (T 301) $$ (T 300) $$ (T 299) $$ (T 298) $$ (T 297) $$ (T 296) $$ (T 295) $$ (T 294) $$ (T 293) $$ (T 292) $$ (T 291) $$ (T 290) $$ (T 289) $$ (T 288) $$ (T 287) $$ (T 286) $$ (T 285) $$ (T 284) $$ (T 283) $$ (T 282) $$ (T 281) $$ (T 280) $$ (T 279) $$ (T 278) $$ (T 277) $$ (T 276) $$ (T 275) $$ (T 274) $$ (T 273) $$ (T 272) $$ (T 271) $$ (T 270) $$ (T 269) $$ (T 268) $$ (T 267) $$ (T 266) $$ (T 265) $$ (T 264) $$ (T 263) $$ (T 262) $$ (T 261) $$ (T 260) $$ (T 259) $$ (T 258) $$ (T 257) $$ (T 256) $$ (T 255) $$ (T 254) $$ (T 253) $$ (T 252) $$ (T 251) $$ (T 250) $$ (T 249) $$ (T 248) $$ (T 247) $$ (T 246) $$ (T 245) $$ (T 244) $$ (T 243) $$ (T 242) $$ (T 241) $$ (T 240) $$ (T 239) $$ (T 238) $$ (T 237) $$ (T 236) $$ (T 235) $$ (T 234) $$ (T 233) $$ (T 232) $$ (T 231) $$ (T 230) $$ (T 229) $$ (T 228) $$ (T 227) $$ (T 226) $$ (T 225) $$ (T 224) $$ (T 223) $$ (T 222) $$ (T 221) $$ (T 220) $$ (T 219) $$ (T 218) $$ (T 217) $$ (T 216) $$ (T 215) $$ (T 214) $$ (T 213) $$ (T 212) $$ (T 211) $$ (T 210) $$ (T 209) $$ (T 208) $$ (T 207) $$ (T 206) $$ (T 205) $$ (T 204) $$ (T 203) $$ (T 202) $$ (T 201) $$ (T 200) $$ (T 199) $$ (T 198) $$ (T 197) $$ (T 196) $$ (T 195) $$ (T 194) $$ (T 193) $$ (T 192) $$ (T 191) $$ (T 190) $$ (T 189) $$ (T 188) $$ (T 187) $$ (T 186) $$ (T 185) $$ (T 184) $$ (T 183) $$ (T 182) $$ (T 181) $$ (T 180) $$ (T 179) $$ (T 178) $$ (T 177) $$ (T 176) $$ (T 175) $$ (T 174) $$ (T 173) $$ (T 172) $$ (T 171) $$ (T 170) $$ (T 169) $$ (T 168) $$ (T 167) $$ (T 166) $$ (T 165) $$ (T 164) $$ (T 163) $$ (T 162) $$ (T 161) $$ (T 160) $$ (T 159) $$ (T 158) $$ (T 157) $$ (T 156) $$ (T 155) $$ (T 154) $$ (T 153) $$ (T 152) $$ (T 151) $$ (T 150) $$ (T 149) $$ (T 148) $$ (T 147) $$ (T 146) $$ (T 145) $$ (T 144) $$ (T 143) $$ (T 142) $$ (T 141) $$ (T 140) $$ (T 139) $$ (T 138) $$ (T 137) $$ (T 136) $$ (T 135) $$ (T 134) $$ (T 133) $$ (T 132) $$ (T 131) $$ (T 130) $$ (T 129) $$ (T 128) $$ (T 127) $$ (T 126) $$ (T 125) $$ (T 124) $$ (T 123) $$ (T 122) $$ (T 121) $$ (T 120) $$ (T 119) $$ (T 118) $$ (T 117) $$ (T 116) $$ (T 115) $$ (T 114) $$ (T 113) $$ (T 112) $$ (T 111) $$ (T 110) $$ (T 109) $$ (T 108) $$ (T 107) $$ (T 106) $$ (T 105) $$ (T 104) $$ (T 103) $$ (T 102) $$ (T 101) $$ (T 100) $$ (T 99) $$ (T 98) $$ (T 97) $$ (T 96) $$ (T 95) $$ (T 94) $$ (T 93) $$ (T 92) $$ (T 91) $$ (T 90) $$ (T 89) $$ (T 88) $$ (T 87) $$ (T 86) $$ (T 85) $$ (T 84) $$ (T 83) $$ (T 82) $$ (T 81) $$ (T 80) $$ (T 79) $$ (T 78) $$ (T 77) $$ (T 76) $$ (T 75) $$ (T 74) $$ (T 73) $$ (T 72) $$ (T 71) $$ (T 70) $$ (T 69) $$ (T 68) $$ (T 67) $$ (T 66) $$ (T 65) $$ (T 64) $$ (T 63) $$ (T 62) $$ (T 61) $$ (T 60) $$ (T 59) $$ (T 58) $$ (T 57) $$ (T 56) $$ (T 55) $$ (T 54) $$ (T 53) $$ (T 52) $$ (T 51) $$ (T 50) $$ (T 49) $$ (T 48) $$ (T 47) $$ (T 46) $$ (T 45) $$ (T 44) $$ (T 43) $$ (T 42) $$ (T 41) $$ (T 40) $$ (T 39) $$ (T 38) $$ (T 37) $$ (T 36) $$ (T 35) $$ (T 34) $$ (T 33) $$ (T 32) $$ (T 31) $$ (T 30) $$ (T 29) $$ (T 28) $$ (T 27) $$ (T 26) $$ (T 25) $$ (T 24) $$ (T 23) $$ (T 22) $$ (T 21) $$ (T 20) $$ (T 19) $$ (T 18) $$ (T 17) $$ (T 16) $$ (T 15) $$ (T 14) $$ (T 13) $$ (T 12) $$ (T 11) $$ (T 10) $$ (T 9) $$ (T 8) $$ (T 7) $$ (T 6) $$ (T 5) $$ (T 4) $$ (T 3) $$ (T 2) $$ (T 1)end
structure Actions =
struct 
exception mlyAction of int
local open Header in
val actions = 
fn (i392,defaultPos,stack,
    (()):arg) =>
case (i392,stack)
of  ( 0, ( ( _, ( MlyValue.START START1, _, START1right)) :: _ :: ( _, ( MlyValue.SEMANTIC SEMANTIC1, SEMANTIC1left, _)) :: rest671)) => let val  result = MlyValue.START (fn _ => let val  (SEMANTIC as SEMANTIC1) = SEMANTIC1 ()
 val  (START as START1) = START1 ()
 in ((*#line 229.29 "InstructionSemantics.grm"*)SEMANTIC::START(*#line 4383.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 0, ( result, SEMANTIC1left, START1right), rest671)
end
|  ( 1, ( ( _, ( MlyValue.START START1, _, START1right)) :: ( _, ( _, NEWLINE1left, _)) :: rest671)) => let val  result = MlyValue.START (fn _ => let val  (START as START1) = START1 ()
 in ((*#line 230.20 "InstructionSemantics.grm"*)START(*#line 4390.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 0, ( result, NEWLINE1left, START1right), rest671)
end
|  ( 2, ( rest671)) => let val  result = MlyValue.START (fn _ => ((*#line 231.6 "InstructionSemantics.grm"*)[](*#line 4396.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 0, ( result, defaultPos, defaultPos), rest671)
end
|  ( 3, ( ( _, ( _, _, RPAREN1right)) :: ( _, ( MlyValue.BVFORMULAS BVFORMULAS1, _, _)) :: _ :: _ :: ( _, ( MlyValue.SIGNATURE SIGNATURE1, SIGNATURE1left, _)) :: rest671)) => let val  result = MlyValue.SEMANTIC (fn _ => let val  (SIGNATURE as SIGNATURE1) = SIGNATURE1 ()
 val  (BVFORMULAS as BVFORMULAS1) = BVFORMULAS1 ()
 in ((*#line 234.47 "InstructionSemantics.grm"*)(SIGNATURE, BVFORMULAS)(*#line 4400.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 1, ( result, SIGNATURE1left, RPAREN1right), rest671)
end
|  ( 4, ( ( _, ( _, _, RPAREN1right)) :: ( _, ( MlyValue.INSTR_NMENONIC INSTR_NMENONIC1, _, _)) :: ( _, ( _, LPAREN1left, _)) :: rest671)) => let val  result = MlyValue.SIGNATURE (fn _ => let val  (INSTR_NMENONIC as INSTR_NMENONIC1) = INSTR_NMENONIC1 ()
 in ((*#line 237.36 "InstructionSemantics.grm"*)INSTR_NMENONIC, Nullary_sig(*#line 4407.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 2, ( result, LPAREN1left, RPAREN1right), rest671)
end
|  ( 5, ( ( _, ( _, _, RPAREN1right)) :: ( _, ( MlyValue.OPERAND_SRC_SIG OPERAND_SRC_SIG1, _, _)) :: ( _, ( MlyValue.INSTR_NMENONIC INSTR_NMENONIC1, _, _)) :: ( _, ( _, LPAREN1left, _)) :: rest671)) => let val  result = MlyValue.SIGNATURE (fn _ => let val  (INSTR_NMENONIC as INSTR_NMENONIC1) = INSTR_NMENONIC1 ()
 val  (OPERAND_SRC_SIG as OPERAND_SRC_SIG1) = OPERAND_SRC_SIG1 ()
 in ((*#line 238.51 "InstructionSemantics.grm"*)INSTR_NMENONIC, (Unary_sig (OPERAND_SRC_SIG))(*#line 4413.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 2, ( result, LPAREN1left, RPAREN1right), rest671)
end
|  ( 6, ( ( _, ( _, _, RPAREN1right)) :: ( _, ( MlyValue.OPERAND_SRC_SIG OPERAND_SRC_SIG1, _, _)) :: _ :: ( _, ( MlyValue.OPERAND_DEST_SIG OPERAND_DEST_SIG1, _, _)) :: ( _, ( MlyValue.INSTR_NMENONIC INSTR_NMENONIC1, _, _)) :: ( _, ( _, LPAREN1left, _)) :: rest671)) => let val  result = MlyValue.SIGNATURE (fn _ => let val  (INSTR_NMENONIC as INSTR_NMENONIC1) = INSTR_NMENONIC1 ()
 val  (OPERAND_DEST_SIG as OPERAND_DEST_SIG1) = OPERAND_DEST_SIG1 ()
 val  (OPERAND_SRC_SIG as OPERAND_SRC_SIG1) = OPERAND_SRC_SIG1 ()
 in ((*#line 239.74 "InstructionSemantics.grm"*)INSTR_NMENONIC,(Binary_sig (OPERAND_DEST_SIG,OPERAND_SRC_SIG))(*#line 4420.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 2, ( result, LPAREN1left, RPAREN1right), rest671)
end
|  ( 7, ( ( _, ( _, _, RPAREN1right)) :: ( _, ( MlyValue.OPERAND_SRC_SIG OPERAND_SRC_SIG2, _, _)) :: _ :: ( _, ( MlyValue.OPERAND_SRC_SIG OPERAND_SRC_SIG1, _, _)) :: _ :: ( _, ( MlyValue.OPERAND_DEST_SIG OPERAND_DEST_SIG1, _, _)) :: ( _, ( MlyValue.INSTR_NMENONIC INSTR_NMENONIC1, _, _)) :: ( _, ( _, LPAREN1left, _)) :: rest671)) => let val  result = MlyValue.SIGNATURE (fn _ => let val  (INSTR_NMENONIC as INSTR_NMENONIC1) = INSTR_NMENONIC1 ()
 val  (OPERAND_DEST_SIG as OPERAND_DEST_SIG1) = OPERAND_DEST_SIG1 ()
 val  OPERAND_SRC_SIG1 = OPERAND_SRC_SIG1 ()
 val  OPERAND_SRC_SIG2 = OPERAND_SRC_SIG2 ()
 in ((*#line 240.96 "InstructionSemantics.grm"*)INSTR_NMENONIC, (Ternary_sig (OPERAND_DEST_SIG,OPERAND_SRC_SIG1,OPERAND_SRC_SIG2))(*#line 4428.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 2, ( result, LPAREN1left, RPAREN1right), rest671)
end
|  ( 8, ( ( _, ( MlyValue.BVFORMULAS BVFORMULAS1, _, BVFORMULAS1right)) :: ( _, ( MlyValue.BVFORMULA_ASSIGNMENT BVFORMULA_ASSIGNMENT1, BVFORMULA_ASSIGNMENT1left, _)) :: rest671)) => let val  result = MlyValue.BVFORMULAS (fn _ => let val  (BVFORMULA_ASSIGNMENT as BVFORMULA_ASSIGNMENT1) = BVFORMULA_ASSIGNMENT1 ()
 val  (BVFORMULAS as BVFORMULAS1) = BVFORMULAS1 ()
 in ((*#line 243.37 "InstructionSemantics.grm"*)BVFORMULA_ASSIGNMENT::BVFORMULAS(*#line 4437.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 3, ( result, BVFORMULA_ASSIGNMENT1left, BVFORMULAS1right), rest671)
end
|  ( 9, ( ( _, ( MlyValue.BVFORMULAS BVFORMULAS1, _, BVFORMULAS1right)) :: ( _, ( _, SEMI_COLON1left, _)) :: rest671)) => let val  result = MlyValue.BVFORMULAS (fn _ => let val  (BVFORMULAS as BVFORMULAS1) = BVFORMULAS1 ()
 in ((*#line 244.28 "InstructionSemantics.grm"*)BVFORMULAS(*#line 4444.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 3, ( result, SEMI_COLON1left, BVFORMULAS1right), rest671)
end
|  ( 10, ( rest671)) => let val  result = MlyValue.BVFORMULAS (fn _ => ((*#line 245.6 "InstructionSemantics.grm"*)[](*#line 4450.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 3, ( result, defaultPos, defaultPos), rest671)
end
|  ( 11, ( ( _, ( _, EMPTY_FORMULA1left, EMPTY_FORMULA1right)) :: rest671)) => let val  result = MlyValue.BVFORMULAS (fn _ => ((*#line 246.20 "InstructionSemantics.grm"*)[](*#line 4454.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 3, ( result, EMPTY_FORMULA1left, EMPTY_FORMULA1right), rest671)
end
|  ( 12, ( ( _, ( _, OP11left, OP11right)) :: rest671)) => let val  result = MlyValue.BV_VAR (fn _ => ((*#line 249.10 "InstructionSemantics.grm"*)BV_Operand1(*#line 4458.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 13, ( result, OP11left, OP11right), rest671)
end
|  ( 13, ( ( _, ( _, OP21left, OP21right)) :: rest671)) => let val  result = MlyValue.BV_VAR (fn _ => ((*#line 249.30 "InstructionSemantics.grm"*)BV_Operand2(*#line 4462.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 13, ( result, OP21left, OP21right), rest671)
end
|  ( 14, ( ( _, ( _, OP31left, OP31right)) :: rest671)) => let val  result = MlyValue.BV_VAR (fn _ => ((*#line 249.50 "InstructionSemantics.grm"*)BV_Operand2(*#line 4466.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 13, ( result, OP31left, OP31right), rest671)
end
|  ( 15, ( ( _, ( _, RAX1left, RAX1right)) :: rest671)) => let val  result = MlyValue.BV_VAR (fn _ => ((*#line 250.10 "InstructionSemantics.grm"*) BV_Var_Direct "rax"(*#line 4470.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 13, ( result, RAX1left, RAX1right), rest671)
end
|  ( 16, ( ( _, ( _, RBX1left, RBX1right)) :: rest671)) => let val  result = MlyValue.BV_VAR (fn _ => ((*#line 250.39 "InstructionSemantics.grm"*) BV_Var_Direct "rbx"(*#line 4474.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 13, ( result, RBX1left, RBX1right), rest671)
end
|  ( 17, ( ( _, ( _, RCX1left, RCX1right)) :: rest671)) => let val  result = MlyValue.BV_VAR (fn _ => ((*#line 250.68 "InstructionSemantics.grm"*) BV_Var_Direct "rcx"(*#line 4478.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 13, ( result, RCX1left, RCX1right), rest671)
end
|  ( 18, ( ( _, ( _, RDX1left, RDX1right)) :: rest671)) => let val  result = MlyValue.BV_VAR (fn _ => ((*#line 250.97 "InstructionSemantics.grm"*) BV_Var_Direct "rdx"(*#line 4482.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 13, ( result, RDX1left, RDX1right), rest671)
end
|  ( 19, ( ( _, ( MlyValue.BVFORMULA BVFORMULA1, _, BVFORMULA1right)) :: _ :: ( _, ( MlyValue.BV_VAR BV_VAR1, BV_VAR1left, _)) :: rest671)) => let val  result = MlyValue.BVFORMULA_ASSIGNMENT (fn _ => let val  (BV_VAR as BV_VAR1) = BV_VAR1 ()
 val  (BVFORMULA as BVFORMULA1) = BVFORMULA1 ()
 in ((*#line 253.26 "InstructionSemantics.grm"*)BV_Assignment (BV_VAR,BVFORMULA)(*#line 4486.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 10, ( result, BV_VAR1left, BVFORMULA1right), rest671)
end
|  ( 20, ( ( _, ( MlyValue.BVFORMULA BVFORMULA1, _, BVFORMULA1right)) :: _ :: ( _, ( MlyValue.FLG FLG1, FLG1left, _)) :: rest671)) => let val  result = MlyValue.BVFORMULA_ASSIGNMENT (fn _ => let val  (FLG as FLG1) = FLG1 ()
 val  (BVFORMULA as BVFORMULA1) = BVFORMULA1 ()
 in ((*#line 254.24 "InstructionSemantics.grm"*)BV_Flag_Assignment (FLG,BVFORMULA)(*#line 4493.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 10, ( result, FLG1left, BVFORMULA1right), rest671)
end
|  ( 21, ( ( _, ( _, TERNOP_VFMADD132_SINGLE1left, TERNOP_VFMADD132_SINGLE1right)) :: rest671)) => let val  result = MlyValue.BV_TERNOP (fn _ => ((*#line 257.30 "InstructionSemantics.grm"*)BV_Vfmadd132_Single(*#line 4500.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 14, ( result, TERNOP_VFMADD132_SINGLE1left, TERNOP_VFMADD132_SINGLE1right), rest671)
end
|  ( 22, ( ( _, ( _, TERNOP_VFMADD132_DOUBLE1left, TERNOP_VFMADD132_DOUBLE1right)) :: rest671)) => let val  result = MlyValue.BV_TERNOP (fn _ => ((*#line 257.78 "InstructionSemantics.grm"*)BV_Vfmadd132_Double(*#line 4504.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 14, ( result, TERNOP_VFMADD132_DOUBLE1left, TERNOP_VFMADD132_DOUBLE1right), rest671)
end
|  ( 23, ( ( _, ( _, TERNOP_VFMSUB132_SINGLE1left, TERNOP_VFMSUB132_SINGLE1right)) :: rest671)) => let val  result = MlyValue.BV_TERNOP (fn _ => ((*#line 258.30 "InstructionSemantics.grm"*)BV_Vfmsub132_Single(*#line 4508.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 14, ( result, TERNOP_VFMSUB132_SINGLE1left, TERNOP_VFMSUB132_SINGLE1right), rest671)
end
|  ( 24, ( ( _, ( _, TERNOP_VFMSUB132_DOUBLE1left, TERNOP_VFMSUB132_DOUBLE1right)) :: rest671)) => let val  result = MlyValue.BV_TERNOP (fn _ => ((*#line 258.78 "InstructionSemantics.grm"*)BV_Vfmsub132_Double(*#line 4512.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 14, ( result, TERNOP_VFMSUB132_DOUBLE1left, TERNOP_VFMSUB132_DOUBLE1right), rest671)
end
|  ( 25, ( ( _, ( _, TERNOP_VFNMADD132_SINGLE1left, TERNOP_VFNMADD132_SINGLE1right)) :: rest671)) => let val  result = MlyValue.BV_TERNOP (fn _ => ((*#line 259.31 "InstructionSemantics.grm"*)BV_Vfnmadd132_Single(*#line 4516.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 14, ( result, TERNOP_VFNMADD132_SINGLE1left, TERNOP_VFNMADD132_SINGLE1right), rest671)
end
|  ( 26, ( ( _, ( _, TERNOP_VFNMADD132_DOUBLE1left, TERNOP_VFNMADD132_DOUBLE1right)) :: rest671)) => let val  result = MlyValue.BV_TERNOP (fn _ => ((*#line 259.81 "InstructionSemantics.grm"*)BV_Vfnmadd132_Double(*#line 4520.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 14, ( result, TERNOP_VFNMADD132_DOUBLE1left, TERNOP_VFNMADD132_DOUBLE1right), rest671)
end
|  ( 27, ( ( _, ( _, TERNOP_VFNMSUB132_SINGLE1left, TERNOP_VFNMSUB132_SINGLE1right)) :: rest671)) => let val  result = MlyValue.BV_TERNOP (fn _ => ((*#line 260.31 "InstructionSemantics.grm"*)BV_Vfnmsub132_Single(*#line 4524.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 14, ( result, TERNOP_VFNMSUB132_SINGLE1left, TERNOP_VFNMSUB132_SINGLE1right), rest671)
end
|  ( 28, ( ( _, ( _, TERNOP_VNFMSUB132_DOUBLE1left, TERNOP_VNFMSUB132_DOUBLE1right)) :: rest671)) => let val  result = MlyValue.BV_TERNOP (fn _ => ((*#line 260.81 "InstructionSemantics.grm"*)BV_Vnfmsub132_Double(*#line 4528.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 14, ( result, TERNOP_VNFMSUB132_DOUBLE1left, TERNOP_VNFMSUB132_DOUBLE1right), rest671)
end
|  ( 29, ( ( _, ( _, BINOP_ADD_SINGLE1left, BINOP_ADD_SINGLE1right)) :: rest671)) => let val  result = MlyValue.BV_BINOP (fn _ => ((*#line 263.23 "InstructionSemantics.grm"*)BV_Add_Single(*#line 4532.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 15, ( result, BINOP_ADD_SINGLE1left, BINOP_ADD_SINGLE1right), rest671)
end
|  ( 30, ( ( _, ( _, BINOP_SUB_SINGLE1left, BINOP_SUB_SINGLE1right)) :: rest671)) => let val  result = MlyValue.BV_BINOP (fn _ => ((*#line 263.58 "InstructionSemantics.grm"*)BV_Sub_Single(*#line 4536.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 15, ( result, BINOP_SUB_SINGLE1left, BINOP_SUB_SINGLE1right), rest671)
end
|  ( 31, ( ( _, ( _, BINOP_DIV_SINGLE1left, BINOP_DIV_SINGLE1right)) :: rest671)) => let val  result = MlyValue.BV_BINOP (fn _ => ((*#line 263.93 "InstructionSemantics.grm"*)BV_Div_Single(*#line 4540.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 15, ( result, BINOP_DIV_SINGLE1left, BINOP_DIV_SINGLE1right), rest671)
end
|  ( 32, ( ( _, ( _, BINOP_MUL_SINGLE1left, BINOP_MUL_SINGLE1right)) :: rest671)) => let val  result = MlyValue.BV_BINOP (fn _ => ((*#line 263.128 "InstructionSemantics.grm"*)BV_Mul_Single(*#line 4544.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 15, ( result, BINOP_MUL_SINGLE1left, BINOP_MUL_SINGLE1right), rest671)
end
|  ( 33, ( ( _, ( _, BINOP_ADD_DOUBLE1left, BINOP_ADD_DOUBLE1right)) :: rest671)) => let val  result = MlyValue.BV_BINOP (fn _ => ((*#line 264.23 "InstructionSemantics.grm"*)BV_Add_Double(*#line 4548.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 15, ( result, BINOP_ADD_DOUBLE1left, BINOP_ADD_DOUBLE1right), rest671)
end
|  ( 34, ( ( _, ( _, BINOP_SUB_DOUBLE1left, BINOP_SUB_DOUBLE1right)) :: rest671)) => let val  result = MlyValue.BV_BINOP (fn _ => ((*#line 264.58 "InstructionSemantics.grm"*)BV_Sub_Double(*#line 4552.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 15, ( result, BINOP_SUB_DOUBLE1left, BINOP_SUB_DOUBLE1right), rest671)
end
|  ( 35, ( ( _, ( _, BINOP_DIV_DOUBLE1left, BINOP_DIV_DOUBLE1right)) :: rest671)) => let val  result = MlyValue.BV_BINOP (fn _ => ((*#line 264.93 "InstructionSemantics.grm"*)BV_Div_Double(*#line 4556.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 15, ( result, BINOP_DIV_DOUBLE1left, BINOP_DIV_DOUBLE1right), rest671)
end
|  ( 36, ( ( _, ( _, BINOP_MUL_DOUBLE1left, BINOP_MUL_DOUBLE1right)) :: rest671)) => let val  result = MlyValue.BV_BINOP (fn _ => ((*#line 264.128 "InstructionSemantics.grm"*)BV_Mul_Double(*#line 4560.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 15, ( result, BINOP_MUL_DOUBLE1left, BINOP_MUL_DOUBLE1right), rest671)
end
|  ( 37, ( ( _, ( _, BINOP_CMPF1left, BINOP_CMPF1right)) :: rest671)) => let val  result = MlyValue.BV_BINOP (fn _ => ((*#line 265.17 "InstructionSemantics.grm"*)BV_Cmpf(*#line 4564.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 15, ( result, BINOP_CMPF1left, BINOP_CMPF1right), rest671)
end
|  ( 38, ( ( _, ( _, BINOP_CMPD1left, BINOP_CMPD1right)) :: rest671)) => let val  result = MlyValue.BV_BINOP (fn _ => ((*#line 265.40 "InstructionSemantics.grm"*)BV_Cmpd(*#line 4568.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 15, ( result, BINOP_CMPD1left, BINOP_CMPD1right), rest671)
end
|  ( 39, ( ( _, ( _, BINOP_MINCMP_SINGLE1left, BINOP_MINCMP_SINGLE1right)) :: rest671)) => let val  result = MlyValue.BV_BINOP (fn _ => ((*#line 265.72 "InstructionSemantics.grm"*)BV_Mincmp_Single(*#line 4572.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 15, ( result, BINOP_MINCMP_SINGLE1left, BINOP_MINCMP_SINGLE1right), rest671)
end
|  ( 40, ( ( _, ( _, BINOP_MAXCMP_SINGLE1left, BINOP_MAXCMP_SINGLE1right)) :: rest671)) => let val  result = MlyValue.BV_BINOP (fn _ => ((*#line 265.113 "InstructionSemantics.grm"*)BV_Maxcmp_Single(*#line 4576.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 15, ( result, BINOP_MAXCMP_SINGLE1left, BINOP_MAXCMP_SINGLE1right), rest671)
end
|  ( 41, ( ( _, ( _, BINOP_MAXCMP_DOUBLE1left, BINOP_MAXCMP_DOUBLE1right)) :: rest671)) => let val  result = MlyValue.BV_BINOP (fn _ => ((*#line 266.26 "InstructionSemantics.grm"*)BV_Maxcmp_Double(*#line 4580.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 15, ( result, BINOP_MAXCMP_DOUBLE1left, BINOP_MAXCMP_DOUBLE1right), rest671)
end
|  ( 42, ( ( _, ( _, BINOP_MINCMP_DOUBLE1left, BINOP_MINCMP_DOUBLE1right)) :: rest671)) => let val  result = MlyValue.BV_BINOP (fn _ => ((*#line 266.67 "InstructionSemantics.grm"*)BV_Mincmp_Double(*#line 4584.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 15, ( result, BINOP_MINCMP_DOUBLE1left, BINOP_MINCMP_DOUBLE1right), rest671)
end
|  ( 43, ( ( _, ( _, BINOP_IDIV_QUOTIENT_INT81left, BINOP_IDIV_QUOTIENT_INT81right)) :: rest671)) => let val  result = MlyValue.BV_BINOP (fn _ => ((*#line 266.113 "InstructionSemantics.grm"*)BV_Idiv_Quotient_Int8(*#line 4588.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 15, ( result, BINOP_IDIV_QUOTIENT_INT81left, BINOP_IDIV_QUOTIENT_INT81right), rest671)
end
|  ( 44, ( ( _, ( _, BINOP_IDIV_REMAINDER_INT81left, BINOP_IDIV_REMAINDER_INT81right)) :: rest671)) => let val  result = MlyValue.BV_BINOP (fn _ => ((*#line 267.32 "InstructionSemantics.grm"*)BV_Idiv_Remainder_Int8(*#line 4592.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 15, ( result, BINOP_IDIV_REMAINDER_INT81left, BINOP_IDIV_REMAINDER_INT81right), rest671)
end
|  ( 45, ( ( _, ( _, BINOP_DIV_QUOTIENT_INT81left, BINOP_DIV_QUOTIENT_INT81right)) :: rest671)) => let val  result = MlyValue.BV_BINOP (fn _ => ((*#line 267.83 "InstructionSemantics.grm"*)BV_Div_Quotient_Int8(*#line 4596.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 15, ( result, BINOP_DIV_QUOTIENT_INT81left, BINOP_DIV_QUOTIENT_INT81right), rest671)
end
|  ( 46, ( ( _, ( _, BINOP_DIV_REMAINDER_INT81left, BINOP_DIV_REMAINDER_INT81right)) :: rest671)) => let val  result = MlyValue.BV_BINOP (fn _ => ((*#line 268.31 "InstructionSemantics.grm"*)BV_Div_Remainder_Int8(*#line 4600.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 15, ( result, BINOP_DIV_REMAINDER_INT81left, BINOP_DIV_REMAINDER_INT81right), rest671)
end
|  ( 47, ( ( _, ( _, BINOP_IDIV_QUOTIENT_INT161left, BINOP_IDIV_QUOTIENT_INT161right)) :: rest671)) => let val  result = MlyValue.BV_BINOP (fn _ => ((*#line 268.83 "InstructionSemantics.grm"*)BV_Idiv_Quotient_Int16(*#line 4604.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 15, ( result, BINOP_IDIV_QUOTIENT_INT161left, BINOP_IDIV_QUOTIENT_INT161right), rest671)
end
|  ( 48, ( ( _, ( _, BINOP_IDIV_REMAINDER_INT161left, BINOP_IDIV_REMAINDER_INT161right)) :: rest671)) => let val  result = MlyValue.BV_BINOP (fn _ => ((*#line 269.33 "InstructionSemantics.grm"*)BV_Idiv_Remainder_Int16(*#line 4608.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 15, ( result, BINOP_IDIV_REMAINDER_INT161left, BINOP_IDIV_REMAINDER_INT161right), rest671)
end
|  ( 49, ( ( _, ( _, BINOP_DIV_QUOTIENT_INT161left, BINOP_DIV_QUOTIENT_INT161right)) :: rest671)) => let val  result = MlyValue.BV_BINOP (fn _ => ((*#line 269.86 "InstructionSemantics.grm"*)BV_Div_Quotient_Int16(*#line 4612.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 15, ( result, BINOP_DIV_QUOTIENT_INT161left, BINOP_DIV_QUOTIENT_INT161right), rest671)
end
|  ( 50, ( ( _, ( _, BINOP_DIV_REMAINDER_INT161left, BINOP_DIV_REMAINDER_INT161right)) :: rest671)) => let val  result = MlyValue.BV_BINOP (fn _ => ((*#line 270.32 "InstructionSemantics.grm"*)BV_Div_Remainder_Int16(*#line 4616.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 15, ( result, BINOP_DIV_REMAINDER_INT161left, BINOP_DIV_REMAINDER_INT161right), rest671)
end
|  ( 51, ( ( _, ( _, BINOP_IDIV_QUOTIENT_INT321left, BINOP_IDIV_QUOTIENT_INT321right)) :: rest671)) => let val  result = MlyValue.BV_BINOP (fn _ => ((*#line 270.85 "InstructionSemantics.grm"*)BV_Idiv_Quotient_Int32(*#line 4620.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 15, ( result, BINOP_IDIV_QUOTIENT_INT321left, BINOP_IDIV_QUOTIENT_INT321right), rest671)
end
|  ( 52, ( ( _, ( _, BINOP_IDIV_REMAINDER_INT321left, BINOP_IDIV_REMAINDER_INT321right)) :: rest671)) => let val  result = MlyValue.BV_BINOP (fn _ => ((*#line 271.33 "InstructionSemantics.grm"*)BV_Idiv_Remainder_Int32(*#line 4624.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 15, ( result, BINOP_IDIV_REMAINDER_INT321left, BINOP_IDIV_REMAINDER_INT321right), rest671)
end
|  ( 53, ( ( _, ( _, BINOP_DIV_QUOTIENT_INT321left, BINOP_DIV_QUOTIENT_INT321right)) :: rest671)) => let val  result = MlyValue.BV_BINOP (fn _ => ((*#line 271.86 "InstructionSemantics.grm"*)BV_Div_Quotient_Int32(*#line 4628.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 15, ( result, BINOP_DIV_QUOTIENT_INT321left, BINOP_DIV_QUOTIENT_INT321right), rest671)
end
|  ( 54, ( ( _, ( _, BINOP_DIV_REMAINDER_INT321left, BINOP_DIV_REMAINDER_INT321right)) :: rest671)) => let val  result = MlyValue.BV_BINOP (fn _ => ((*#line 272.32 "InstructionSemantics.grm"*)BV_Div_Remainder_Int32(*#line 4632.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 15, ( result, BINOP_DIV_REMAINDER_INT321left, BINOP_DIV_REMAINDER_INT321right), rest671)
end
|  ( 55, ( ( _, ( _, BINOP_DIV_QUOTIENT_INT641left, BINOP_DIV_QUOTIENT_INT641right)) :: rest671)) => let val  result = MlyValue.BV_BINOP (fn _ => ((*#line 272.84 "InstructionSemantics.grm"*)BV_Div_Quotient_Int64(*#line 4636.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 15, ( result, BINOP_DIV_QUOTIENT_INT641left, BINOP_DIV_QUOTIENT_INT641right), rest671)
end
|  ( 56, ( ( _, ( _, BINOP_DIV_REMAINDER_INT641left, BINOP_DIV_REMAINDER_INT641right)) :: rest671)) => let val  result = MlyValue.BV_BINOP (fn _ => ((*#line 273.32 "InstructionSemantics.grm"*)BV_Div_Remainder_Int64(*#line 4640.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 15, ( result, BINOP_DIV_REMAINDER_INT641left, BINOP_DIV_REMAINDER_INT641right), rest671)
end
|  ( 57, ( ( _, ( _, BINOP_IDIV_QUOTIENT_INT641left, BINOP_IDIV_QUOTIENT_INT641right)) :: rest671)) => let val  result = MlyValue.BV_BINOP (fn _ => ((*#line 273.85 "InstructionSemantics.grm"*)BV_Idiv_Quotient_Int64(*#line 4644.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 15, ( result, BINOP_IDIV_QUOTIENT_INT641left, BINOP_IDIV_QUOTIENT_INT641right), rest671)
end
|  ( 58, ( ( _, ( _, BINOP_IDIV_REMAINDER_INT641left, BINOP_IDIV_REMAINDER_INT641right)) :: rest671)) => let val  result = MlyValue.BV_BINOP (fn _ => ((*#line 274.33 "InstructionSemantics.grm"*)BV_Idiv_Remainder_Int64(*#line 4648.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 15, ( result, BINOP_IDIV_REMAINDER_INT641left, BINOP_IDIV_REMAINDER_INT641right), rest671)
end
|  ( 59, ( ( _, ( MlyValue.BVFORMULA BVFORMULA2, _, BVFORMULA2right)) :: _ :: ( _, ( MlyValue.BVFORMULA BVFORMULA1, BVFORMULA1left, _)) :: rest671)) => let val  result = MlyValue.BV_BINOP_INFIX (fn _ => let val  BVFORMULA1 = BVFORMULA1 ()
 val  BVFORMULA2 = BVFORMULA2 ()
 in ((*#line 277.50 "InstructionSemantics.grm"*)BV_Binop (BV_And,              BVFORMULA1, BVFORMULA2)(*#line 4652.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 16, ( result, BVFORMULA1left, BVFORMULA2right), rest671)
end
|  ( 60, ( ( _, ( MlyValue.BVFORMULA BVFORMULA2, _, BVFORMULA2right)) :: _ :: ( _, ( MlyValue.BVFORMULA BVFORMULA1, BVFORMULA1left, _)) :: rest671)) => let val  result = MlyValue.BV_BINOP_INFIX (fn _ => let val  BVFORMULA1 = BVFORMULA1 ()
 val  BVFORMULA2 = BVFORMULA2 ()
 in ((*#line 278.50 "InstructionSemantics.grm"*)BV_Binop (BV_Concat,           BVFORMULA1, BVFORMULA2)(*#line 4659.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 16, ( result, BVFORMULA1left, BVFORMULA2right), rest671)
end
|  ( 61, ( ( _, ( MlyValue.BVFORMULA BVFORMULA2, _, BVFORMULA2right)) :: _ :: ( _, ( MlyValue.BVFORMULA BVFORMULA1, BVFORMULA1left, _)) :: rest671)) => let val  result = MlyValue.BV_BINOP_INFIX (fn _ => let val  BVFORMULA1 = BVFORMULA1 ()
 val  BVFORMULA2 = BVFORMULA2 ()
 in ((*#line 279.50 "InstructionSemantics.grm"*)BV_Binop (BV_Div,              BVFORMULA1, BVFORMULA2)(*#line 4666.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 16, ( result, BVFORMULA1left, BVFORMULA2right), rest671)
end
|  ( 62, ( ( _, ( MlyValue.BVFORMULA BVFORMULA2, _, BVFORMULA2right)) :: _ :: ( _, ( MlyValue.BVFORMULA BVFORMULA1, BVFORMULA1left, _)) :: rest671)) => let val  result = MlyValue.BV_BINOP_INFIX (fn _ => let val  BVFORMULA1 = BVFORMULA1 ()
 val  BVFORMULA2 = BVFORMULA2 ()
 in ((*#line 280.50 "InstructionSemantics.grm"*)BV_Binop (BV_Minus,            BVFORMULA1, BVFORMULA2)(*#line 4673.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 16, ( result, BVFORMULA1left, BVFORMULA2right), rest671)
end
|  ( 63, ( ( _, ( MlyValue.BVFORMULA BVFORMULA2, _, BVFORMULA2right)) :: _ :: ( _, ( MlyValue.BVFORMULA BVFORMULA1, BVFORMULA1left, _)) :: rest671)) => let val  result = MlyValue.BV_BINOP_INFIX (fn _ => let val  BVFORMULA1 = BVFORMULA1 ()
 val  BVFORMULA2 = BVFORMULA2 ()
 in ((*#line 281.50 "InstructionSemantics.grm"*)BV_Binop (BV_Modulus,          BVFORMULA1, BVFORMULA2)(*#line 4680.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 16, ( result, BVFORMULA1left, BVFORMULA2right), rest671)
end
|  ( 64, ( ( _, ( MlyValue.BVFORMULA BVFORMULA2, _, BVFORMULA2right)) :: _ :: ( _, ( MlyValue.BVFORMULA BVFORMULA1, BVFORMULA1left, _)) :: rest671)) => let val  result = MlyValue.BV_BINOP_INFIX (fn _ => let val  BVFORMULA1 = BVFORMULA1 ()
 val  BVFORMULA2 = BVFORMULA2 ()
 in ((*#line 282.50 "InstructionSemantics.grm"*)BV_Binop (BV_Mult,             BVFORMULA1, BVFORMULA2)(*#line 4687.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 16, ( result, BVFORMULA1left, BVFORMULA2right), rest671)
end
|  ( 65, ( ( _, ( MlyValue.BVFORMULA BVFORMULA2, _, BVFORMULA2right)) :: _ :: ( _, ( MlyValue.BVFORMULA BVFORMULA1, BVFORMULA1left, _)) :: rest671)) => let val  result = MlyValue.BV_BINOP_INFIX (fn _ => let val  BVFORMULA1 = BVFORMULA1 ()
 val  BVFORMULA2 = BVFORMULA2 ()
 in ((*#line 283.50 "InstructionSemantics.grm"*)BV_Binop (BV_Or,               BVFORMULA1, BVFORMULA2)(*#line 4694.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 16, ( result, BVFORMULA1left, BVFORMULA2right), rest671)
end
|  ( 66, ( ( _, ( MlyValue.BVFORMULA BVFORMULA2, _, BVFORMULA2right)) :: _ :: ( _, ( MlyValue.BVFORMULA BVFORMULA1, BVFORMULA1left, _)) :: rest671)) => let val  result = MlyValue.BV_BINOP_INFIX (fn _ => let val  BVFORMULA1 = BVFORMULA1 ()
 val  BVFORMULA2 = BVFORMULA2 ()
 in ((*#line 284.50 "InstructionSemantics.grm"*)BV_Binop (BV_Plus,             BVFORMULA1, BVFORMULA2)(*#line 4701.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 16, ( result, BVFORMULA1left, BVFORMULA2right), rest671)
end
|  ( 67, ( ( _, ( MlyValue.BVFORMULA BVFORMULA2, _, BVFORMULA2right)) :: _ :: ( _, ( MlyValue.BVFORMULA BVFORMULA1, BVFORMULA1left, _)) :: rest671)) => let val  result = MlyValue.BV_BINOP_INFIX (fn _ => let val  BVFORMULA1 = BVFORMULA1 ()
 val  BVFORMULA2 = BVFORMULA2 ()
 in ((*#line 285.50 "InstructionSemantics.grm"*)BV_Binop (BV_Rot_Left,         BVFORMULA1, BVFORMULA2)(*#line 4708.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 16, ( result, BVFORMULA1left, BVFORMULA2right), rest671)
end
|  ( 68, ( ( _, ( MlyValue.BVFORMULA BVFORMULA2, _, BVFORMULA2right)) :: _ :: ( _, ( MlyValue.BVFORMULA BVFORMULA1, BVFORMULA1left, _)) :: rest671)) => let val  result = MlyValue.BV_BINOP_INFIX (fn _ => let val  BVFORMULA1 = BVFORMULA1 ()
 val  BVFORMULA2 = BVFORMULA2 ()
 in ((*#line 286.50 "InstructionSemantics.grm"*)BV_Binop (BV_Rot_Right,        BVFORMULA1, BVFORMULA2)(*#line 4715.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 16, ( result, BVFORMULA1left, BVFORMULA2right), rest671)
end
|  ( 69, ( ( _, ( MlyValue.BVFORMULA BVFORMULA2, _, BVFORMULA2right)) :: _ :: ( _, ( MlyValue.BVFORMULA BVFORMULA1, BVFORMULA1left, _)) :: rest671)) => let val  result = MlyValue.BV_BINOP_INFIX (fn _ => let val  BVFORMULA1 = BVFORMULA1 ()
 val  BVFORMULA2 = BVFORMULA2 ()
 in ((*#line 287.50 "InstructionSemantics.grm"*)BV_Binop (BV_Shift_Left,       BVFORMULA1, BVFORMULA2)(*#line 4722.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 16, ( result, BVFORMULA1left, BVFORMULA2right), rest671)
end
|  ( 70, ( ( _, ( MlyValue.BVFORMULA BVFORMULA2, _, BVFORMULA2right)) :: _ :: ( _, ( MlyValue.BVFORMULA BVFORMULA1, BVFORMULA1left, _)) :: rest671)) => let val  result = MlyValue.BV_BINOP_INFIX (fn _ => let val  BVFORMULA1 = BVFORMULA1 ()
 val  BVFORMULA2 = BVFORMULA2 ()
 in ((*#line 288.50 "InstructionSemantics.grm"*)BV_Binop (BV_Shift_Right,      BVFORMULA1, BVFORMULA2)(*#line 4729.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 16, ( result, BVFORMULA1left, BVFORMULA2right), rest671)
end
|  ( 71, ( ( _, ( MlyValue.BVFORMULA BVFORMULA2, _, BVFORMULA2right)) :: _ :: ( _, ( MlyValue.BVFORMULA BVFORMULA1, BVFORMULA1left, _)) :: rest671)) => let val  result = MlyValue.BV_BINOP_INFIX (fn _ => let val  BVFORMULA1 = BVFORMULA1 ()
 val  BVFORMULA2 = BVFORMULA2 ()
 in ((*#line 289.50 "InstructionSemantics.grm"*)BV_Binop (BV_Signed_Div,       BVFORMULA1, BVFORMULA2)(*#line 4736.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 16, ( result, BVFORMULA1left, BVFORMULA2right), rest671)
end
|  ( 72, ( ( _, ( MlyValue.BVFORMULA BVFORMULA2, _, BVFORMULA2right)) :: _ :: ( _, ( MlyValue.BVFORMULA BVFORMULA1, BVFORMULA1left, _)) :: rest671)) => let val  result = MlyValue.BV_BINOP_INFIX (fn _ => let val  BVFORMULA1 = BVFORMULA1 ()
 val  BVFORMULA2 = BVFORMULA2 ()
 in ((*#line 290.50 "InstructionSemantics.grm"*)BV_Binop (BV_Signed_Mod,       BVFORMULA1, BVFORMULA2)(*#line 4743.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 16, ( result, BVFORMULA1left, BVFORMULA2right), rest671)
end
|  ( 73, ( ( _, ( MlyValue.BVFORMULA BVFORMULA2, _, BVFORMULA2right)) :: _ :: ( _, ( MlyValue.BVFORMULA BVFORMULA1, BVFORMULA1left, _)) :: rest671)) => let val  result = MlyValue.BV_BINOP_INFIX (fn _ => let val  BVFORMULA1 = BVFORMULA1 ()
 val  BVFORMULA2 = BVFORMULA2 ()
 in ((*#line 291.50 "InstructionSemantics.grm"*)BV_Binop (BV_Sign_Shift_Right, BVFORMULA1, BVFORMULA2)(*#line 4750.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 16, ( result, BVFORMULA1left, BVFORMULA2right), rest671)
end
|  ( 74, ( ( _, ( MlyValue.BVFORMULA BVFORMULA2, _, BVFORMULA2right)) :: _ :: ( _, ( MlyValue.BVFORMULA BVFORMULA1, BVFORMULA1left, _)) :: rest671)) => let val  result = MlyValue.BV_BINOP_INFIX (fn _ => let val  BVFORMULA1 = BVFORMULA1 ()
 val  BVFORMULA2 = BVFORMULA2 ()
 in ((*#line 292.50 "InstructionSemantics.grm"*)BV_Binop (BV_Xor,              BVFORMULA1, BVFORMULA2)(*#line 4757.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 16, ( result, BVFORMULA1left, BVFORMULA2right), rest671)
end
|  ( 75, ( ( _, ( MlyValue.BVFORMULA BVFORMULA1, _, BVFORMULA1right)) :: ( _, ( _, UNOP_SEXTEND161left, _)) :: rest671)) => let val  result = MlyValue.BV_UNOP (fn _ => let val  (BVFORMULA as BVFORMULA1) = BVFORMULA1 ()
 in ((*#line 295.31 "InstructionSemantics.grm"*)BV_Unop (BV_SExtend16, BVFORMULA)(*#line 4764.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 17, ( result, UNOP_SEXTEND161left, BVFORMULA1right), rest671)
end
|  ( 76, ( ( _, ( MlyValue.BVFORMULA BVFORMULA1, _, BVFORMULA1right)) :: ( _, ( _, UNOP_SEXTEND321left, _)) :: rest671)) => let val  result = MlyValue.BV_UNOP (fn _ => let val  (BVFORMULA as BVFORMULA1) = BVFORMULA1 ()
 in ((*#line 296.31 "InstructionSemantics.grm"*)BV_Unop (BV_SExtend32, BVFORMULA)(*#line 4770.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 17, ( result, UNOP_SEXTEND321left, BVFORMULA1right), rest671)
end
|  ( 77, ( ( _, ( MlyValue.BVFORMULA BVFORMULA1, _, BVFORMULA1right)) :: ( _, ( _, UNOP_SEXTEND641left, _)) :: rest671)) => let val  result = MlyValue.BV_UNOP (fn _ => let val  (BVFORMULA as BVFORMULA1) = BVFORMULA1 ()
 in ((*#line 297.31 "InstructionSemantics.grm"*)BV_Unop (BV_SExtend64, BVFORMULA)(*#line 4776.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 17, ( result, UNOP_SEXTEND641left, BVFORMULA1right), rest671)
end
|  ( 78, ( ( _, ( MlyValue.BVFORMULA BVFORMULA1, _, BVFORMULA1right)) :: ( _, ( _, UNOP_SEXTEND1281left, _)) :: rest671)) => let val  result = MlyValue.BV_UNOP (fn _ => let val  (BVFORMULA as BVFORMULA1) = BVFORMULA1 ()
 in ((*#line 298.32 "InstructionSemantics.grm"*)BV_Unop (BV_SExtend128, BVFORMULA)(*#line 4782.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 17, ( result, UNOP_SEXTEND1281left, BVFORMULA1right), rest671)
end
|  ( 79, ( ( _, ( MlyValue.BVFORMULA BVFORMULA1, _, BVFORMULA1right)) :: ( _, ( _, UNOP_SEXTEND2561left, _)) :: rest671)) => let val  result = MlyValue.BV_UNOP (fn _ => let val  (BVFORMULA as BVFORMULA1) = BVFORMULA1 ()
 in ((*#line 299.32 "InstructionSemantics.grm"*)BV_Unop (BV_SExtend256, BVFORMULA)(*#line 4788.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 17, ( result, UNOP_SEXTEND2561left, BVFORMULA1right), rest671)
end
|  ( 80, ( ( _, ( MlyValue.BVFORMULA BVFORMULA1, _, BVFORMULA1right)) :: ( _, ( _, UNOP_NOT1left, _)) :: rest671)) => let val  result = MlyValue.BV_UNOP (fn _ => let val  (BVFORMULA as BVFORMULA1) = BVFORMULA1 ()
 in ((*#line 300.25 "InstructionSemantics.grm"*)BV_Unop (BV_Not, BVFORMULA)(*#line 4794.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 17, ( result, UNOP_NOT1left, BVFORMULA1right), rest671)
end
|  ( 81, ( ( _, ( MlyValue.BVFORMULA BVFORMULA1, _, BVFORMULA1right)) :: ( _, ( _, UNOP_NEG1left, _)) :: rest671)) => let val  result = MlyValue.BV_UNOP (fn _ => let val  (BVFORMULA as BVFORMULA1) = BVFORMULA1 ()
 in ((*#line 301.25 "InstructionSemantics.grm"*)BV_Unop (BV_Neg, BVFORMULA)(*#line 4800.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 17, ( result, UNOP_NEG1left, BVFORMULA1right), rest671)
end
|  ( 82, ( ( _, ( MlyValue.BVFORMULA BVFORMULA1, _, BVFORMULA1right)) :: ( _, ( _, UNOP_CVT_INT32_TO_DOUBLE1left, _)) :: rest671)) => let val  result = MlyValue.BV_UNOP (fn _ => let val  (BVFORMULA as BVFORMULA1) = BVFORMULA1 ()
 in ((*#line 302.41 "InstructionSemantics.grm"*)BV_Unop (BV_Cvt_Int32_To_Double, BVFORMULA)(*#line 4806.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 17, ( result, UNOP_CVT_INT32_TO_DOUBLE1left, BVFORMULA1right), rest671)
end
|  ( 83, ( ( _, ( MlyValue.BVFORMULA BVFORMULA1, _, BVFORMULA1right)) :: ( _, ( _, UNOP_CVT_INT32_TO_SINGLE1left, _)) :: rest671)) => let val  result = MlyValue.BV_UNOP (fn _ => let val  (BVFORMULA as BVFORMULA1) = BVFORMULA1 ()
 in ((*#line 303.41 "InstructionSemantics.grm"*)BV_Unop (BV_Cvt_Int32_To_Single, BVFORMULA)(*#line 4812.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 17, ( result, UNOP_CVT_INT32_TO_SINGLE1left, BVFORMULA1right), rest671)
end
|  ( 84, ( ( _, ( MlyValue.BVFORMULA BVFORMULA1, _, BVFORMULA1right)) :: ( _, ( _, UNOP_CVT_DOUBLE_TO_INT321left, _)) :: rest671)) => let val  result = MlyValue.BV_UNOP (fn _ => let val  (BVFORMULA as BVFORMULA1) = BVFORMULA1 ()
 in ((*#line 304.41 "InstructionSemantics.grm"*)BV_Unop (BV_Cvt_Double_To_Int32, BVFORMULA)(*#line 4818.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 17, ( result, UNOP_CVT_DOUBLE_TO_INT321left, BVFORMULA1right), rest671)
end
|  ( 85, ( ( _, ( MlyValue.BVFORMULA BVFORMULA1, _, BVFORMULA1right)) :: ( _, ( _, UNOP_CVT_DOUBLE_TO_SINGLE1left, _)) :: rest671)) => let val  result = MlyValue.BV_UNOP (fn _ => let val  (BVFORMULA as BVFORMULA1) = BVFORMULA1 ()
 in ((*#line 305.42 "InstructionSemantics.grm"*)BV_Unop (BV_Cvt_Double_To_Single, BVFORMULA)(*#line 4824.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 17, ( result, UNOP_CVT_DOUBLE_TO_SINGLE1left, BVFORMULA1right), rest671)
end
|  ( 86, ( ( _, ( MlyValue.BVFORMULA BVFORMULA1, _, BVFORMULA1right)) :: ( _, ( _, UNOP_CVT_SINGLE_TO_INT321left, _)) :: rest671)) => let val  result = MlyValue.BV_UNOP (fn _ => let val  (BVFORMULA as BVFORMULA1) = BVFORMULA1 ()
 in ((*#line 306.41 "InstructionSemantics.grm"*)BV_Unop (BV_Cvt_Single_To_Int32, BVFORMULA)(*#line 4830.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 17, ( result, UNOP_CVT_SINGLE_TO_INT321left, BVFORMULA1right), rest671)
end
|  ( 87, ( ( _, ( MlyValue.BVFORMULA BVFORMULA1, _, BVFORMULA1right)) :: ( _, ( _, UNOP_CVT_SINGLE_TO_DOUBLE1left, _)) :: rest671)) => let val  result = MlyValue.BV_UNOP (fn _ => let val  (BVFORMULA as BVFORMULA1) = BVFORMULA1 ()
 in ((*#line 307.42 "InstructionSemantics.grm"*)BV_Unop (BV_Cvt_Single_To_Double, BVFORMULA)(*#line 4836.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 17, ( result, UNOP_CVT_SINGLE_TO_DOUBLE1left, BVFORMULA1right), rest671)
end
|  ( 88, ( ( _, ( MlyValue.BVFORMULA BVFORMULA1, _, BVFORMULA1right)) :: ( _, ( _, UNOP_CVT_DOUBLE_TO_INT641left, _)) :: rest671)) => let val  result = MlyValue.BV_UNOP (fn _ => let val  (BVFORMULA as BVFORMULA1) = BVFORMULA1 ()
 in ((*#line 308.41 "InstructionSemantics.grm"*)BV_Unop (BV_Cvt_Double_To_Int64, BVFORMULA)(*#line 4842.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 17, ( result, UNOP_CVT_DOUBLE_TO_INT641left, BVFORMULA1right), rest671)
end
|  ( 89, ( ( _, ( MlyValue.BVFORMULA BVFORMULA1, _, BVFORMULA1right)) :: ( _, ( _, UNOP_CVT_INT64_TO_DOUBLE1left, _)) :: rest671)) => let val  result = MlyValue.BV_UNOP (fn _ => let val  (BVFORMULA as BVFORMULA1) = BVFORMULA1 ()
 in ((*#line 309.41 "InstructionSemantics.grm"*)BV_Unop (BV_Cvt_Int64_To_Double, BVFORMULA)(*#line 4848.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 17, ( result, UNOP_CVT_INT64_TO_DOUBLE1left, BVFORMULA1right), rest671)
end
|  ( 90, ( ( _, ( MlyValue.BVFORMULA BVFORMULA1, _, BVFORMULA1right)) :: ( _, ( _, UNOP_CVT_INT64_TO_SINGLE1left, _)) :: rest671)) => let val  result = MlyValue.BV_UNOP (fn _ => let val  (BVFORMULA as BVFORMULA1) = BVFORMULA1 ()
 in ((*#line 310.41 "InstructionSemantics.grm"*)BV_Unop (BV_Cvt_Int64_To_Single, BVFORMULA)(*#line 4854.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 17, ( result, UNOP_CVT_INT64_TO_SINGLE1left, BVFORMULA1right), rest671)
end
|  ( 91, ( ( _, ( MlyValue.BVFORMULA BVFORMULA1, _, BVFORMULA1right)) :: ( _, ( _, UNOP_CVT_SINGLE_TO_INT641left, _)) :: rest671)) => let val  result = MlyValue.BV_UNOP (fn _ => let val  (BVFORMULA as BVFORMULA1) = BVFORMULA1 ()
 in ((*#line 311.41 "InstructionSemantics.grm"*)BV_Unop (BV_Cvt_Single_To_Int64, BVFORMULA)(*#line 4860.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 17, ( result, UNOP_CVT_SINGLE_TO_INT641left, BVFORMULA1right), rest671)
end
|  ( 92, ( ( _, ( MlyValue.BVFORMULA BVFORMULA1, _, BVFORMULA1right)) :: ( _, ( _, UNOP_CVT_DOUBLE_TO_INT32_TRUNCATE1left, _)) :: rest671)) => let val  result = MlyValue.BV_UNOP (fn _ => let val  (BVFORMULA as BVFORMULA1) = BVFORMULA1 ()
 in ((*#line 312.50 "InstructionSemantics.grm"*)BV_Unop (BV_Cvt_Double_To_Int32_Truncate, BVFORMULA)(*#line 4866.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 17, ( result, UNOP_CVT_DOUBLE_TO_INT32_TRUNCATE1left, BVFORMULA1right), rest671)
end
|  ( 93, ( ( _, ( MlyValue.BVFORMULA BVFORMULA1, _, BVFORMULA1right)) :: ( _, ( _, UNOP_CVT_SINGLE_TO_INT32_TRUNCATE1left, _)) :: rest671)) => let val  result = MlyValue.BV_UNOP (fn _ => let val  (BVFORMULA as BVFORMULA1) = BVFORMULA1 ()
 in ((*#line 313.50 "InstructionSemantics.grm"*)BV_Unop (BV_Cvt_Single_To_Int32_Truncate, BVFORMULA)(*#line 4872.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 17, ( result, UNOP_CVT_SINGLE_TO_INT32_TRUNCATE1left, BVFORMULA1right), rest671)
end
|  ( 94, ( ( _, ( MlyValue.BVFORMULA BVFORMULA1, _, BVFORMULA1right)) :: ( _, ( _, UNOP_CVT_DOUBLE_TO_INT64_TRUNCATE1left, _)) :: rest671)) => let val  result = MlyValue.BV_UNOP (fn _ => let val  (BVFORMULA as BVFORMULA1) = BVFORMULA1 ()
 in ((*#line 314.50 "InstructionSemantics.grm"*)BV_Unop (BV_Cvt_Double_To_Int64_Truncate, BVFORMULA)(*#line 4878.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 17, ( result, UNOP_CVT_DOUBLE_TO_INT64_TRUNCATE1left, BVFORMULA1right), rest671)
end
|  ( 95, ( ( _, ( MlyValue.BVFORMULA BVFORMULA1, _, BVFORMULA1right)) :: ( _, ( _, UNOP_CVT_SINGLE_TO_INT64_TRUNCATE1left, _)) :: rest671)) => let val  result = MlyValue.BV_UNOP (fn _ => let val  (BVFORMULA as BVFORMULA1) = BVFORMULA1 ()
 in ((*#line 315.50 "InstructionSemantics.grm"*)BV_Unop (BV_Cvt_Single_To_Int64_Truncate, BVFORMULA)(*#line 4884.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 17, ( result, UNOP_CVT_SINGLE_TO_INT64_TRUNCATE1left, BVFORMULA1right), rest671)
end
|  ( 96, ( ( _, ( MlyValue.BVFORMULA BVFORMULA1, _, BVFORMULA1right)) :: ( _, ( _, UNOP_APPROX_RECIPROCAL_SINGLE1left, _)) :: rest671)) => let val  result = MlyValue.BV_UNOP (fn _ => let val  (BVFORMULA as BVFORMULA1) = BVFORMULA1 ()
 in ((*#line 316.46 "InstructionSemantics.grm"*)BV_Unop (BV_Approx_Reciprocal_Single, BVFORMULA)(*#line 4890.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 17, ( result, UNOP_APPROX_RECIPROCAL_SINGLE1left, BVFORMULA1right), rest671)
end
|  ( 97, ( ( _, ( MlyValue.BVFORMULA BVFORMULA1, _, BVFORMULA1right)) :: ( _, ( _, UNOP_APPROX_RECIPROCAL_SQRT_SINGLE1left, _)) :: rest671)) => let val  result = MlyValue.BV_UNOP (fn _ => let val  (BVFORMULA as BVFORMULA1) = BVFORMULA1 ()
 in ((*#line 317.51 "InstructionSemantics.grm"*)BV_Unop (BV_Approx_Reciprocal_Sqrt_Single, BVFORMULA)(*#line 4896.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 17, ( result, UNOP_APPROX_RECIPROCAL_SQRT_SINGLE1left, BVFORMULA1right), rest671)
end
|  ( 98, ( ( _, ( MlyValue.BVFORMULA BVFORMULA1, _, BVFORMULA1right)) :: ( _, ( _, UNOP_SQRT_DOUBLE1left, _)) :: rest671)) => let val  result = MlyValue.BV_UNOP (fn _ => let val  (BVFORMULA as BVFORMULA1) = BVFORMULA1 ()
 in ((*#line 318.33 "InstructionSemantics.grm"*)BV_Unop (BV_Sqrt_Double, BVFORMULA)(*#line 4902.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 17, ( result, UNOP_SQRT_DOUBLE1left, BVFORMULA1right), rest671)
end
|  ( 99, ( ( _, ( MlyValue.BVFORMULA BVFORMULA1, _, BVFORMULA1right)) :: ( _, ( _, UNOP_SQRT_SINGLE1left, _)) :: rest671)) => let val  result = MlyValue.BV_UNOP (fn _ => let val  (BVFORMULA as BVFORMULA1) = BVFORMULA1 ()
 in ((*#line 319.33 "InstructionSemantics.grm"*)BV_Unop (BV_Sqrt_Single, BVFORMULA)(*#line 4908.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 17, ( result, UNOP_SQRT_SINGLE1left, BVFORMULA1right), rest671)
end
|  ( 100, ( ( _, ( _, _, RPAREN1right)) :: ( _, ( MlyValue.BVFORMULA BVFORMULA1, _, _)) :: ( _, ( _, LPAREN1left, _)) :: rest671)) => let val  result = MlyValue.BVFORMULA (fn _ => let val  (BVFORMULA as BVFORMULA1) = BVFORMULA1 ()
 in ((*#line 323.30 "InstructionSemantics.grm"*)BVFORMULA(*#line 4914.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 4, ( result, LPAREN1left, RPAREN1right), rest671)
end
|  ( 101, ( ( _, ( MlyValue.NAT NAT2, _, NAT2right)) :: _ :: ( _, ( MlyValue.NAT NAT1, NAT1left, _)) :: rest671)) => let val  result = MlyValue.BVFORMULA (fn _ => let val  NAT1 = NAT1 ()
 val  NAT2 = NAT2 ()
 in ((*#line 324.25 "InstructionSemantics.grm"*)BV_Immediate (NAT1,NAT2)(*#line 4920.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 4, ( result, NAT1left, NAT2right), rest671)
end
|  ( 102, ( ( _, ( _, _, RBRACKET1right)) :: ( _, ( MlyValue.NAT NAT2, _, _)) :: _ :: ( _, ( MlyValue.NAT NAT1, _, _)) :: _ :: ( _, ( MlyValue.BVFORMULA BVFORMULA1, BVFORMULA1left, _)) :: rest671)) => let val  result = MlyValue.BVFORMULA (fn _ => let val  (BVFORMULA as BVFORMULA1) = BVFORMULA1 ()
 val  NAT1 = NAT1 ()
 val  NAT2 = NAT2 ()
 in ((*#line 325.48 "InstructionSemantics.grm"*)BV_Slice (BVFORMULA,NAT1,NAT2)(*#line 4927.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 4, ( result, BVFORMULA1left, RBRACKET1right), rest671)
end
|  ( 103, ( ( _, ( MlyValue.BV_VAR BV_VAR1, BV_VAR1left, BV_VAR1right)) :: rest671)) => let val  result = MlyValue.BVFORMULA (fn _ => let val  (BV_VAR as BV_VAR1) = BV_VAR1 ()
 in ((*#line 326.13 "InstructionSemantics.grm"*)BV_Get BV_VAR(*#line 4935.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 4, ( result, BV_VAR1left, BV_VAR1right), rest671)
end
|  ( 104, ( ( _, ( _, _, RPAREN1right)) :: ( _, ( MlyValue.BVFORMULA BVFORMULA3, _, _)) :: _ :: ( _, ( MlyValue.BVFORMULA BVFORMULA2, _, _)) :: _ :: ( _, ( MlyValue.BVFORMULA BVFORMULA1, _, _)) :: _ :: ( _, ( MlyValue.BV_TERNOP BV_TERNOP1, BV_TERNOP1left, _)) :: rest671)) => let val  result = MlyValue.BVFORMULA (fn _ => let val  (BV_TERNOP as BV_TERNOP1) = BV_TERNOP1 ()
 val  BVFORMULA1 = BVFORMULA1 ()
 val  BVFORMULA2 = BVFORMULA2 ()
 val  BVFORMULA3 = BVFORMULA3 ()
 in ((*#line 327.72 "InstructionSemantics.grm"*)BV_Ternop (BV_TERNOP, BVFORMULA1, BVFORMULA2, BVFORMULA3)(*#line 4941.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 4, ( result, BV_TERNOP1left, RPAREN1right), rest671)
end
|  ( 105, ( ( _, ( _, _, RPAREN1right)) :: ( _, ( MlyValue.BVFORMULA BVFORMULA2, _, _)) :: _ :: ( _, ( MlyValue.BVFORMULA BVFORMULA1, _, _)) :: _ :: ( _, ( MlyValue.BV_BINOP BV_BINOP1, BV_BINOP1left, _)) :: rest671)) => let val  result = MlyValue.BVFORMULA (fn _ => let val  (BV_BINOP as BV_BINOP1) = BV_BINOP1 ()
 val  BVFORMULA1 = BVFORMULA1 ()
 val  BVFORMULA2 = BVFORMULA2 ()
 in ((*#line 328.55 "InstructionSemantics.grm"*)BV_Binop (BV_BINOP, BVFORMULA1, BVFORMULA2)(*#line 4950.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 4, ( result, BV_BINOP1left, RPAREN1right), rest671)
end
|  ( 106, ( ( _, ( MlyValue.BV_UNOP BV_UNOP1, BV_UNOP1left, BV_UNOP1right)) :: rest671)) => let val  result = MlyValue.BVFORMULA (fn _ => let val  (BV_UNOP as BV_UNOP1) = BV_UNOP1 ()
 in ((*#line 329.14 "InstructionSemantics.grm"*)BV_UNOP(*#line 4958.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 4, ( result, BV_UNOP1left, BV_UNOP1right), rest671)
end
|  ( 107, ( ( _, ( MlyValue.BVFORMULA BVFORMULA3, _, BVFORMULA3right)) :: _ :: ( _, ( MlyValue.BVFORMULA BVFORMULA2, _, _)) :: _ :: ( _, ( MlyValue.BVFORMULA BVFORMULA1, BVFORMULA1left, _)) :: rest671)) => let val  result = MlyValue.BVFORMULA (fn _ => let val  BVFORMULA1 = BVFORMULA1 ()
 val  BVFORMULA2 = BVFORMULA2 ()
 val  BVFORMULA3 = BVFORMULA3 ()
 in ((*#line 330.48 "InstructionSemantics.grm"*)BV_ITE (BVFORMULA1,BVFORMULA2,BVFORMULA3)(*#line 4964.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 4, ( result, BVFORMULA1left, BVFORMULA3right), rest671)
end
|  ( 108, ( ( _, ( MlyValue.BV_BINOP_INFIX BV_BINOP_INFIX1, BV_BINOP_INFIX1left, BV_BINOP_INFIX1right)) :: rest671)) => let val  result = MlyValue.BVFORMULA (fn _ => let val  (BV_BINOP_INFIX as BV_BINOP_INFIX1) = BV_BINOP_INFIX1 ()
 in ((*#line 331.21 "InstructionSemantics.grm"*)BV_BINOP_INFIX(*#line 4972.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 4, ( result, BV_BINOP_INFIX1left, BV_BINOP_INFIX1right), rest671)
end
|  ( 109, ( ( _, ( _, TRUE1left, TRUE1right)) :: rest671)) => let val  result = MlyValue.BVFORMULA (fn _ => ((*#line 332.11 "InstructionSemantics.grm"*)BV_Immediate (1,1)(*#line 4978.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 4, ( result, TRUE1left, TRUE1right), rest671)
end
|  ( 110, ( ( _, ( _, FALSE1left, FALSE1right)) :: rest671)) => let val  result = MlyValue.BVFORMULA (fn _ => ((*#line 333.12 "InstructionSemantics.grm"*)BV_Immediate (0,1)(*#line 4982.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 4, ( result, FALSE1left, FALSE1right), rest671)
end
|  ( 111, ( ( _, ( MlyValue.BVFORMULA BVFORMULA2, _, BVFORMULA2right)) :: _ :: ( _, ( MlyValue.BVFORMULA BVFORMULA1, BVFORMULA1left, _)) :: rest671)) => let val  result = MlyValue.BVFORMULA (fn _ => let val  BVFORMULA1 = BVFORMULA1 ()
 val  BVFORMULA2 = BVFORMULA2 ()
 in ((*#line 334.30 "InstructionSemantics.grm"*)B_Binop (B_Eq, BVFORMULA1, BVFORMULA2)(*#line 4986.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 4, ( result, BVFORMULA1left, BVFORMULA2right), rest671)
end
|  ( 112, ( ( _, ( MlyValue.FLG FLG1, FLG1left, FLG1right)) :: rest671)) => let val  result = MlyValue.BVFORMULA (fn _ => let val  (FLG as FLG1) = FLG1 ()
 in ((*#line 335.10 "InstructionSemantics.grm"*)B_Get FLG(*#line 4993.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 4, ( result, FLG1left, FLG1right), rest671)
end
|  ( 113, ( ( _, ( MlyValue.BVFORMULA BVFORMULA2, _, BVFORMULA2right)) :: _ :: ( _, ( MlyValue.BVFORMULA BVFORMULA1, BVFORMULA1left, _)) :: rest671)) => let val  result = MlyValue.BVFORMULA (fn _ => let val  BVFORMULA1 = BVFORMULA1 ()
 val  BVFORMULA2 = BVFORMULA2 ()
 in ((*#line 336.38 "InstructionSemantics.grm"*)B_Binop (B_And, BVFORMULA1, BVFORMULA2)(*#line 4999.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 4, ( result, BVFORMULA1left, BVFORMULA2right), rest671)
end
|  ( 114, ( ( _, ( MlyValue.BVFORMULA BVFORMULA2, _, BVFORMULA2right)) :: _ :: ( _, ( MlyValue.BVFORMULA BVFORMULA1, BVFORMULA1left, _)) :: rest671)) => let val  result = MlyValue.BVFORMULA (fn _ => let val  BVFORMULA1 = BVFORMULA1 ()
 val  BVFORMULA2 = BVFORMULA2 ()
 in ((*#line 337.37 "InstructionSemantics.grm"*)B_Binop (B_Or, BVFORMULA1, BVFORMULA2)(*#line 5006.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 4, ( result, BVFORMULA1left, BVFORMULA2right), rest671)
end
|  ( 115, ( ( _, ( MlyValue.BVFORMULA BVFORMULA2, _, BVFORMULA2right)) :: _ :: ( _, ( MlyValue.BVFORMULA BVFORMULA1, BVFORMULA1left, _)) :: rest671)) => let val  result = MlyValue.BVFORMULA (fn _ => let val  BVFORMULA1 = BVFORMULA1 ()
 val  BVFORMULA2 = BVFORMULA2 ()
 in ((*#line 338.38 "InstructionSemantics.grm"*)B_Binop (B_Xor, BVFORMULA1, BVFORMULA2)(*#line 5013.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 4, ( result, BVFORMULA1left, BVFORMULA2right), rest671)
end
|  ( 116, ( ( _, ( MlyValue.BVFORMULA BVFORMULA2, _, BVFORMULA2right)) :: _ :: ( _, ( MlyValue.BVFORMULA BVFORMULA1, BVFORMULA1left, _)) :: rest671)) => let val  result = MlyValue.BVFORMULA (fn _ => let val  BVFORMULA1 = BVFORMULA1 ()
 val  BVFORMULA2 = BVFORMULA2 ()
 in ((*#line 339.38 "InstructionSemantics.grm"*)B_Binop (B_Iff, BVFORMULA1, BVFORMULA2)(*#line 5020.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 4, ( result, BVFORMULA1left, BVFORMULA2right), rest671)
end
|  ( 117, ( ( _, ( MlyValue.BVFORMULA BVFORMULA2, _, BVFORMULA2right)) :: _ :: ( _, ( MlyValue.BVFORMULA BVFORMULA1, BVFORMULA1left, _)) :: rest671)) => let val  result = MlyValue.BVFORMULA (fn _ => let val  BVFORMULA1 = BVFORMULA1 ()
 val  BVFORMULA2 = BVFORMULA2 ()
 in ((*#line 340.42 "InstructionSemantics.grm"*)B_Binop (B_Implies, BVFORMULA1, BVFORMULA2)(*#line 5027.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 4, ( result, BVFORMULA1left, BVFORMULA2right), rest671)
end
|  ( 118, ( ( _, ( _, UNDEF1left, UNDEF1right)) :: rest671)) => let val  result = MlyValue.BVFORMULA (fn _ => ((*#line 341.12 "InstructionSemantics.grm"*)BV_Undefined(*#line 5034.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 4, ( result, UNDEF1left, UNDEF1right), rest671)
end
|  ( 119, ( ( _, ( _, CF1left, CF1right)) :: rest671)) => let val  result = MlyValue.FLG (fn _ => ((*#line 344.8 "InstructionSemantics.grm"*)flag_cf(*#line 5038.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 9, ( result, CF1left, CF1right), rest671)
end
|  ( 120, ( ( _, ( _, ZF1left, ZF1right)) :: rest671)) => let val  result = MlyValue.FLG (fn _ => ((*#line 344.23 "InstructionSemantics.grm"*)flag_zf(*#line 5042.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 9, ( result, ZF1left, ZF1right), rest671)
end
|  ( 121, ( ( _, ( _, SF1left, SF1right)) :: rest671)) => let val  result = MlyValue.FLG (fn _ => ((*#line 344.38 "InstructionSemantics.grm"*)flag_sf(*#line 5046.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 9, ( result, SF1left, SF1right), rest671)
end
|  ( 122, ( ( _, ( _, PF1left, PF1right)) :: rest671)) => let val  result = MlyValue.FLG (fn _ => ((*#line 344.53 "InstructionSemantics.grm"*)flag_pf(*#line 5050.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 9, ( result, PF1left, PF1right), rest671)
end
|  ( 123, ( ( _, ( _, AF1left, AF1right)) :: rest671)) => let val  result = MlyValue.FLG (fn _ => ((*#line 344.68 "InstructionSemantics.grm"*)flag_af(*#line 5054.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 9, ( result, AF1left, AF1right), rest671)
end
|  ( 124, ( ( _, ( _, OF1left, OF1right)) :: rest671)) => let val  result = MlyValue.FLG (fn _ => ((*#line 344.83 "InstructionSemantics.grm"*)flag_of(*#line 5058.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 9, ( result, OF1left, OF1right), rest671)
end
|  ( 125, ( ( _, ( _, AAA1left, AAA1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 350.8 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Aaa)(*#line 5062.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, AAA1left, AAA1right), rest671)
end
|  ( 126, ( ( _, ( _, AAD1left, AAD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 350.40 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Aad)(*#line 5066.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, AAD1left, AAD1right), rest671)
end
|  ( 127, ( ( _, ( _, AAM1left, AAM1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 350.72 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Aam)(*#line 5070.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, AAM1left, AAM1right), rest671)
end
|  ( 128, ( ( _, ( _, AAS1left, AAS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 350.104 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Aas)(*#line 5074.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, AAS1left, AAS1right), rest671)
end
|  ( 129, ( ( _, ( _, ADC1left, ADC1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 350.136 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Adc)(*#line 5078.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, ADC1left, ADC1right), rest671)
end
|  ( 130, ( ( _, ( _, ADD1left, ADD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 350.168 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Add)(*#line 5082.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, ADD1left, ADD1right), rest671)
end
|  ( 131, ( ( _, ( _, AND1left, AND1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 350.200 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 And)(*#line 5086.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, AND1left, AND1right), rest671)
end
|  ( 132, ( ( _, ( _, CALL1left, CALL1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 351.10 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Call)(*#line 5090.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CALL1left, CALL1right), rest671)
end
|  ( 133, ( ( _, ( _, CBW1left, CBW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 351.43 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Cbw)(*#line 5094.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CBW1left, CBW1right), rest671)
end
|  ( 134, ( ( _, ( _, CLC1left, CLC1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 351.75 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Clc)(*#line 5098.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CLC1left, CLC1right), rest671)
end
|  ( 135, ( ( _, ( _, CLD1left, CLD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 351.107 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Cld)(*#line 5102.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CLD1left, CLD1right), rest671)
end
|  ( 136, ( ( _, ( _, CLI1left, CLI1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 351.139 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Cli)(*#line 5106.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CLI1left, CLI1right), rest671)
end
|  ( 137, ( ( _, ( _, CMC1left, CMC1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 351.171 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Cmc)(*#line 5110.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMC1left, CMC1right), rest671)
end
|  ( 138, ( ( _, ( _, CMP1left, CMP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 351.203 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Cmp)(*#line 5114.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMP1left, CMP1right), rest671)
end
|  ( 139, ( ( _, ( _, CMPSB1left, CMPSB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 352.11 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Cmpsb)(*#line 5118.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMPSB1left, CMPSB1right), rest671)
end
|  ( 140, ( ( _, ( _, CWD1left, CWD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 352.45 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Cwd)(*#line 5122.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CWD1left, CWD1right), rest671)
end
|  ( 141, ( ( _, ( _, DAA1left, DAA1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 352.77 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Daa)(*#line 5126.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, DAA1left, DAA1right), rest671)
end
|  ( 142, ( ( _, ( _, DAS1left, DAS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 352.109 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Das)(*#line 5130.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, DAS1left, DAS1right), rest671)
end
|  ( 143, ( ( _, ( _, DEC1left, DEC1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 352.141 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Dec)(*#line 5134.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, DEC1left, DEC1right), rest671)
end
|  ( 144, ( ( _, ( _, DIV1left, DIV1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 352.173 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Div)(*#line 5138.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, DIV1left, DIV1right), rest671)
end
|  ( 145, ( ( _, ( _, ESC1left, ESC1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 352.205 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Esc)(*#line 5142.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, ESC1left, ESC1right), rest671)
end
|  ( 146, ( ( _, ( _, HLT1left, HLT1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 353.9 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Hlt)(*#line 5146.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, HLT1left, HLT1right), rest671)
end
|  ( 147, ( ( _, ( _, IDIV1left, IDIV1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 353.42 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Idiv)(*#line 5150.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, IDIV1left, IDIV1right), rest671)
end
|  ( 148, ( ( _, ( _, IMUL1left, IMUL1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 353.77 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Imul)(*#line 5154.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, IMUL1left, IMUL1right), rest671)
end
|  ( 149, ( ( _, ( _, IN1left, IN1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 353.109 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 In)(*#line 5158.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, IN1left, IN1right), rest671)
end
|  ( 150, ( ( _, ( _, INC1left, INC1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 353.140 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Inc)(*#line 5162.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, INC1left, INC1right), rest671)
end
|  ( 151, ( ( _, ( _, INT1left, INT1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 353.172 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 INS_Int)(*#line 5166.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, INT1left, INT1right), rest671)
end
|  ( 152, ( ( _, ( _, INTO1left, INTO1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 353.209 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Into)(*#line 5170.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, INTO1left, INTO1right), rest671)
end
|  ( 153, ( ( _, ( _, IRET1left, IRET1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 354.10 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Iret)(*#line 5174.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, IRET1left, IRET1right), rest671)
end
|  ( 154, ( ( _, ( _, JA1left, JA1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 354.42 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Ja)(*#line 5178.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, JA1left, JA1right), rest671)
end
|  ( 155, ( ( _, ( _, JAE1left, JAE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 354.73 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Jae)(*#line 5182.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, JAE1left, JAE1right), rest671)
end
|  ( 156, ( ( _, ( _, JB1left, JB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 354.104 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Jb)(*#line 5186.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, JB1left, JB1right), rest671)
end
|  ( 157, ( ( _, ( _, JBE1left, JBE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 354.135 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Jbe)(*#line 5190.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, JBE1left, JBE1right), rest671)
end
|  ( 158, ( ( _, ( _, JC1left, JC1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 354.166 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Jc)(*#line 5194.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, JC1left, JC1right), rest671)
end
|  ( 159, ( ( _, ( _, JE1left, JE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 354.196 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Je)(*#line 5198.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, JE1left, JE1right), rest671)
end
|  ( 160, ( ( _, ( _, JG1left, JG1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 354.226 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Jg)(*#line 5202.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, JG1left, JG1right), rest671)
end
|  ( 161, ( ( _, ( _, JGE1left, JGE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 355.9 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Jge)(*#line 5206.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, JGE1left, JGE1right), rest671)
end
|  ( 162, ( ( _, ( _, JL1left, JL1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 355.40 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Jl)(*#line 5210.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, JL1left, JL1right), rest671)
end
|  ( 163, ( ( _, ( _, JLE1left, JLE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 355.71 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Jle)(*#line 5214.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, JLE1left, JLE1right), rest671)
end
|  ( 164, ( ( _, ( _, JNA1left, JNA1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 355.103 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Jna)(*#line 5218.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, JNA1left, JNA1right), rest671)
end
|  ( 165, ( ( _, ( _, JNAE1left, JNAE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 355.136 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Jnae)(*#line 5222.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, JNAE1left, JNAE1right), rest671)
end
|  ( 166, ( ( _, ( _, JNB1left, JNB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 355.169 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Jnb)(*#line 5226.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, JNB1left, JNB1right), rest671)
end
|  ( 167, ( ( _, ( _, JNBE1left, JNBE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 355.202 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Jnbe)(*#line 5230.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, JNBE1left, JNBE1right), rest671)
end
|  ( 168, ( ( _, ( _, JNC1left, JNC1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 356.9 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Jnc)(*#line 5234.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, JNC1left, JNC1right), rest671)
end
|  ( 169, ( ( _, ( _, JNE1left, JNE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 356.41 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Jne)(*#line 5238.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, JNE1left, JNE1right), rest671)
end
|  ( 170, ( ( _, ( _, JNG1left, JNG1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 356.73 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Jng)(*#line 5242.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, JNG1left, JNG1right), rest671)
end
|  ( 171, ( ( _, ( _, JNGE1left, JNGE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 356.106 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Jnge)(*#line 5246.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, JNGE1left, JNGE1right), rest671)
end
|  ( 172, ( ( _, ( _, JNL1left, JNL1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 356.140 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Jnl)(*#line 5250.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, JNL1left, JNL1right), rest671)
end
|  ( 173, ( ( _, ( _, JNLE1left, JNLE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 356.173 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Jnle)(*#line 5254.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, JNLE1left, JNLE1right), rest671)
end
|  ( 174, ( ( _, ( _, JNO1left, JNO1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 356.206 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Jno)(*#line 5258.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, JNO1left, JNO1right), rest671)
end
|  ( 175, ( ( _, ( _, JNP1left, JNP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 357.9 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Jnp)(*#line 5262.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, JNP1left, JNP1right), rest671)
end
|  ( 176, ( ( _, ( _, JNS1left, JNS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 357.41 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Jns)(*#line 5266.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, JNS1left, JNS1right), rest671)
end
|  ( 177, ( ( _, ( _, JNZ1left, JNZ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 357.73 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Jnz)(*#line 5270.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, JNZ1left, JNZ1right), rest671)
end
|  ( 178, ( ( _, ( _, JO1left, JO1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 357.104 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Jo)(*#line 5274.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, JO1left, JO1right), rest671)
end
|  ( 179, ( ( _, ( _, JP1left, JP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 357.134 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Jp)(*#line 5278.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, JP1left, JP1right), rest671)
end
|  ( 180, ( ( _, ( _, JPE1left, JPE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 357.165 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Jpe)(*#line 5282.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, JPE1left, JPE1right), rest671)
end
|  ( 181, ( ( _, ( _, JPO1left, JPO1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 357.197 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Jpo)(*#line 5286.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, JPO1left, JPO1right), rest671)
end
|  ( 182, ( ( _, ( _, JS1left, JS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 357.228 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Js)(*#line 5290.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, JS1left, JS1right), rest671)
end
|  ( 183, ( ( _, ( _, JZ1left, JZ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 358.8 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Jz)(*#line 5294.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, JZ1left, JZ1right), rest671)
end
|  ( 184, ( ( _, ( _, JMP1left, JMP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 358.39 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Jmp)(*#line 5298.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, JMP1left, JMP1right), rest671)
end
|  ( 185, ( ( _, ( _, LAHF1left, LAHF1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 358.72 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Lahf)(*#line 5302.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LAHF1left, LAHF1right), rest671)
end
|  ( 186, ( ( _, ( _, LDS1left, LDS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 358.105 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Lds)(*#line 5306.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LDS1left, LDS1right), rest671)
end
|  ( 187, ( ( _, ( _, LEA1left, LEA1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 358.137 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Lea)(*#line 5310.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LEA1left, LEA1right), rest671)
end
|  ( 188, ( ( _, ( _, LES1left, LES1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 358.169 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Les)(*#line 5314.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LES1left, LES1right), rest671)
end
|  ( 189, ( ( _, ( _, LOCK1left, LOCK1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 358.202 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Lock)(*#line 5318.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LOCK1left, LOCK1right), rest671)
end
|  ( 190, ( ( _, ( _, LODSB1left, LODSB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 359.11 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Lodsb)(*#line 5322.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LODSB1left, LODSB1right), rest671)
end
|  ( 191, ( ( _, ( _, LODSW1left, LODSW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 359.47 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Lodsw)(*#line 5326.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LODSW1left, LODSW1right), rest671)
end
|  ( 192, ( ( _, ( _, LOOP1left, LOOP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 359.82 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Loop)(*#line 5330.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LOOP1left, LOOP1right), rest671)
end
|  ( 193, ( ( _, ( _, LOOPE1left, LOOPE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 359.117 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Loope)(*#line 5334.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LOOPE1left, LOOPE1right), rest671)
end
|  ( 194, ( ( _, ( _, LOOPNE1left, LOOPNE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 359.155 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Loopne)(*#line 5338.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LOOPNE1left, LOOPNE1right), rest671)
end
|  ( 195, ( ( _, ( _, LOOPNZ1left, LOOPNZ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 359.193 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Loopnz)(*#line 5342.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LOOPNZ1left, LOOPNZ1right), rest671)
end
|  ( 196, ( ( _, ( _, LOOPZ1left, LOOPZ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 360.11 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Loopz)(*#line 5346.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LOOPZ1left, LOOPZ1right), rest671)
end
|  ( 197, ( ( _, ( _, MOV1left, MOV1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 360.45 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Mov)(*#line 5350.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MOV1left, MOV1right), rest671)
end
|  ( 198, ( ( _, ( _, MOVSB1left, MOVSB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 360.79 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Movsb)(*#line 5354.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MOVSB1left, MOVSB1right), rest671)
end
|  ( 199, ( ( _, ( _, MOVSW1left, MOVSW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 360.115 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Movsw)(*#line 5358.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MOVSW1left, MOVSW1right), rest671)
end
|  ( 200, ( ( _, ( _, MUL1left, MUL1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 360.149 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Mul)(*#line 5362.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MUL1left, MUL1right), rest671)
end
|  ( 201, ( ( _, ( _, NEG1left, NEG1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 360.181 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Neg)(*#line 5366.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, NEG1left, NEG1right), rest671)
end
|  ( 202, ( ( _, ( _, NOP1left, NOP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 360.213 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Nop)(*#line 5370.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, NOP1left, NOP1right), rest671)
end
|  ( 203, ( ( _, ( _, NOT1left, NOT1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 361.9 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Not)(*#line 5374.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, NOT1left, NOT1right), rest671)
end
|  ( 204, ( ( _, ( _, OR1left, OR1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 361.40 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Or)(*#line 5378.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, OR1left, OR1right), rest671)
end
|  ( 205, ( ( _, ( _, OUT1left, OUT1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 361.71 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Out)(*#line 5382.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, OUT1left, OUT1right), rest671)
end
|  ( 206, ( ( _, ( _, POP1left, POP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 361.103 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Pop)(*#line 5386.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, POP1left, POP1right), rest671)
end
|  ( 207, ( ( _, ( _, POPF1left, POPF1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 361.136 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Popf)(*#line 5390.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, POPF1left, POPF1right), rest671)
end
|  ( 208, ( ( _, ( _, PUSH1left, PUSH1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 361.170 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Push)(*#line 5394.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PUSH1left, PUSH1right), rest671)
end
|  ( 209, ( ( _, ( _, PUSHF1left, PUSHF1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 361.205 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Pushf)(*#line 5398.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PUSHF1left, PUSHF1right), rest671)
end
|  ( 210, ( ( _, ( _, RCL1left, RCL1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 362.9 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Rcl)(*#line 5402.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, RCL1left, RCL1right), rest671)
end
|  ( 211, ( ( _, ( _, RCR1left, RCR1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 362.41 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Rcr)(*#line 5406.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, RCR1left, RCR1right), rest671)
end
|  ( 212, ( ( _, ( _, RET1left, RET1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 362.73 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Ret)(*#line 5410.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, RET1left, RET1right), rest671)
end
|  ( 213, ( ( _, ( _, RETN1left, RETN1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 362.106 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Retn)(*#line 5414.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, RETN1left, RETN1right), rest671)
end
|  ( 214, ( ( _, ( _, RETF1left, RETF1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 362.140 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Retf)(*#line 5418.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, RETF1left, RETF1right), rest671)
end
|  ( 215, ( ( _, ( _, ROL1left, ROL1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 362.174 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Rol)(*#line 5422.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, ROL1left, ROL1right), rest671)
end
|  ( 216, ( ( _, ( _, ROR1left, ROR1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 362.206 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Ror)(*#line 5426.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, ROR1left, ROR1right), rest671)
end
|  ( 217, ( ( _, ( _, SAHF1left, SAHF1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 363.10 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Sahf)(*#line 5430.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SAHF1left, SAHF1right), rest671)
end
|  ( 218, ( ( _, ( _, SAL1left, SAL1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 363.43 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Sal)(*#line 5434.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SAL1left, SAL1right), rest671)
end
|  ( 219, ( ( _, ( _, SAR1left, SAR1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 363.75 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Sar)(*#line 5438.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SAR1left, SAR1right), rest671)
end
|  ( 220, ( ( _, ( _, SBB1left, SBB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 363.107 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Sbb)(*#line 5442.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SBB1left, SBB1right), rest671)
end
|  ( 221, ( ( _, ( _, SCASB1left, SCASB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 363.141 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Scasb)(*#line 5446.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SCASB1left, SCASB1right), rest671)
end
|  ( 222, ( ( _, ( _, SCASW1left, SCASW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 363.177 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Scasw)(*#line 5450.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SCASW1left, SCASW1right), rest671)
end
|  ( 223, ( ( _, ( _, SHL1left, SHL1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 363.211 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Shl)(*#line 5454.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SHL1left, SHL1right), rest671)
end
|  ( 224, ( ( _, ( _, SHR1left, SHR1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 364.9 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Shr)(*#line 5458.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SHR1left, SHR1right), rest671)
end
|  ( 225, ( ( _, ( _, STC1left, STC1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 364.41 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Stc)(*#line 5462.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, STC1left, STC1right), rest671)
end
|  ( 226, ( ( _, ( _, STD1left, STD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 364.73 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Std)(*#line 5466.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, STD1left, STD1right), rest671)
end
|  ( 227, ( ( _, ( _, STI1left, STI1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 364.105 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Sti)(*#line 5470.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, STI1left, STI1right), rest671)
end
|  ( 228, ( ( _, ( _, STOSB1left, STOSB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 364.139 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Stosb)(*#line 5474.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, STOSB1left, STOSB1right), rest671)
end
|  ( 229, ( ( _, ( _, STOSW1left, STOSW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 364.175 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Stosw)(*#line 5478.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, STOSW1left, STOSW1right), rest671)
end
|  ( 230, ( ( _, ( _, SUB1left, SUB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 364.209 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Sub)(*#line 5482.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SUB1left, SUB1right), rest671)
end
|  ( 231, ( ( _, ( _, TEST1left, TEST1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 365.10 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Test)(*#line 5486.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, TEST1left, TEST1right), rest671)
end
|  ( 232, ( ( _, ( _, WAIT1left, WAIT1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 365.44 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Wait)(*#line 5490.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, WAIT1left, WAIT1right), rest671)
end
|  ( 233, ( ( _, ( _, XCHG1left, XCHG1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 365.78 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Xchg)(*#line 5494.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, XCHG1left, XCHG1right), rest671)
end
|  ( 234, ( ( _, ( _, XLAT1left, XLAT1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 365.112 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Xlat)(*#line 5498.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, XLAT1left, XLAT1right), rest671)
end
|  ( 235, ( ( _, ( _, XOR1left, XOR1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 365.145 "InstructionSemantics.grm"*)(IMF_8088, IS_8088 Xor)(*#line 5502.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, XOR1left, XOR1right), rest671)
end
|  ( 236, ( ( _, ( _, F2XM11left, F2XM11right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 367.10 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 F2xm1)(*#line 5506.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, F2XM11left, F2XM11right), rest671)
end
|  ( 237, ( ( _, ( _, FABS1left, FABS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 367.53 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fabs)(*#line 5510.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FABS1left, FABS1right), rest671)
end
|  ( 238, ( ( _, ( _, FADD1left, FADD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 367.95 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fadd)(*#line 5514.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FADD1left, FADD1right), rest671)
end
|  ( 239, ( ( _, ( _, FADDP1left, FADDP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 367.138 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Faddp)(*#line 5518.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FADDP1left, FADDP1right), rest671)
end
|  ( 240, ( ( _, ( _, FBLD1left, FBLD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 367.181 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fbld)(*#line 5522.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FBLD1left, FBLD1right), rest671)
end
|  ( 241, ( ( _, ( _, FBSTP1left, FBSTP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 368.11 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fbstp)(*#line 5526.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FBSTP1left, FBSTP1right), rest671)
end
|  ( 242, ( ( _, ( _, FCHS1left, FCHS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 368.54 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fchs)(*#line 5530.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FCHS1left, FCHS1right), rest671)
end
|  ( 243, ( ( _, ( _, FCLEX1left, FCLEX1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 368.97 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fclex)(*#line 5534.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FCLEX1left, FCLEX1right), rest671)
end
|  ( 244, ( ( _, ( _, FCOM1left, FCOM1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 368.140 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fcom)(*#line 5538.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FCOM1left, FCOM1right), rest671)
end
|  ( 245, ( ( _, ( _, FCOMP1left, FCOMP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 368.183 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fcomp)(*#line 5542.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FCOMP1left, FCOMP1right), rest671)
end
|  ( 246, ( ( _, ( _, FCOMPP1left, FCOMPP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 369.12 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fcompp)(*#line 5546.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FCOMPP1left, FCOMPP1right), rest671)
end
|  ( 247, ( ( _, ( _, DECSTP1left, DECSTP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 369.58 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Decstp)(*#line 5550.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, DECSTP1left, DECSTP1right), rest671)
end
|  ( 248, ( ( _, ( _, FDISI1left, FDISI1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 369.103 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fdisi)(*#line 5554.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FDISI1left, FDISI1right), rest671)
end
|  ( 249, ( ( _, ( _, FDIV1left, FDIV1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 369.146 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fdiv)(*#line 5558.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FDIV1left, FDIV1right), rest671)
end
|  ( 250, ( ( _, ( _, FDIVP1left, FDIVP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 369.189 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fdivp)(*#line 5562.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FDIVP1left, FDIVP1right), rest671)
end
|  ( 251, ( ( _, ( _, FDIVR1left, FDIVR1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 370.11 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fdivr)(*#line 5566.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FDIVR1left, FDIVR1right), rest671)
end
|  ( 252, ( ( _, ( _, FDIVRP1left, FDIVRP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 370.56 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fdivrp)(*#line 5570.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FDIVRP1left, FDIVRP1right), rest671)
end
|  ( 253, ( ( _, ( _, FENI1left, FENI1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 370.100 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Feni)(*#line 5574.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FENI1left, FENI1right), rest671)
end
|  ( 254, ( ( _, ( _, FFREE1left, FFREE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 370.144 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Ffree)(*#line 5578.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FFREE1left, FFREE1right), rest671)
end
|  ( 255, ( ( _, ( _, FIADD1left, FIADD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 370.188 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fiadd)(*#line 5582.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FIADD1left, FIADD1right), rest671)
end
|  ( 256, ( ( _, ( _, FICOM1left, FICOM1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 371.11 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Ficom)(*#line 5586.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FICOM1left, FICOM1right), rest671)
end
|  ( 257, ( ( _, ( _, FICOMP1left, FICOMP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 371.56 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Ficomp)(*#line 5590.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FICOMP1left, FICOMP1right), rest671)
end
|  ( 258, ( ( _, ( _, FIDIV1left, FIDIV1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 371.101 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fidiv)(*#line 5594.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FIDIV1left, FIDIV1right), rest671)
end
|  ( 259, ( ( _, ( _, FIDIVR1left, FIDIVR1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 371.146 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fidivr)(*#line 5598.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FIDIVR1left, FIDIVR1right), rest671)
end
|  ( 260, ( ( _, ( _, FILD1left, FILD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 371.190 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fild)(*#line 5602.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FILD1left, FILD1right), rest671)
end
|  ( 261, ( ( _, ( _, FIMUL1left, FIMUL1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 372.11 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fimul)(*#line 5606.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FIMUL1left, FIMUL1right), rest671)
end
|  ( 262, ( ( _, ( _, FINCSTP1left, FINCSTP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 372.57 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fincstp)(*#line 5610.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FINCSTP1left, FINCSTP1right), rest671)
end
|  ( 263, ( ( _, ( _, FINIT1left, FINIT1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 372.103 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Finit)(*#line 5614.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FINIT1left, FINIT1right), rest671)
end
|  ( 264, ( ( _, ( _, FIST1left, FIST1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 372.146 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fist)(*#line 5618.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FIST1left, FIST1right), rest671)
end
|  ( 265, ( ( _, ( _, FISTP1left, FISTP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 372.189 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fistp)(*#line 5622.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FISTP1left, FISTP1right), rest671)
end
|  ( 266, ( ( _, ( _, FISUB1left, FISUB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 373.11 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fisub)(*#line 5626.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FISUB1left, FISUB1right), rest671)
end
|  ( 267, ( ( _, ( _, ISUBR1left, ISUBR1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 373.55 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Isubr)(*#line 5630.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, ISUBR1left, ISUBR1right), rest671)
end
|  ( 268, ( ( _, ( _, FLD1left, FLD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 373.97 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fld)(*#line 5634.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FLD1left, FLD1right), rest671)
end
|  ( 269, ( ( _, ( _, FLD11left, FLD11right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 373.138 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fld1)(*#line 5638.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FLD11left, FLD11right), rest671)
end
|  ( 270, ( ( _, ( _, FLDCW1left, FLDCW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 373.181 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fldcw)(*#line 5642.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FLDCW1left, FLDCW1right), rest671)
end
|  ( 271, ( ( _, ( _, FLDENV1left, FLDENV1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 374.12 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fldenv)(*#line 5646.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FLDENV1left, FLDENV1right), rest671)
end
|  ( 272, ( ( _, ( _, FLDENVW1left, FLDENVW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 374.60 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fldenvw)(*#line 5650.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FLDENVW1left, FLDENVW1right), rest671)
end
|  ( 273, ( ( _, ( _, FLDL2E1left, FLDL2E1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 374.107 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fldl2e)(*#line 5654.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FLDL2E1left, FLDL2E1right), rest671)
end
|  ( 274, ( ( _, ( _, FLDL2T1left, FLDL2T1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 374.153 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fldl2t)(*#line 5658.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FLDL2T1left, FLDL2T1right), rest671)
end
|  ( 275, ( ( _, ( _, FLDLG21left, FLDLG21right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 374.199 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fldlg2)(*#line 5662.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FLDLG21left, FLDLG21right), rest671)
end
|  ( 276, ( ( _, ( _, FLDLN21left, FLDLN21right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 375.12 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fldln2)(*#line 5666.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FLDLN21left, FLDLN21right), rest671)
end
|  ( 277, ( ( _, ( _, LDPI1left, LDPI1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 375.56 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Ldpi)(*#line 5670.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LDPI1left, LDPI1right), rest671)
end
|  ( 278, ( ( _, ( _, FLDZ1left, FLDZ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 375.98 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fldz)(*#line 5674.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FLDZ1left, FLDZ1right), rest671)
end
|  ( 279, ( ( _, ( _, FMUL1left, FMUL1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 375.140 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fmul)(*#line 5678.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FMUL1left, FMUL1right), rest671)
end
|  ( 280, ( ( _, ( _, FMULP1left, FMULP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 375.183 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fmulp)(*#line 5682.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FMULP1left, FMULP1right), rest671)
end
|  ( 281, ( ( _, ( _, FNCLEX1left, FNCLEX1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 376.12 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fnclex)(*#line 5686.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FNCLEX1left, FNCLEX1right), rest671)
end
|  ( 282, ( ( _, ( _, FNDISI1left, FNDISI1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 376.58 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fndisi)(*#line 5690.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FNDISI1left, FNDISI1right), rest671)
end
|  ( 283, ( ( _, ( _, FNENI1left, FNENI1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 376.103 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fneni)(*#line 5694.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FNENI1left, FNENI1right), rest671)
end
|  ( 284, ( ( _, ( _, FNINIT1left, FNINIT1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 376.148 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fninit)(*#line 5698.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FNINIT1left, FNINIT1right), rest671)
end
|  ( 285, ( ( _, ( _, FNOP1left, FNOP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 376.192 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fnop)(*#line 5702.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FNOP1left, FNOP1right), rest671)
end
|  ( 286, ( ( _, ( _, FNSAVE1left, FNSAVE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 377.12 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fnsave)(*#line 5706.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FNSAVE1left, FNSAVE1right), rest671)
end
|  ( 287, ( ( _, ( _, FNSAVEW1left, FNSAVEW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 377.59 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fnsavew)(*#line 5710.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FNSAVEW1left, FNSAVEW1right), rest671)
end
|  ( 288, ( ( _, ( _, FNSTCW1left, FNSTCW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 377.106 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fnstcw)(*#line 5714.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FNSTCW1left, FNSTCW1right), rest671)
end
|  ( 289, ( ( _, ( _, FNSTENV1left, FNSTENV1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 377.154 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fnstenv)(*#line 5718.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FNSTENV1left, FNSTENV1right), rest671)
end
|  ( 290, ( ( _, ( _, FNSTENVW1left, FNSTENVW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 378.14 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fnstenvw)(*#line 5722.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FNSTENVW1left, FNSTENVW1right), rest671)
end
|  ( 291, ( ( _, ( _, FNSTSW1left, FNSTSW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 378.62 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fnstsw)(*#line 5726.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FNSTSW1left, FNSTSW1right), rest671)
end
|  ( 292, ( ( _, ( _, FPATAN1left, FPATAN1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 378.108 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fpatan)(*#line 5730.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FPATAN1left, FPATAN1right), rest671)
end
|  ( 293, ( ( _, ( _, FPREM1left, FPREM1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 378.153 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fprem)(*#line 5734.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FPREM1left, FPREM1right), rest671)
end
|  ( 294, ( ( _, ( _, FPTAN1left, FPTAN1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 378.197 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fptan)(*#line 5738.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FPTAN1left, FPTAN1right), rest671)
end
|  ( 295, ( ( _, ( _, FRNDINT1left, FRNDINT1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 379.13 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Frndint)(*#line 5742.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FRNDINT1left, FRNDINT1right), rest671)
end
|  ( 296, ( ( _, ( _, FRSTOR1left, FRSTOR1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 379.60 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Frstor)(*#line 5746.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FRSTOR1left, FRSTOR1right), rest671)
end
|  ( 297, ( ( _, ( _, FRSTORW1left, FRSTORW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 379.107 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Frstorw)(*#line 5750.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FRSTORW1left, FRSTORW1right), rest671)
end
|  ( 298, ( ( _, ( _, SAVE1left, SAVE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 379.152 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Save)(*#line 5754.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SAVE1left, SAVE1right), rest671)
end
|  ( 299, ( ( _, ( _, FSAVEW1left, FSAVEW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 379.196 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fsavew)(*#line 5758.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FSAVEW1left, FSAVEW1right), rest671)
end
|  ( 300, ( ( _, ( _, FSCALE1left, FSCALE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 380.12 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fscale)(*#line 5762.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FSCALE1left, FSCALE1right), rest671)
end
|  ( 301, ( ( _, ( _, FSQRT1left, FSQRT1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 380.57 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fsqrt)(*#line 5766.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FSQRT1left, FSQRT1right), rest671)
end
|  ( 302, ( ( _, ( _, FST1left, FST1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 380.99 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fst)(*#line 5770.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FST1left, FST1right), rest671)
end
|  ( 303, ( ( _, ( _, FSTCW1left, FSTCW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 380.141 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fstcw)(*#line 5774.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FSTCW1left, FSTCW1right), rest671)
end
|  ( 304, ( ( _, ( _, FSTENV1left, FSTENV1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 380.186 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fstenv)(*#line 5778.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FSTENV1left, FSTENV1right), rest671)
end
|  ( 305, ( ( _, ( _, FSTENVW1left, FSTENVW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 381.13 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fstenvw)(*#line 5782.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FSTENVW1left, FSTENVW1right), rest671)
end
|  ( 306, ( ( _, ( _, FSTP1left, FSTP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 381.58 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fstp)(*#line 5786.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FSTP1left, FSTP1right), rest671)
end
|  ( 307, ( ( _, ( _, FSTSW1left, FSTSW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 381.101 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fstsw)(*#line 5790.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FSTSW1left, FSTSW1right), rest671)
end
|  ( 308, ( ( _, ( _, FSUB1left, FSUB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 381.144 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fsub)(*#line 5794.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FSUB1left, FSUB1right), rest671)
end
|  ( 309, ( ( _, ( _, FSUBP1left, FSUBP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 381.187 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fsubp)(*#line 5798.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FSUBP1left, FSUBP1right), rest671)
end
|  ( 310, ( ( _, ( _, FSUBR1left, FSUBR1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 382.11 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fsubr)(*#line 5802.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FSUBR1left, FSUBR1right), rest671)
end
|  ( 311, ( ( _, ( _, FSUBRP1left, FSUBRP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 382.56 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fsubrp)(*#line 5806.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FSUBRP1left, FSUBRP1right), rest671)
end
|  ( 312, ( ( _, ( _, FTST1left, FTST1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 382.100 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Ftst)(*#line 5810.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FTST1left, FTST1right), rest671)
end
|  ( 313, ( ( _, ( _, FWAIT1left, FWAIT1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 382.143 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fwait)(*#line 5814.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FWAIT1left, FWAIT1right), rest671)
end
|  ( 314, ( ( _, ( _, FXAM1left, FXAM1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 382.186 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fxam)(*#line 5818.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FXAM1left, FXAM1right), rest671)
end
|  ( 315, ( ( _, ( _, FXCH1left, FXCH1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 383.10 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fxch)(*#line 5822.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FXCH1left, FXCH1right), rest671)
end
|  ( 316, ( ( _, ( _, FXTRACT1left, FXTRACT1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 383.55 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fxtract)(*#line 5826.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FXTRACT1left, FXTRACT1right), rest671)
end
|  ( 317, ( ( _, ( _, FYL2X1left, FYL2X1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 383.101 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fyl2x)(*#line 5830.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FYL2X1left, FYL2X1right), rest671)
end
|  ( 318, ( ( _, ( _, FYL2XP11left, FYL2XP11right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 383.147 "InstructionSemantics.grm"*)(IMF_8088_x87, IS_8088_x87 Fyl2xp1)(*#line 5834.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FYL2XP11left, FYL2XP11right), rest671)
end
|  ( 319, ( ( _, ( _, BOUND1left, BOUND1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 385.10 "InstructionSemantics.grm"*)(IMF_80188, IS_80188 Bound)(*#line 5838.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, BOUND1left, BOUND1right), rest671)
end
|  ( 320, ( ( _, ( _, ENTER1left, ENTER1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 385.48 "InstructionSemantics.grm"*)(IMF_80188, IS_80188 Enter)(*#line 5842.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, ENTER1left, ENTER1right), rest671)
end
|  ( 321, ( ( _, ( _, INS1left, INS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 385.84 "InstructionSemantics.grm"*)(IMF_80188, IS_80188 Ins)(*#line 5846.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, INS1left, INS1right), rest671)
end
|  ( 322, ( ( _, ( _, LEAVE1left, LEAVE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 385.120 "InstructionSemantics.grm"*)(IMF_80188, IS_80188 Leave)(*#line 5850.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LEAVE1left, LEAVE1right), rest671)
end
|  ( 323, ( ( _, ( _, OUTS1left, OUTS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 385.157 "InstructionSemantics.grm"*)(IMF_80188, IS_80188 Outs)(*#line 5854.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, OUTS1left, OUTS1right), rest671)
end
|  ( 324, ( ( _, ( _, POPA1left, POPA1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 385.193 "InstructionSemantics.grm"*)(IMF_80188, IS_80188 Popa)(*#line 5858.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, POPA1left, POPA1right), rest671)
end
|  ( 325, ( ( _, ( _, PUSHA1left, PUSHA1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 386.11 "InstructionSemantics.grm"*)(IMF_80188, IS_80188 Pusha)(*#line 5862.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PUSHA1left, PUSHA1right), rest671)
end
|  ( 326, ( ( _, ( _, ARPL1left, ARPL1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 388.9 "InstructionSemantics.grm"*)(IMF_80286, IS_80286 Arpl)(*#line 5866.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, ARPL1left, ARPL1right), rest671)
end
|  ( 327, ( ( _, ( _, CLTS1left, CLTS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 388.45 "InstructionSemantics.grm"*)(IMF_80286, IS_80286 Clts)(*#line 5870.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CLTS1left, CLTS1right), rest671)
end
|  ( 328, ( ( _, ( _, LAR1left, LAR1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 388.80 "InstructionSemantics.grm"*)(IMF_80286, IS_80286 Lar)(*#line 5874.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LAR1left, LAR1right), rest671)
end
|  ( 329, ( ( _, ( _, LGDT1left, LGDT1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 388.115 "InstructionSemantics.grm"*)(IMF_80286, IS_80286 Lgdt)(*#line 5878.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LGDT1left, LGDT1right), rest671)
end
|  ( 330, ( ( _, ( _, LIDT1left, LIDT1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 388.151 "InstructionSemantics.grm"*)(IMF_80286, IS_80286 Lidt)(*#line 5882.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LIDT1left, LIDT1right), rest671)
end
|  ( 331, ( ( _, ( _, LLDT1left, LLDT1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 388.187 "InstructionSemantics.grm"*)(IMF_80286, IS_80286 Lldt)(*#line 5886.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LLDT1left, LLDT1right), rest671)
end
|  ( 332, ( ( _, ( _, LMSW1left, LMSW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 389.10 "InstructionSemantics.grm"*)(IMF_80286, IS_80286 Lmsw)(*#line 5890.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LMSW1left, LMSW1right), rest671)
end
|  ( 333, ( ( _, ( _, LOADALL1left, LOADALL1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 389.49 "InstructionSemantics.grm"*)(IMF_80286, IS_80286 Loadall)(*#line 5894.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LOADALL1left, LOADALL1right), rest671)
end
|  ( 334, ( ( _, ( _, LSL1left, LSL1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 389.87 "InstructionSemantics.grm"*)(IMF_80286, IS_80286 Lsl)(*#line 5898.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LSL1left, LSL1right), rest671)
end
|  ( 335, ( ( _, ( _, LTR1left, LTR1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 389.121 "InstructionSemantics.grm"*)(IMF_80286, IS_80286 Ltr)(*#line 5902.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LTR1left, LTR1right), rest671)
end
|  ( 336, ( ( _, ( _, SGDT1left, SGDT1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 389.156 "InstructionSemantics.grm"*)(IMF_80286, IS_80286 Sgdt)(*#line 5906.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SGDT1left, SGDT1right), rest671)
end
|  ( 337, ( ( _, ( _, SIDT1left, SIDT1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 389.192 "InstructionSemantics.grm"*)(IMF_80286, IS_80286 Sidt)(*#line 5910.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SIDT1left, SIDT1right), rest671)
end
|  ( 338, ( ( _, ( _, SLDT1left, SLDT1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 390.10 "InstructionSemantics.grm"*)(IMF_80286, IS_80286 Sldt)(*#line 5914.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SLDT1left, SLDT1right), rest671)
end
|  ( 339, ( ( _, ( _, SMSW1left, SMSW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 390.46 "InstructionSemantics.grm"*)(IMF_80286, IS_80286 Smsw)(*#line 5918.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SMSW1left, SMSW1right), rest671)
end
|  ( 340, ( ( _, ( _, STR1left, STR1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 390.81 "InstructionSemantics.grm"*)(IMF_80286, IS_80286 Str)(*#line 5922.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, STR1left, STR1right), rest671)
end
|  ( 341, ( ( _, ( _, VERR1left, VERR1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 390.116 "InstructionSemantics.grm"*)(IMF_80286, IS_80286 Verr)(*#line 5926.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VERR1left, VERR1right), rest671)
end
|  ( 342, ( ( _, ( _, VERW1left, VERW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 390.152 "InstructionSemantics.grm"*)(IMF_80286, IS_80286 Verw)(*#line 5930.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VERW1left, VERW1right), rest671)
end
|  ( 343, ( ( _, ( _, FSETPM1left, FSETPM1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 392.11 "InstructionSemantics.grm"*)(IMF_80286_x87, IS_80286_x87 Fsetpm)(*#line 5934.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FSETPM1left, FSETPM1right), rest671)
end
|  ( 344, ( ( _, ( _, BSF1left, BSF1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 394.8 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Bsf)(*#line 5938.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, BSF1left, BSF1right), rest671)
end
|  ( 345, ( ( _, ( _, BSR1left, BSR1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 394.42 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Bsr)(*#line 5942.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, BSR1left, BSR1right), rest671)
end
|  ( 346, ( ( _, ( _, BT1left, BT1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 394.75 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Bt)(*#line 5946.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, BT1left, BT1right), rest671)
end
|  ( 347, ( ( _, ( _, BTC1left, BTC1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 394.108 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Btc)(*#line 5950.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, BTC1left, BTC1right), rest671)
end
|  ( 348, ( ( _, ( _, BTR1left, BTR1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 394.142 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Btr)(*#line 5954.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, BTR1left, BTR1right), rest671)
end
|  ( 349, ( ( _, ( _, BTS1left, BTS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 394.176 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Bts)(*#line 5958.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, BTS1left, BTS1right), rest671)
end
|  ( 350, ( ( _, ( _, CDQ1left, CDQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 394.210 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Cdq)(*#line 5962.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CDQ1left, CDQ1right), rest671)
end
|  ( 351, ( ( _, ( _, CWDE1left, CWDE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 395.10 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Cwde)(*#line 5966.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CWDE1left, CWDE1right), rest671)
end
|  ( 352, ( ( _, ( _, IBTS1left, IBTS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 395.46 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Ibts)(*#line 5970.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, IBTS1left, IBTS1right), rest671)
end
|  ( 353, ( ( _, ( _, INSD1left, INSD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 395.82 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Insd)(*#line 5974.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, INSD1left, INSD1right), rest671)
end
|  ( 354, ( ( _, ( _, IRETD1left, IRETD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 395.119 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Iretd)(*#line 5978.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, IRETD1left, IRETD1right), rest671)
end
|  ( 355, ( ( _, ( _, IRETF1left, IRETF1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 395.157 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Iretf)(*#line 5982.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, IRETF1left, IRETF1right), rest671)
end
|  ( 356, ( ( _, ( _, JECXZ1left, JECXZ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 395.195 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Jecxz)(*#line 5986.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, JECXZ1left, JECXZ1right), rest671)
end
|  ( 357, ( ( _, ( _, LFS1left, LFS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 396.9 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Lfs)(*#line 5990.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LFS1left, LFS1right), rest671)
end
|  ( 358, ( ( _, ( _, LGS1left, LGS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 396.43 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Lgs)(*#line 5994.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LGS1left, LGS1right), rest671)
end
|  ( 359, ( ( _, ( _, LSS1left, LSS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 396.77 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Lss)(*#line 5998.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LSS1left, LSS1right), rest671)
end
|  ( 360, ( ( _, ( _, LODSD1left, LODSD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 396.113 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Lodsd)(*#line 6002.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LODSD1left, LODSD1right), rest671)
end
|  ( 361, ( ( _, ( _, LOOPW1left, LOOPW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 396.151 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Loopw)(*#line 6006.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LOOPW1left, LOOPW1right), rest671)
end
|  ( 362, ( ( _, ( _, LOOPZW1left, LOOPZW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 396.190 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Loopzw)(*#line 6010.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LOOPZW1left, LOOPZW1right), rest671)
end
|  ( 363, ( ( _, ( _, LOOPEW1left, LOOPEW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 397.12 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Loopew)(*#line 6014.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LOOPEW1left, LOOPEW1right), rest671)
end
|  ( 364, ( ( _, ( _, LOOPNZW1left, LOOPNZW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 397.54 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Loopnzw)(*#line 6018.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LOOPNZW1left, LOOPNZW1right), rest671)
end
|  ( 365, ( ( _, ( _, LOOPNEW1left, LOOPNEW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 397.96 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Loopnew)(*#line 6022.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LOOPNEW1left, LOOPNEW1right), rest671)
end
|  ( 366, ( ( _, ( _, LOOPD1left, LOOPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 397.136 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Loopd)(*#line 6026.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LOOPD1left, LOOPD1right), rest671)
end
|  ( 367, ( ( _, ( _, LOOPZD1left, LOOPZD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 397.175 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Loopzd)(*#line 6030.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LOOPZD1left, LOOPZD1right), rest671)
end
|  ( 368, ( ( _, ( _, LOOPED1left, LOOPED1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 398.12 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Looped)(*#line 6034.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LOOPED1left, LOOPED1right), rest671)
end
|  ( 369, ( ( _, ( _, LOOPNZD1left, LOOPNZD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 398.53 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Loopnzd)(*#line 6038.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LOOPNZD1left, LOOPNZD1right), rest671)
end
|  ( 370, ( ( _, ( _, LOOPNED1left, LOOPNED1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 398.95 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Loopned)(*#line 6042.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LOOPNED1left, LOOPNED1right), rest671)
end
|  ( 371, ( ( _, ( _, MOVSX1left, MOVSX1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 398.135 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Movsx)(*#line 6046.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MOVSX1left, MOVSX1right), rest671)
end
|  ( 372, ( ( _, ( _, MOVZX1left, MOVZX1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 398.173 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Movzx)(*#line 6050.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MOVZX1left, MOVZX1right), rest671)
end
|  ( 373, ( ( _, ( _, OUTSD1left, OUTSD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 399.11 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Outsd)(*#line 6054.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, OUTSD1left, OUTSD1right), rest671)
end
|  ( 374, ( ( _, ( _, POPAD1left, POPAD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 399.49 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Popad)(*#line 6058.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, POPAD1left, POPAD1right), rest671)
end
|  ( 375, ( ( _, ( _, POPFD1left, POPFD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 399.87 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Popfd)(*#line 6062.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, POPFD1left, POPFD1right), rest671)
end
|  ( 376, ( ( _, ( _, PUSHAD1left, PUSHAD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 399.126 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Pushad)(*#line 6066.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PUSHAD1left, PUSHAD1right), rest671)
end
|  ( 377, ( ( _, ( _, PUSHFD1left, PUSHFD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 399.166 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Pushfd)(*#line 6070.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PUSHFD1left, PUSHFD1right), rest671)
end
|  ( 378, ( ( _, ( _, SCASD1left, SCASD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 400.11 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Scasd)(*#line 6074.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SCASD1left, SCASD1right), rest671)
end
|  ( 379, ( ( _, ( _, SETA1left, SETA1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 400.48 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Seta)(*#line 6078.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SETA1left, SETA1right), rest671)
end
|  ( 380, ( ( _, ( _, SETAE1left, SETAE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 400.86 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Setae)(*#line 6082.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SETAE1left, SETAE1right), rest671)
end
|  ( 381, ( ( _, ( _, SETB1left, SETB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 400.123 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Setb)(*#line 6086.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SETB1left, SETB1right), rest671)
end
|  ( 382, ( ( _, ( _, SETBE1left, SETBE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 400.160 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Setbe)(*#line 6090.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SETBE1left, SETBE1right), rest671)
end
|  ( 383, ( ( _, ( _, SETC1left, SETC1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 400.197 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Setc)(*#line 6094.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SETC1left, SETC1right), rest671)
end
|  ( 384, ( ( _, ( _, SETE1left, SETE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 401.10 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Sete)(*#line 6098.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SETE1left, SETE1right), rest671)
end
|  ( 385, ( ( _, ( _, SETG1left, SETG1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 401.46 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Setg)(*#line 6102.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SETG1left, SETG1right), rest671)
end
|  ( 386, ( ( _, ( _, SETGE1left, SETGE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 401.83 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Setge)(*#line 6106.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SETGE1left, SETGE1right), rest671)
end
|  ( 387, ( ( _, ( _, SETL1left, SETL1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 401.120 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Setl)(*#line 6110.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SETL1left, SETL1right), rest671)
end
|  ( 388, ( ( _, ( _, SETLE1left, SETLE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 401.157 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Setle)(*#line 6114.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SETLE1left, SETLE1right), rest671)
end
|  ( 389, ( ( _, ( _, SETNA1left, SETNA1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 401.195 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Setna)(*#line 6118.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SETNA1left, SETNA1right), rest671)
end
|  ( 390, ( ( _, ( _, SETNAE1left, SETNAE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 402.12 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Setnae)(*#line 6122.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SETNAE1left, SETNAE1right), rest671)
end
|  ( 391, ( ( _, ( _, SETNB1left, SETNB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 402.51 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Setnb)(*#line 6126.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SETNB1left, SETNB1right), rest671)
end
|  ( 392, ( ( _, ( _, SETNBE1left, SETNBE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 402.90 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Setnbe)(*#line 6130.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SETNBE1left, SETNBE1right), rest671)
end
|  ( 393, ( ( _, ( _, SETNC1left, SETNC1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 402.129 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Setnc)(*#line 6134.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SETNC1left, SETNC1right), rest671)
end
|  ( 394, ( ( _, ( _, SETNE1left, SETNE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 402.167 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Setne)(*#line 6138.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SETNE1left, SETNE1right), rest671)
end
|  ( 395, ( ( _, ( _, SETNG1left, SETNG1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 402.205 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Setng)(*#line 6142.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SETNG1left, SETNG1right), rest671)
end
|  ( 396, ( ( _, ( _, SETNGE1left, SETNGE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 403.12 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Setnge)(*#line 6146.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SETNGE1left, SETNGE1right), rest671)
end
|  ( 397, ( ( _, ( _, SETNL1left, SETNL1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 403.51 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Setnl)(*#line 6150.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SETNL1left, SETNL1right), rest671)
end
|  ( 398, ( ( _, ( _, SETNLE1left, SETNLE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 403.91 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Setnle)(*#line 6154.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SETNLE1left, SETNLE1right), rest671)
end
|  ( 399, ( ( _, ( _, SETNO1left, SETNO1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 403.130 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Setno)(*#line 6158.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SETNO1left, SETNO1right), rest671)
end
|  ( 400, ( ( _, ( _, SETNP1left, SETNP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 403.168 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Setnp)(*#line 6162.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SETNP1left, SETNP1right), rest671)
end
|  ( 401, ( ( _, ( _, SETNS1left, SETNS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 403.206 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Setns)(*#line 6166.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SETNS1left, SETNS1right), rest671)
end
|  ( 402, ( ( _, ( _, SETNZ1left, SETNZ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 404.11 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Setnz)(*#line 6170.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SETNZ1left, SETNZ1right), rest671)
end
|  ( 403, ( ( _, ( _, SETO1left, SETO1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 404.48 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Seto)(*#line 6174.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SETO1left, SETO1right), rest671)
end
|  ( 404, ( ( _, ( _, SETP1left, SETP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 404.84 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Setp)(*#line 6178.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SETP1left, SETP1right), rest671)
end
|  ( 405, ( ( _, ( _, SETPE1left, SETPE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 404.121 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Setpe)(*#line 6182.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SETPE1left, SETPE1right), rest671)
end
|  ( 406, ( ( _, ( _, SETPO1left, SETPO1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 404.159 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Setpo)(*#line 6186.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SETPO1left, SETPO1right), rest671)
end
|  ( 407, ( ( _, ( _, SETS1left, SETS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 404.196 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Sets)(*#line 6190.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SETS1left, SETS1right), rest671)
end
|  ( 408, ( ( _, ( _, SETZ1left, SETZ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 405.10 "InstructionSemantics.grm"*)(IMF_80386, IS_80386 Setz)(*#line 6194.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SETZ1left, SETZ1right), rest671)
end
|  ( 409, ( ( _, ( _, FCOS1left, FCOS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 407.9 "InstructionSemantics.grm"*)(IMF_80386_x87, IS_80386_x87 Fcos)(*#line 6198.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FCOS1left, FCOS1right), rest671)
end
|  ( 410, ( ( _, ( _, FLDENVD1left, FLDENVD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 407.56 "InstructionSemantics.grm"*)(IMF_80386_x87, IS_80386_x87 Fldenvd)(*#line 6202.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FLDENVD1left, FLDENVD1right), rest671)
end
|  ( 411, ( ( _, ( _, FSAVED1left, FSAVED1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 407.105 "InstructionSemantics.grm"*)(IMF_80386_x87, IS_80386_x87 Fsaved)(*#line 6206.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FSAVED1left, FSAVED1right), rest671)
end
|  ( 412, ( ( _, ( _, FSTENVD1left, FSTENVD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 407.154 "InstructionSemantics.grm"*)(IMF_80386_x87, IS_80386_x87 Fstenvd)(*#line 6210.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FSTENVD1left, FSTENVD1right), rest671)
end
|  ( 413, ( ( _, ( _, FPREM11left, FPREM11right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 407.203 "InstructionSemantics.grm"*)(IMF_80386_x87, IS_80386_x87 Fprem1)(*#line 6214.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FPREM11left, FPREM11right), rest671)
end
|  ( 414, ( ( _, ( _, FRSTORD1left, FRSTORD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 408.13 "InstructionSemantics.grm"*)(IMF_80386_x87, IS_80386_x87 Frstord)(*#line 6218.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FRSTORD1left, FRSTORD1right), rest671)
end
|  ( 415, ( ( _, ( _, FSIN1left, FSIN1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 408.60 "InstructionSemantics.grm"*)(IMF_80386_x87, IS_80386_x87 Fsin)(*#line 6222.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FSIN1left, FSIN1right), rest671)
end
|  ( 416, ( ( _, ( _, FSINCOS1left, FSINCOS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 408.107 "InstructionSemantics.grm"*)(IMF_80386_x87, IS_80386_x87 Fsincos)(*#line 6226.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FSINCOS1left, FSINCOS1right), rest671)
end
|  ( 417, ( ( _, ( _, FUCOM1left, FUCOM1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 408.155 "InstructionSemantics.grm"*)(IMF_80386_x87, IS_80386_x87 Fucom)(*#line 6230.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FUCOM1left, FUCOM1right), rest671)
end
|  ( 418, ( ( _, ( _, FUCOMP1left, FUCOMP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 409.12 "InstructionSemantics.grm"*)(IMF_80386_x87, IS_80386_x87 Fucomp)(*#line 6234.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FUCOMP1left, FUCOMP1right), rest671)
end
|  ( 419, ( ( _, ( _, FUCOMPP1left, FUCOMPP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 409.61 "InstructionSemantics.grm"*)(IMF_80386_x87, IS_80386_x87 Fucompp)(*#line 6238.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FUCOMPP1left, FUCOMPP1right), rest671)
end
|  ( 420, ( ( _, ( _, BSWAP1left, BSWAP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 411.10 "InstructionSemantics.grm"*)(IMF_80486, IS_80486 Bswap)(*#line 6242.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, BSWAP1left, BSWAP1right), rest671)
end
|  ( 421, ( ( _, ( _, CMPXCHG1left, CMPXCHG1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 411.50 "InstructionSemantics.grm"*)(IMF_80486, IS_80486 Cmpxchg)(*#line 6246.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMPXCHG1left, CMPXCHG1right), rest671)
end
|  ( 422, ( ( _, ( _, INVD1left, INVD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 411.89 "InstructionSemantics.grm"*)(IMF_80486, IS_80486 Invd)(*#line 6250.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, INVD1left, INVD1right), rest671)
end
|  ( 423, ( ( _, ( _, INVLPG1left, INVLPG1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 411.127 "InstructionSemantics.grm"*)(IMF_80486, IS_80486 Invlpg)(*#line 6254.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, INVLPG1left, INVLPG1right), rest671)
end
|  ( 424, ( ( _, ( _, WBINVD1left, WBINVD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 411.167 "InstructionSemantics.grm"*)(IMF_80486, IS_80486 Wbinvd)(*#line 6258.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, WBINVD1left, WBINVD1right), rest671)
end
|  ( 425, ( ( _, ( _, XADD1left, XADD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 411.205 "InstructionSemantics.grm"*)(IMF_80486, IS_80486 Xadd)(*#line 6262.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, XADD1left, XADD1right), rest671)
end
|  ( 426, ( ( _, ( _, CPUID1left, CPUID1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 413.10 "InstructionSemantics.grm"*)(IMF_Pentium, IS_Pentium Cpuid)(*#line 6266.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CPUID1left, CPUID1right), rest671)
end
|  ( 427, ( ( _, ( _, CMPXCHG8B1left, CMPXCHG8B1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 413.56 "InstructionSemantics.grm"*)(IMF_Pentium, IS_Pentium Cmpxchg8b)(*#line 6270.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMPXCHG8B1left, CMPXCHG8B1right), rest671)
end
|  ( 428, ( ( _, ( _, RDMSR1left, RDMSR1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 413.102 "InstructionSemantics.grm"*)(IMF_Pentium, IS_Pentium Rdmsr)(*#line 6274.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, RDMSR1left, RDMSR1right), rest671)
end
|  ( 429, ( ( _, ( _, RDTSC1left, RDTSC1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 413.144 "InstructionSemantics.grm"*)(IMF_Pentium, IS_Pentium Rdtsc)(*#line 6278.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, RDTSC1left, RDTSC1right), rest671)
end
|  ( 430, ( ( _, ( _, WRMSR1left, WRMSR1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 413.186 "InstructionSemantics.grm"*)(IMF_Pentium, IS_Pentium Wrmsr)(*#line 6282.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, WRMSR1left, WRMSR1right), rest671)
end
|  ( 431, ( ( _, ( _, RSM1left, RSM1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 414.9 "InstructionSemantics.grm"*)(IMF_Pentium, IS_Pentium Rsm)(*#line 6286.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, RSM1left, RSM1right), rest671)
end
|  ( 432, ( ( _, ( _, RDPMC1left, RDPMC1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 416.10 "InstructionSemantics.grm"*)(IMF_PentiumMMX, IS_PentiumMMX Rdpmc)(*#line 6290.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, RDPMC1left, RDPMC1right), rest671)
end
|  ( 433, ( ( _, ( _, EMMS1left, EMMS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 418.9 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Emms)(*#line 6294.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, EMMS1left, EMMS1right), rest671)
end
|  ( 434, ( ( _, ( _, MOVD1left, MOVD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 418.63 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Movd)(*#line 6298.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MOVD1left, MOVD1right), rest671)
end
|  ( 435, ( ( _, ( _, MOVQ1left, MOVQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 418.117 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Movq)(*#line 6302.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MOVQ1left, MOVQ1right), rest671)
end
|  ( 436, ( ( _, ( _, PACKSSDW1left, PACKSSDW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 418.175 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Packssdw)(*#line 6306.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PACKSSDW1left, PACKSSDW1right), rest671)
end
|  ( 437, ( ( _, ( _, PACKSSWB1left, PACKSSWB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 419.14 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Packsswb)(*#line 6310.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PACKSSWB1left, PACKSSWB1right), rest671)
end
|  ( 438, ( ( _, ( _, PACKUSWB1left, PACKUSWB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 419.76 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Packuswb)(*#line 6314.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PACKUSWB1left, PACKUSWB1right), rest671)
end
|  ( 439, ( ( _, ( _, PADDB1left, PADDB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 419.135 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Paddb)(*#line 6318.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PADDB1left, PADDB1right), rest671)
end
|  ( 440, ( ( _, ( _, PADDW1left, PADDW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 419.191 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Paddw)(*#line 6322.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PADDW1left, PADDW1right), rest671)
end
|  ( 441, ( ( _, ( _, PADDD1left, PADDD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 420.11 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Paddd)(*#line 6326.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PADDD1left, PADDD1right), rest671)
end
|  ( 442, ( ( _, ( _, PADDQ1left, PADDQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 420.67 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Paddq)(*#line 6330.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PADDQ1left, PADDQ1right), rest671)
end
|  ( 443, ( ( _, ( _, PADDSB1left, PADDSB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 420.124 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Paddsb)(*#line 6334.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PADDSB1left, PADDSB1right), rest671)
end
|  ( 444, ( ( _, ( _, PADDSW1left, PADDSW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 420.182 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Paddsw)(*#line 6338.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PADDSW1left, PADDSW1right), rest671)
end
|  ( 445, ( ( _, ( _, PADDUSB1left, PADDUSB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 421.13 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Paddusb)(*#line 6342.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PADDUSB1left, PADDUSB1right), rest671)
end
|  ( 446, ( ( _, ( _, PADDUSW1left, PADDUSW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 421.73 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Paddusw)(*#line 6346.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PADDUSW1left, PADDUSW1right), rest671)
end
|  ( 447, ( ( _, ( _, PAND1left, PAND1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 421.130 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Pand)(*#line 6350.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PAND1left, PAND1right), rest671)
end
|  ( 448, ( ( _, ( _, PANDN1left, PANDN1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 421.185 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Pandn)(*#line 6354.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PANDN1left, PANDN1right), rest671)
end
|  ( 449, ( ( _, ( _, POR1left, POR1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 422.9 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Por)(*#line 6358.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, POR1left, POR1right), rest671)
end
|  ( 450, ( ( _, ( _, PXOR1left, PXOR1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 422.62 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Pxor)(*#line 6362.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PXOR1left, PXOR1right), rest671)
end
|  ( 451, ( ( _, ( _, PCMPEQB1left, PCMPEQB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 422.119 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Pcmpeqb)(*#line 6366.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PCMPEQB1left, PCMPEQB1right), rest671)
end
|  ( 452, ( ( _, ( _, PCMPEQW1left, PCMPEQW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 422.179 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Pcmpeqw)(*#line 6370.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PCMPEQW1left, PCMPEQW1right), rest671)
end
|  ( 453, ( ( _, ( _, PCMPEQD1left, PCMPEQD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 423.13 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Pcmpeqd)(*#line 6374.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PCMPEQD1left, PCMPEQD1right), rest671)
end
|  ( 454, ( ( _, ( _, PCMPGTB1left, PCMPGTB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 423.73 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Pcmpgtb)(*#line 6378.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PCMPGTB1left, PCMPGTB1right), rest671)
end
|  ( 455, ( ( _, ( _, PCMPGTW1left, PCMPGTW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 423.133 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Pcmpgtw)(*#line 6382.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PCMPGTW1left, PCMPGTW1right), rest671)
end
|  ( 456, ( ( _, ( _, PCMPGTD1left, PCMPGTD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 423.193 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Pcmpgtd)(*#line 6386.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PCMPGTD1left, PCMPGTD1right), rest671)
end
|  ( 457, ( ( _, ( _, PMADDWD1left, PMADDWD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 424.13 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Pmaddwd)(*#line 6390.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PMADDWD1left, PMADDWD1right), rest671)
end
|  ( 458, ( ( _, ( _, PMULHW1left, PMULHW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 424.72 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Pmulhw)(*#line 6394.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PMULHW1left, PMULHW1right), rest671)
end
|  ( 459, ( ( _, ( _, PMULLW1left, PMULLW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 424.130 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Pmullw)(*#line 6398.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PMULLW1left, PMULLW1right), rest671)
end
|  ( 460, ( ( _, ( _, PSLLW1left, PSLLW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 424.187 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Psllw)(*#line 6402.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PSLLW1left, PSLLW1right), rest671)
end
|  ( 461, ( ( _, ( _, PSLLD1left, PSLLD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 425.11 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Pslld)(*#line 6406.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PSLLD1left, PSLLD1right), rest671)
end
|  ( 462, ( ( _, ( _, PSLLQ1left, PSLLQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 425.67 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Psllq)(*#line 6410.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PSLLQ1left, PSLLQ1right), rest671)
end
|  ( 463, ( ( _, ( _, PSRAD1left, PSRAD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 425.123 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Psrad)(*#line 6414.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PSRAD1left, PSRAD1right), rest671)
end
|  ( 464, ( ( _, ( _, PSRAW1left, PSRAW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 425.179 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Psraw)(*#line 6418.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PSRAW1left, PSRAW1right), rest671)
end
|  ( 465, ( ( _, ( _, PSRLW1left, PSRLW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 426.11 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Psrlw)(*#line 6422.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PSRLW1left, PSRLW1right), rest671)
end
|  ( 466, ( ( _, ( _, PSRLD1left, PSRLD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 426.67 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Psrld)(*#line 6426.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PSRLD1left, PSRLD1right), rest671)
end
|  ( 467, ( ( _, ( _, PSRLQ1left, PSRLQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 426.123 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Psrlq)(*#line 6430.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PSRLQ1left, PSRLQ1right), rest671)
end
|  ( 468, ( ( _, ( _, PSUBB1left, PSUBB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 426.179 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Psubb)(*#line 6434.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PSUBB1left, PSUBB1right), rest671)
end
|  ( 469, ( ( _, ( _, PSUBW1left, PSUBW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 427.11 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Psubw)(*#line 6438.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PSUBW1left, PSUBW1right), rest671)
end
|  ( 470, ( ( _, ( _, PSUBD1left, PSUBD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 427.67 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Psubd)(*#line 6442.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PSUBD1left, PSUBD1right), rest671)
end
|  ( 471, ( ( _, ( _, PSUBSB1left, PSUBSB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 427.124 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Psubsb)(*#line 6446.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PSUBSB1left, PSUBSB1right), rest671)
end
|  ( 472, ( ( _, ( _, PSUBSW1left, PSUBSW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 427.182 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Psubsw)(*#line 6450.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PSUBSW1left, PSUBSW1right), rest671)
end
|  ( 473, ( ( _, ( _, PSUBUSB1left, PSUBUSB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 428.13 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Psubusb)(*#line 6454.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PSUBUSB1left, PSUBUSB1right), rest671)
end
|  ( 474, ( ( _, ( _, PSUBUSW1left, PSUBUSW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 428.73 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Psubusw)(*#line 6458.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PSUBUSW1left, PSUBUSW1right), rest671)
end
|  ( 475, ( ( _, ( _, PUNPCKHBW1left, PUNPCKHBW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 428.135 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Punpckhbw)(*#line 6462.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PUNPCKHBW1left, PUNPCKHBW1right), rest671)
end
|  ( 476, ( ( _, ( _, PUNPCKHWD1left, PUNPCKHWD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 429.15 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Punpckhwd)(*#line 6466.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PUNPCKHWD1left, PUNPCKHWD1right), rest671)
end
|  ( 477, ( ( _, ( _, PUNPCKHDQ1left, PUNPCKHDQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 429.79 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Punpckhdq)(*#line 6470.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PUNPCKHDQ1left, PUNPCKHDQ1right), rest671)
end
|  ( 478, ( ( _, ( _, PUNPCKLBW1left, PUNPCKLBW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 429.143 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Punpcklbw)(*#line 6474.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PUNPCKLBW1left, PUNPCKLBW1right), rest671)
end
|  ( 479, ( ( _, ( _, PUNPCKLWD1left, PUNPCKLWD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 430.15 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Punpcklwd)(*#line 6478.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PUNPCKLWD1left, PUNPCKLWD1right), rest671)
end
|  ( 480, ( ( _, ( _, PUNPCKLDQ1left, PUNPCKLDQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 430.80 "InstructionSemantics.grm"*)(IMF_PentiumMMX_MMX, IS_PentiumMMX_MMX Punpckldq)(*#line 6482.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PUNPCKLDQ1left, PUNPCKLDQ1right), rest671)
end
|  ( 481, ( ( _, ( _, CMOVA1left, CMOVA1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 432.10 "InstructionSemantics.grm"*)(IMF_PentiumPro, IS_PentiumPro Cmova)(*#line 6486.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMOVA1left, CMOVA1right), rest671)
end
|  ( 482, ( ( _, ( _, CMOVAE1left, CMOVAE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 432.59 "InstructionSemantics.grm"*)(IMF_PentiumPro, IS_PentiumPro Cmovae)(*#line 6490.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMOVAE1left, CMOVAE1right), rest671)
end
|  ( 483, ( ( _, ( _, CMOVB1left, CMOVB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 432.108 "InstructionSemantics.grm"*)(IMF_PentiumPro, IS_PentiumPro Cmovb)(*#line 6494.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMOVB1left, CMOVB1right), rest671)
end
|  ( 484, ( ( _, ( _, CMOVBE1left, CMOVBE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 432.157 "InstructionSemantics.grm"*)(IMF_PentiumPro, IS_PentiumPro Cmovbe)(*#line 6498.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMOVBE1left, CMOVBE1right), rest671)
end
|  ( 485, ( ( _, ( _, CMOVC1left, CMOVC1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 432.206 "InstructionSemantics.grm"*)(IMF_PentiumPro, IS_PentiumPro Cmovc)(*#line 6502.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMOVC1left, CMOVC1right), rest671)
end
|  ( 486, ( ( _, ( _, CMOVE1left, CMOVE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 433.11 "InstructionSemantics.grm"*)(IMF_PentiumPro, IS_PentiumPro Cmove)(*#line 6506.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMOVE1left, CMOVE1right), rest671)
end
|  ( 487, ( ( _, ( _, CMOVG1left, CMOVG1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 433.59 "InstructionSemantics.grm"*)(IMF_PentiumPro, IS_PentiumPro Cmovg)(*#line 6510.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMOVG1left, CMOVG1right), rest671)
end
|  ( 488, ( ( _, ( _, CMOVGE1left, CMOVGE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 433.108 "InstructionSemantics.grm"*)(IMF_PentiumPro, IS_PentiumPro Cmovge)(*#line 6514.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMOVGE1left, CMOVGE1right), rest671)
end
|  ( 489, ( ( _, ( _, CMOVL1left, CMOVL1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 433.157 "InstructionSemantics.grm"*)(IMF_PentiumPro, IS_PentiumPro Cmovl)(*#line 6518.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMOVL1left, CMOVL1right), rest671)
end
|  ( 490, ( ( _, ( _, CMOVLE1left, CMOVLE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 433.206 "InstructionSemantics.grm"*)(IMF_PentiumPro, IS_PentiumPro Cmovle)(*#line 6522.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMOVLE1left, CMOVLE1right), rest671)
end
|  ( 491, ( ( _, ( _, CMOVNA1left, CMOVNA1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 434.12 "InstructionSemantics.grm"*)(IMF_PentiumPro, IS_PentiumPro Cmovna)(*#line 6526.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMOVNA1left, CMOVNA1right), rest671)
end
|  ( 492, ( ( _, ( _, CMOVNAE1left, CMOVNAE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 434.63 "InstructionSemantics.grm"*)(IMF_PentiumPro, IS_PentiumPro Cmovnae)(*#line 6530.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMOVNAE1left, CMOVNAE1right), rest671)
end
|  ( 493, ( ( _, ( _, CMOVNB1left, CMOVNB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 434.114 "InstructionSemantics.grm"*)(IMF_PentiumPro, IS_PentiumPro Cmovnb)(*#line 6534.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMOVNB1left, CMOVNB1right), rest671)
end
|  ( 494, ( ( _, ( _, CMOVNBE1left, CMOVNBE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 434.165 "InstructionSemantics.grm"*)(IMF_PentiumPro, IS_PentiumPro Cmovnbe)(*#line 6538.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMOVNBE1left, CMOVNBE1right), rest671)
end
|  ( 495, ( ( _, ( _, CMOVNC1left, CMOVNC1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 435.12 "InstructionSemantics.grm"*)(IMF_PentiumPro, IS_PentiumPro Cmovnc)(*#line 6542.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMOVNC1left, CMOVNC1right), rest671)
end
|  ( 496, ( ( _, ( _, CMOVNE1left, CMOVNE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 435.62 "InstructionSemantics.grm"*)(IMF_PentiumPro, IS_PentiumPro Cmovne)(*#line 6546.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMOVNE1left, CMOVNE1right), rest671)
end
|  ( 497, ( ( _, ( _, CMOVNG1left, CMOVNG1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 435.113 "InstructionSemantics.grm"*)(IMF_PentiumPro, IS_PentiumPro Cmovng)(*#line 6550.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMOVNG1left, CMOVNG1right), rest671)
end
|  ( 498, ( ( _, ( _, CMOVNGE1left, CMOVNGE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 435.164 "InstructionSemantics.grm"*)(IMF_PentiumPro, IS_PentiumPro Cmovnge)(*#line 6554.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMOVNGE1left, CMOVNGE1right), rest671)
end
|  ( 499, ( ( _, ( _, CMOVNL1left, CMOVNL1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 436.12 "InstructionSemantics.grm"*)(IMF_PentiumPro, IS_PentiumPro Cmovnl)(*#line 6558.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMOVNL1left, CMOVNL1right), rest671)
end
|  ( 500, ( ( _, ( _, CMOVNLE1left, CMOVNLE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 436.63 "InstructionSemantics.grm"*)(IMF_PentiumPro, IS_PentiumPro Cmovnle)(*#line 6562.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMOVNLE1left, CMOVNLE1right), rest671)
end
|  ( 501, ( ( _, ( _, CMOVNO1left, CMOVNO1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 436.114 "InstructionSemantics.grm"*)(IMF_PentiumPro, IS_PentiumPro Cmovno)(*#line 6566.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMOVNO1left, CMOVNO1right), rest671)
end
|  ( 502, ( ( _, ( _, CMOVNP1left, CMOVNP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 436.164 "InstructionSemantics.grm"*)(IMF_PentiumPro, IS_PentiumPro Cmovnp)(*#line 6570.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMOVNP1left, CMOVNP1right), rest671)
end
|  ( 503, ( ( _, ( _, CMOVNS1left, CMOVNS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 437.12 "InstructionSemantics.grm"*)(IMF_PentiumPro, IS_PentiumPro Cmovns)(*#line 6574.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMOVNS1left, CMOVNS1right), rest671)
end
|  ( 504, ( ( _, ( _, CMOVNZ1left, CMOVNZ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 437.62 "InstructionSemantics.grm"*)(IMF_PentiumPro, IS_PentiumPro Cmovnz)(*#line 6578.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMOVNZ1left, CMOVNZ1right), rest671)
end
|  ( 505, ( ( _, ( _, CMOVO1left, CMOVO1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 437.111 "InstructionSemantics.grm"*)(IMF_PentiumPro, IS_PentiumPro Cmovo)(*#line 6582.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMOVO1left, CMOVO1right), rest671)
end
|  ( 506, ( ( _, ( _, CMOVP1left, CMOVP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 437.159 "InstructionSemantics.grm"*)(IMF_PentiumPro, IS_PentiumPro Cmovp)(*#line 6586.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMOVP1left, CMOVP1right), rest671)
end
|  ( 507, ( ( _, ( _, CMOVPE1left, CMOVPE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 438.12 "InstructionSemantics.grm"*)(IMF_PentiumPro, IS_PentiumPro Cmovpe)(*#line 6590.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMOVPE1left, CMOVPE1right), rest671)
end
|  ( 508, ( ( _, ( _, CMOVPO1left, CMOVPO1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 438.62 "InstructionSemantics.grm"*)(IMF_PentiumPro, IS_PentiumPro Cmovpo)(*#line 6594.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMOVPO1left, CMOVPO1right), rest671)
end
|  ( 509, ( ( _, ( _, CMOVS1left, CMOVS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 438.111 "InstructionSemantics.grm"*)(IMF_PentiumPro, IS_PentiumPro Cmovs)(*#line 6598.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMOVS1left, CMOVS1right), rest671)
end
|  ( 510, ( ( _, ( _, CMOVZ1left, CMOVZ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 438.159 "InstructionSemantics.grm"*)(IMF_PentiumPro, IS_PentiumPro Cmovz)(*#line 6602.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMOVZ1left, CMOVZ1right), rest671)
end
|  ( 511, ( ( _, ( _, UD21left, UD21right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 438.205 "InstructionSemantics.grm"*)(IMF_PentiumPro, IS_PentiumPro Ud2)(*#line 6606.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, UD21left, UD21right), rest671)
end
|  ( 512, ( ( _, ( _, FCMOVB1left, FCMOVB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 440.11 "InstructionSemantics.grm"*)(IMF_PentiumPro_x87, IS_PentiumPro_x87 Fcmovb)(*#line 6610.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FCMOVB1left, FCMOVB1right), rest671)
end
|  ( 513, ( ( _, ( _, FCMOVBE1left, FCMOVBE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 440.70 "InstructionSemantics.grm"*)(IMF_PentiumPro_x87, IS_PentiumPro_x87 Fcmovbe)(*#line 6614.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FCMOVBE1left, FCMOVBE1right), rest671)
end
|  ( 514, ( ( _, ( _, FCMOVE1left, FCMOVE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 440.129 "InstructionSemantics.grm"*)(IMF_PentiumPro_x87, IS_PentiumPro_x87 Fcmove)(*#line 6618.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FCMOVE1left, FCMOVE1right), rest671)
end
|  ( 515, ( ( _, ( _, FCMOVNB1left, FCMOVNB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 440.188 "InstructionSemantics.grm"*)(IMF_PentiumPro_x87, IS_PentiumPro_x87 Fcmovnb)(*#line 6622.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FCMOVNB1left, FCMOVNB1right), rest671)
end
|  ( 516, ( ( _, ( _, FCMOVNBE1left, FCMOVNBE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 441.14 "InstructionSemantics.grm"*)(IMF_PentiumPro_x87, IS_PentiumPro_x87 Fcmovnbe)(*#line 6626.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FCMOVNBE1left, FCMOVNBE1right), rest671)
end
|  ( 517, ( ( _, ( _, FCMOVNE1left, FCMOVNE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 441.75 "InstructionSemantics.grm"*)(IMF_PentiumPro_x87, IS_PentiumPro_x87 Fcmovne)(*#line 6630.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FCMOVNE1left, FCMOVNE1right), rest671)
end
|  ( 518, ( ( _, ( _, FCMOVNU1left, FCMOVNU1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 441.135 "InstructionSemantics.grm"*)(IMF_PentiumPro_x87, IS_PentiumPro_x87 Fcmovnu)(*#line 6634.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FCMOVNU1left, FCMOVNU1right), rest671)
end
|  ( 519, ( ( _, ( _, FCMOVU1left, FCMOVU1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 441.194 "InstructionSemantics.grm"*)(IMF_PentiumPro_x87, IS_PentiumPro_x87 Fcmovu)(*#line 6638.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FCMOVU1left, FCMOVU1right), rest671)
end
|  ( 520, ( ( _, ( _, FCOMI1left, FCOMI1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 442.11 "InstructionSemantics.grm"*)(IMF_PentiumPro_x87, IS_PentiumPro_x87 Fcomi)(*#line 6642.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FCOMI1left, FCOMI1right), rest671)
end
|  ( 521, ( ( _, ( _, FCOMIP1left, FCOMIP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 442.68 "InstructionSemantics.grm"*)(IMF_PentiumPro_x87, IS_PentiumPro_x87 Fcomip)(*#line 6646.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FCOMIP1left, FCOMIP1right), rest671)
end
|  ( 522, ( ( _, ( _, FUCOMI1left, FUCOMI1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 442.126 "InstructionSemantics.grm"*)(IMF_PentiumPro_x87, IS_PentiumPro_x87 Fucomi)(*#line 6650.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FUCOMI1left, FUCOMI1right), rest671)
end
|  ( 523, ( ( _, ( _, FUCOMIP1left, FUCOMIP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 442.185 "InstructionSemantics.grm"*)(IMF_PentiumPro_x87, IS_PentiumPro_x87 Fucomip)(*#line 6654.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FUCOMIP1left, FUCOMIP1right), rest671)
end
|  ( 524, ( ( _, ( _, SYSENTER1left, SYSENTER1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 444.13 "InstructionSemantics.grm"*)(IMF_PentiumII, IS_PentiumII Sysenter)(*#line 6658.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SYSENTER1left, SYSENTER1right), rest671)
end
|  ( 525, ( ( _, ( _, SYSEXIT1left, SYSEXIT1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 444.64 "InstructionSemantics.grm"*)(IMF_PentiumII, IS_PentiumII Sysexit)(*#line 6662.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SYSEXIT1left, SYSEXIT1right), rest671)
end
|  ( 526, ( ( _, ( _, MASKMOVQ1left, MASKMOVQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 446.13 "InstructionSemantics.grm"*)(IMF_SSE, IS_SSE Maskmovq)(*#line 6666.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MASKMOVQ1left, MASKMOVQ1right), rest671)
end
|  ( 527, ( ( _, ( _, MOVNTQ1left, MOVNTQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 446.51 "InstructionSemantics.grm"*)(IMF_SSE, IS_SSE Movntq)(*#line 6670.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MOVNTQ1left, MOVNTQ1right), rest671)
end
|  ( 528, ( ( _, ( _, PREFETCHT01left, PREFETCHT01right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 446.91 "InstructionSemantics.grm"*)(IMF_SSE, IS_SSE Prefetcht0)(*#line 6674.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PREFETCHT01left, PREFETCHT01right), rest671)
end
|  ( 529, ( ( _, ( _, PREFETCHT11left, PREFETCHT11right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 446.135 "InstructionSemantics.grm"*)(IMF_SSE, IS_SSE Prefetcht1)(*#line 6678.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PREFETCHT11left, PREFETCHT11right), rest671)
end
|  ( 530, ( ( _, ( _, PREFETCHT21left, PREFETCHT21right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 447.16 "InstructionSemantics.grm"*)(IMF_SSE, IS_SSE Prefetcht2)(*#line 6682.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PREFETCHT21left, PREFETCHT21right), rest671)
end
|  ( 531, ( ( _, ( _, PREFETCHNTA1left, PREFETCHNTA1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 447.61 "InstructionSemantics.grm"*)(IMF_SSE, IS_SSE Prefetchnta)(*#line 6686.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PREFETCHNTA1left, PREFETCHNTA1right), rest671)
end
|  ( 532, ( ( _, ( _, SFENCE1left, SFENCE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 447.102 "InstructionSemantics.grm"*)(IMF_SSE, IS_SSE Sfence)(*#line 6690.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SFENCE1left, SFENCE1right), rest671)
end
|  ( 533, ( ( _, ( _, FXRSTOR1left, FXRSTOR1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 449.12 "InstructionSemantics.grm"*)(IMF_SSE_x87, IS_SSE_x87 Fxrstor)(*#line 6694.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FXRSTOR1left, FXRSTOR1right), rest671)
end
|  ( 534, ( ( _, ( _, FXSAVE1left, FXSAVE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 449.57 "InstructionSemantics.grm"*)(IMF_SSE_x87, IS_SSE_x87 Fxsave)(*#line 6698.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FXSAVE1left, FXSAVE1right), rest671)
end
|  ( 535, ( ( _, ( _, PSHUFW1left, PSHUFW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 451.11 "InstructionSemantics.grm"*)(IMF_SSE_SIMDMMX, IS_SSE_SIMDMMX Pshufw)(*#line 6702.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PSHUFW1left, PSHUFW1right), rest671)
end
|  ( 536, ( ( _, ( _, PINSRW1left, PINSRW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 451.63 "InstructionSemantics.grm"*)(IMF_SSE_SIMDMMX, IS_SSE_SIMDMMX Pinsrw)(*#line 6706.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PINSRW1left, PINSRW1right), rest671)
end
|  ( 537, ( ( _, ( _, PEXTRW1left, PEXTRW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 451.115 "InstructionSemantics.grm"*)(IMF_SSE_SIMDMMX, IS_SSE_SIMDMMX Pextrw)(*#line 6710.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PEXTRW1left, PEXTRW1right), rest671)
end
|  ( 538, ( ( _, ( _, PMOVMSKB1left, PMOVMSKB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 451.169 "InstructionSemantics.grm"*)(IMF_SSE_SIMDMMX, IS_SSE_SIMDMMX Pmovmskb)(*#line 6714.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PMOVMSKB1left, PMOVMSKB1right), rest671)
end
|  ( 539, ( ( _, ( _, PMINUB1left, PMINUB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 452.12 "InstructionSemantics.grm"*)(IMF_SSE_SIMDMMX, IS_SSE_SIMDMMX Pminub)(*#line 6718.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PMINUB1left, PMINUB1right), rest671)
end
|  ( 540, ( ( _, ( _, PMAXUB1left, PMAXUB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 452.64 "InstructionSemantics.grm"*)(IMF_SSE_SIMDMMX, IS_SSE_SIMDMMX Pmaxub)(*#line 6722.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PMAXUB1left, PMAXUB1right), rest671)
end
|  ( 541, ( ( _, ( _, PAVGB1left, PAVGB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 452.115 "InstructionSemantics.grm"*)(IMF_SSE_SIMDMMX, IS_SSE_SIMDMMX Pavgb)(*#line 6726.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PAVGB1left, PAVGB1right), rest671)
end
|  ( 542, ( ( _, ( _, PAVGW1left, PAVGW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 452.165 "InstructionSemantics.grm"*)(IMF_SSE_SIMDMMX, IS_SSE_SIMDMMX Pavgw)(*#line 6730.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PAVGW1left, PAVGW1right), rest671)
end
|  ( 543, ( ( _, ( _, PMULHUW1left, PMULHUW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 453.13 "InstructionSemantics.grm"*)(IMF_SSE_SIMDMMX, IS_SSE_SIMDMMX Pmulhuw)(*#line 6734.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PMULHUW1left, PMULHUW1right), rest671)
end
|  ( 544, ( ( _, ( _, PMINSW1left, PMINSW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 453.66 "InstructionSemantics.grm"*)(IMF_SSE_SIMDMMX, IS_SSE_SIMDMMX Pminsw)(*#line 6738.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PMINSW1left, PMINSW1right), rest671)
end
|  ( 545, ( ( _, ( _, PMAXSW1left, PMAXSW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 453.118 "InstructionSemantics.grm"*)(IMF_SSE_SIMDMMX, IS_SSE_SIMDMMX Pmaxsw)(*#line 6742.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PMAXSW1left, PMAXSW1right), rest671)
end
|  ( 546, ( ( _, ( _, PSADBW1left, PSADBW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 453.170 "InstructionSemantics.grm"*)(IMF_SSE_SIMDMMX, IS_SSE_SIMDMMX Psadbw)(*#line 6746.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PSADBW1left, PSADBW1right), rest671)
end
|  ( 547, ( ( _, ( _, ANDPS1left, ANDPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 455.9 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Andps)(*#line 6750.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, ANDPS1left, ANDPS1right), rest671)
end
|  ( 548, ( ( _, ( _, ANDNPS1left, ANDNPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 456.12 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Andnps)(*#line 6754.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, ANDNPS1left, ANDNPS1right), rest671)
end
|  ( 549, ( ( _, ( _, ORPS1left, ORPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 456.56 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Orps)(*#line 6758.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, ORPS1left, ORPS1right), rest671)
end
|  ( 550, ( ( _, ( _, XORPS1left, XORPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 456.99 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Xorps)(*#line 6762.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, XORPS1left, XORPS1right), rest671)
end
|  ( 551, ( ( _, ( _, MOVUPS1left, MOVUPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 456.144 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Movups)(*#line 6766.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MOVUPS1left, MOVUPS1right), rest671)
end
|  ( 552, ( ( _, ( _, MOVSS1left, MOVSS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 457.11 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Movss)(*#line 6770.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MOVSS1left, MOVSS1right), rest671)
end
|  ( 553, ( ( _, ( _, MOVHLPS1left, MOVHLPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 457.57 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Movhlps)(*#line 6774.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MOVHLPS1left, MOVHLPS1right), rest671)
end
|  ( 554, ( ( _, ( _, MOVLPS1left, MOVLPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 457.104 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Movlps)(*#line 6778.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MOVLPS1left, MOVLPS1right), rest671)
end
|  ( 555, ( ( _, ( _, UNPCKLPS1left, UNPCKLPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 457.152 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Unpcklps)(*#line 6782.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, UNPCKLPS1left, UNPCKLPS1right), rest671)
end
|  ( 556, ( ( _, ( _, UNPCKHPS1left, UNPCKHPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 458.14 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Unpckhps)(*#line 6786.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, UNPCKHPS1left, UNPCKHPS1right), rest671)
end
|  ( 557, ( ( _, ( _, MOVLHPS1left, MOVLHPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 458.63 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Movlhps)(*#line 6790.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MOVLHPS1left, MOVLHPS1right), rest671)
end
|  ( 558, ( ( _, ( _, MOVHPS1left, MOVHPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 458.110 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Movhps)(*#line 6794.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MOVHPS1left, MOVHPS1right), rest671)
end
|  ( 559, ( ( _, ( _, MOVAPS1left, MOVAPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 458.156 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Movaps)(*#line 6798.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MOVAPS1left, MOVAPS1right), rest671)
end
|  ( 560, ( ( _, ( _, MOVMSKPS1left, MOVMSKPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 459.14 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Movmskps)(*#line 6802.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MOVMSKPS1left, MOVMSKPS1right), rest671)
end
|  ( 561, ( ( _, ( _, CVTPI2PS1left, CVTPI2PS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 459.64 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Cvtpi2ps)(*#line 6806.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CVTPI2PS1left, CVTPI2PS1right), rest671)
end
|  ( 562, ( ( _, ( _, CVTSI2SS1left, CVTSI2SS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 459.114 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Cvtsi2ss)(*#line 6810.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CVTSI2SS1left, CVTSI2SS1right), rest671)
end
|  ( 563, ( ( _, ( _, MOVNTPS1left, MOVNTPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 459.163 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Movntps)(*#line 6814.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MOVNTPS1left, MOVNTPS1right), rest671)
end
|  ( 564, ( ( _, ( _, CVTTPS2PI1left, CVTTPS2PI1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 460.15 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Cvttps2pi)(*#line 6818.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CVTTPS2PI1left, CVTTPS2PI1right), rest671)
end
|  ( 565, ( ( _, ( _, CVTTSS2SI1left, CVTTSS2SI1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 460.67 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Cvttss2si)(*#line 6822.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CVTTSS2SI1left, CVTTSS2SI1right), rest671)
end
|  ( 566, ( ( _, ( _, CVTPS2PI1left, CVTPS2PI1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 460.119 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Cvtps2pi)(*#line 6826.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CVTPS2PI1left, CVTPS2PI1right), rest671)
end
|  ( 567, ( ( _, ( _, CVTSS2SI1left, CVTSS2SI1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 460.169 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Cvtss2si)(*#line 6830.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CVTSS2SI1left, CVTSS2SI1right), rest671)
end
|  ( 568, ( ( _, ( _, UCOMISS1left, UCOMISS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 461.13 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Ucomiss)(*#line 6834.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, UCOMISS1left, UCOMISS1right), rest671)
end
|  ( 569, ( ( _, ( _, COMISS1left, COMISS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 461.60 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Comiss)(*#line 6838.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, COMISS1left, COMISS1right), rest671)
end
|  ( 570, ( ( _, ( _, SQRTPS1left, SQRTPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 461.106 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Sqrtps)(*#line 6842.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SQRTPS1left, SQRTPS1right), rest671)
end
|  ( 571, ( ( _, ( _, SQRTSS1left, SQRTSS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 461.152 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Sqrtss)(*#line 6846.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SQRTSS1left, SQRTSS1right), rest671)
end
|  ( 572, ( ( _, ( _, RSQRTPS1left, RSQRTPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 462.13 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Rsqrtps)(*#line 6850.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, RSQRTPS1left, RSQRTPS1right), rest671)
end
|  ( 573, ( ( _, ( _, RSQRTSS1left, RSQRTSS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 462.61 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Rsqrtss)(*#line 6854.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, RSQRTSS1left, RSQRTSS1right), rest671)
end
|  ( 574, ( ( _, ( _, RCPPS1left, RCPPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 462.107 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Rcpps)(*#line 6858.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, RCPPS1left, RCPPS1right), rest671)
end
|  ( 575, ( ( _, ( _, RCPSS1left, RCPSS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 462.151 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Rcpss)(*#line 6862.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, RCPSS1left, RCPSS1right), rest671)
end
|  ( 576, ( ( _, ( _, ADDPS1left, ADDPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 463.11 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Addps)(*#line 6866.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, ADDPS1left, ADDPS1right), rest671)
end
|  ( 577, ( ( _, ( _, ADDSS1left, ADDSS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 463.55 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Addss)(*#line 6870.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, ADDSS1left, ADDSS1right), rest671)
end
|  ( 578, ( ( _, ( _, MULPS1left, MULPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 463.99 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Mulps)(*#line 6874.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MULPS1left, MULPS1right), rest671)
end
|  ( 579, ( ( _, ( _, MULSS1left, MULSS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 463.143 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Mulss)(*#line 6878.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MULSS1left, MULSS1right), rest671)
end
|  ( 580, ( ( _, ( _, SUBPS1left, SUBPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 463.187 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Subps)(*#line 6882.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SUBPS1left, SUBPS1right), rest671)
end
|  ( 581, ( ( _, ( _, SUBSS1left, SUBSS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 464.11 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Subss)(*#line 6886.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SUBSS1left, SUBSS1right), rest671)
end
|  ( 582, ( ( _, ( _, MINPS1left, MINPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 464.56 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Minps)(*#line 6890.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MINPS1left, MINPS1right), rest671)
end
|  ( 583, ( ( _, ( _, MINSS1left, MINSS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 464.100 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Minss)(*#line 6894.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MINSS1left, MINSS1right), rest671)
end
|  ( 584, ( ( _, ( _, DIVPS1left, DIVPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 464.144 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Divps)(*#line 6898.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, DIVPS1left, DIVPS1right), rest671)
end
|  ( 585, ( ( _, ( _, DIVSS1left, DIVSS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 465.11 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Divss)(*#line 6902.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, DIVSS1left, DIVSS1right), rest671)
end
|  ( 586, ( ( _, ( _, MAXPS1left, MAXPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 465.55 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Maxps)(*#line 6906.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MAXPS1left, MAXPS1right), rest671)
end
|  ( 587, ( ( _, ( _, MAXSS1left, MAXSS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 465.99 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Maxss)(*#line 6910.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MAXSS1left, MAXSS1right), rest671)
end
|  ( 588, ( ( _, ( _, LDMXCSR1left, LDMXCSR1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 465.145 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Ldmxcsr)(*#line 6914.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LDMXCSR1left, LDMXCSR1right), rest671)
end
|  ( 589, ( ( _, ( _, STMXCSR1left, STMXCSR1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 466.13 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Stmxcsr)(*#line 6918.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, STMXCSR1left, STMXCSR1right), rest671)
end
|  ( 590, ( ( _, ( _, CMPPS1left, CMPPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 466.59 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Cmpps)(*#line 6922.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMPPS1left, CMPPS1right), rest671)
end
|  ( 591, ( ( _, ( _, CMPSS1left, CMPSS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 466.103 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Cmpss)(*#line 6926.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMPSS1left, CMPSS1right), rest671)
end
|  ( 592, ( ( _, ( _, SHUFPS1left, SHUFPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 466.148 "InstructionSemantics.grm"*)(IMF_SSE_SIMD, IS_SSE_SIMD Shufps)(*#line 6930.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SHUFPS1left, SHUFPS1right), rest671)
end
|  ( 593, ( ( _, ( _, CLFLUSH1left, CLFLUSH1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 468.12 "InstructionSemantics.grm"*)(IMF_SSE2, IS_SSE2 Clflush)(*#line 6934.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CLFLUSH1left, CLFLUSH1right), rest671)
end
|  ( 594, ( ( _, ( _, LFENCE1left, LFENCE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 468.51 "InstructionSemantics.grm"*)(IMF_SSE2, IS_SSE2 Lfence)(*#line 6938.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LFENCE1left, LFENCE1right), rest671)
end
|  ( 595, ( ( _, ( _, MFENCE1left, MFENCE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 468.89 "InstructionSemantics.grm"*)(IMF_SSE2, IS_SSE2 Mfence)(*#line 6942.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MFENCE1left, MFENCE1right), rest671)
end
|  ( 596, ( ( _, ( _, MOVNTI1left, MOVNTI1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 468.127 "InstructionSemantics.grm"*)(IMF_SSE2, IS_SSE2 Movnti)(*#line 6946.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MOVNTI1left, MOVNTI1right), rest671)
end
|  ( 597, ( ( _, ( _, PAUSE1left, PAUSE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 468.164 "InstructionSemantics.grm"*)(IMF_SSE2, IS_SSE2 Pause)(*#line 6950.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PAUSE1left, PAUSE1right), rest671)
end
|  ( 598, ( ( _, ( _, PSUBQ1left, PSUBQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 470.10 "InstructionSemantics.grm"*)(IMF_SSE2_SIMDMMX, IS_SSE2_SIMDMMX Psubq)(*#line 6954.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PSUBQ1left, PSUBQ1right), rest671)
end
|  ( 599, ( ( _, ( _, PMULUDQ1left, PMULUDQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 470.64 "InstructionSemantics.grm"*)(IMF_SSE2_SIMDMMX, IS_SSE2_SIMDMMX Pmuludq)(*#line 6958.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PMULUDQ1left, PMULUDQ1right), rest671)
end
|  ( 600, ( ( _, ( _, MOVAPD1left, MOVAPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 472.11 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Movapd)(*#line 6962.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MOVAPD1left, MOVAPD1right), rest671)
end
|  ( 601, ( ( _, ( _, MOVNTPD1left, MOVNTPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 472.60 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Movntpd)(*#line 6966.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MOVNTPD1left, MOVNTPD1right), rest671)
end
|  ( 602, ( ( _, ( _, MOVHPD1left, MOVHPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 472.109 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Movhpd)(*#line 6970.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MOVHPD1left, MOVHPD1right), rest671)
end
|  ( 603, ( ( _, ( _, MOVLPD1left, MOVLPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 472.157 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Movlpd)(*#line 6974.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MOVLPD1left, MOVLPD1right), rest671)
end
|  ( 604, ( ( _, ( _, MOVUPD1left, MOVUPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 473.12 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Movupd)(*#line 6978.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MOVUPD1left, MOVUPD1right), rest671)
end
|  ( 605, ( ( _, ( _, MOVMSKPD1left, MOVMSKPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 473.62 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Movmskpd)(*#line 6982.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MOVMSKPD1left, MOVMSKPD1right), rest671)
end
|  ( 606, ( ( _, ( _, MOVSD1left, MOVSD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 473.111 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Movsd)(*#line 6986.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MOVSD1left, MOVSD1right), rest671)
end
|  ( 607, ( ( _, ( _, ADDPD1left, ADDPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 473.157 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Addpd)(*#line 6990.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, ADDPD1left, ADDPD1right), rest671)
end
|  ( 608, ( ( _, ( _, ADDSD1left, ADDSD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 474.11 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Addsd)(*#line 6994.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, ADDSD1left, ADDSD1right), rest671)
end
|  ( 609, ( ( _, ( _, DIVPD1left, DIVPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 474.57 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Divpd)(*#line 6998.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, DIVPD1left, DIVPD1right), rest671)
end
|  ( 610, ( ( _, ( _, DIVSD1left, DIVSD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 474.103 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Divsd)(*#line 7002.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, DIVSD1left, DIVSD1right), rest671)
end
|  ( 611, ( ( _, ( _, MAXPD1left, MAXPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 474.149 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Maxpd)(*#line 7006.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MAXPD1left, MAXPD1right), rest671)
end
|  ( 612, ( ( _, ( _, MAXSD1left, MAXSD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 474.195 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Maxsd)(*#line 7010.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MAXSD1left, MAXSD1right), rest671)
end
|  ( 613, ( ( _, ( _, MINPD1left, MINPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 475.11 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Minpd)(*#line 7014.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MINPD1left, MINPD1right), rest671)
end
|  ( 614, ( ( _, ( _, MINSD1left, MINSD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 475.57 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Minsd)(*#line 7018.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MINSD1left, MINSD1right), rest671)
end
|  ( 615, ( ( _, ( _, MULPD1left, MULPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 475.103 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Mulpd)(*#line 7022.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MULPD1left, MULPD1right), rest671)
end
|  ( 616, ( ( _, ( _, MULSD1left, MULSD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 475.149 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Mulsd)(*#line 7026.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MULSD1left, MULSD1right), rest671)
end
|  ( 617, ( ( _, ( _, SQRTPD1left, SQRTPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 475.197 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Sqrtpd)(*#line 7030.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SQRTPD1left, SQRTPD1right), rest671)
end
|  ( 618, ( ( _, ( _, SQRTSD1left, SQRTSD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 476.12 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Sqrtsd)(*#line 7034.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SQRTSD1left, SQRTSD1right), rest671)
end
|  ( 619, ( ( _, ( _, SUBPD1left, SUBPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 476.59 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Subpd)(*#line 7038.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SUBPD1left, SUBPD1right), rest671)
end
|  ( 620, ( ( _, ( _, SUBSD1left, SUBSD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 476.105 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Subsd)(*#line 7042.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SUBSD1left, SUBSD1right), rest671)
end
|  ( 621, ( ( _, ( _, ANDPD1left, ANDPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 476.151 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Andpd)(*#line 7046.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, ANDPD1left, ANDPD1right), rest671)
end
|  ( 622, ( ( _, ( _, ANDNPD1left, ANDNPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 476.198 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Andnpd)(*#line 7050.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, ANDNPD1left, ANDNPD1right), rest671)
end
|  ( 623, ( ( _, ( _, ORPD1left, ORPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 477.10 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Orpd)(*#line 7054.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, ORPD1left, ORPD1right), rest671)
end
|  ( 624, ( ( _, ( _, XORPD1left, XORPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 477.55 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Xorpd)(*#line 7058.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, XORPD1left, XORPD1right), rest671)
end
|  ( 625, ( ( _, ( _, CMPPD1left, CMPPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 477.101 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Cmppd)(*#line 7062.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMPPD1left, CMPPD1right), rest671)
end
|  ( 626, ( ( _, ( _, CMPSD1left, CMPSD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 477.147 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Cmpsd)(*#line 7066.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMPSD1left, CMPSD1right), rest671)
end
|  ( 627, ( ( _, ( _, COMISD1left, COMISD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 477.194 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Comisd)(*#line 7070.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, COMISD1left, COMISD1right), rest671)
end
|  ( 628, ( ( _, ( _, UCOMISD1left, UCOMISD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 478.13 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Ucomisd)(*#line 7074.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, UCOMISD1left, UCOMISD1right), rest671)
end
|  ( 629, ( ( _, ( _, SHUFPD1left, SHUFPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 478.62 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Shufpd)(*#line 7078.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SHUFPD1left, SHUFPD1right), rest671)
end
|  ( 630, ( ( _, ( _, UNPCKHPD1left, UNPCKHPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 478.112 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Unpckhpd)(*#line 7082.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, UNPCKHPD1left, UNPCKHPD1right), rest671)
end
|  ( 631, ( ( _, ( _, UNPCKLPD1left, UNPCKLPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 478.164 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Unpcklpd)(*#line 7086.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, UNPCKLPD1left, UNPCKLPD1right), rest671)
end
|  ( 632, ( ( _, ( _, CVTDQ2PD1left, CVTDQ2PD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 479.14 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Cvtdq2pd)(*#line 7090.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CVTDQ2PD1left, CVTDQ2PD1right), rest671)
end
|  ( 633, ( ( _, ( _, CVTDQ2PS1left, CVTDQ2PS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 479.67 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Cvtdq2ps)(*#line 7094.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CVTDQ2PS1left, CVTDQ2PS1right), rest671)
end
|  ( 634, ( ( _, ( _, CVTPD2DQ1left, CVTPD2DQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 479.119 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Cvtpd2dq)(*#line 7098.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CVTPD2DQ1left, CVTPD2DQ1right), rest671)
end
|  ( 635, ( ( _, ( _, CVTPD2PI1left, CVTPD2PI1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 479.171 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Cvtpd2pi)(*#line 7102.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CVTPD2PI1left, CVTPD2PI1right), rest671)
end
|  ( 636, ( ( _, ( _, CVTPD2PS1left, CVTPD2PS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 480.14 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Cvtpd2ps)(*#line 7106.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CVTPD2PS1left, CVTPD2PS1right), rest671)
end
|  ( 637, ( ( _, ( _, CVTPI2PD1left, CVTPI2PD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 480.66 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Cvtpi2pd)(*#line 7110.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CVTPI2PD1left, CVTPI2PD1right), rest671)
end
|  ( 638, ( ( _, ( _, CVTPS2DQ1left, CVTPS2DQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 480.118 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Cvtps2dq)(*#line 7114.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CVTPS2DQ1left, CVTPS2DQ1right), rest671)
end
|  ( 639, ( ( _, ( _, CVTPS2PD1left, CVTPS2PD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 480.170 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Cvtps2pd)(*#line 7118.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CVTPS2PD1left, CVTPS2PD1right), rest671)
end
|  ( 640, ( ( _, ( _, CVTSD2SI1left, CVTSD2SI1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 481.14 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Cvtsd2si)(*#line 7122.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CVTSD2SI1left, CVTSD2SI1right), rest671)
end
|  ( 641, ( ( _, ( _, CVTSD2SS1left, CVTSD2SS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 481.66 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Cvtsd2ss)(*#line 7126.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CVTSD2SS1left, CVTSD2SS1right), rest671)
end
|  ( 642, ( ( _, ( _, CVTSI2SD1left, CVTSI2SD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 481.118 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Cvtsi2sd)(*#line 7130.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CVTSI2SD1left, CVTSI2SD1right), rest671)
end
|  ( 643, ( ( _, ( _, CVTSS2SD1left, CVTSS2SD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 481.170 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Cvtss2sd)(*#line 7134.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CVTSS2SD1left, CVTSS2SD1right), rest671)
end
|  ( 644, ( ( _, ( _, CVTTPD2DQ1left, CVTTPD2DQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 482.15 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Cvttpd2dq)(*#line 7138.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CVTTPD2DQ1left, CVTTPD2DQ1right), rest671)
end
|  ( 645, ( ( _, ( _, CVTTPD2PI1left, CVTTPD2PI1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 482.69 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Cvttpd2pi)(*#line 7142.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CVTTPD2PI1left, CVTTPD2PI1right), rest671)
end
|  ( 646, ( ( _, ( _, CVTTPS2DQ1left, CVTTPS2DQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 482.124 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Cvttps2dq)(*#line 7146.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CVTTPS2DQ1left, CVTTPS2DQ1right), rest671)
end
|  ( 647, ( ( _, ( _, CVTTSD2SI1left, CVTTSD2SI1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 482.178 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Cvttsd2si)(*#line 7150.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CVTTSD2SI1left, CVTTSD2SI1right), rest671)
end
|  ( 648, ( ( _, ( _, MASKMOVDQU1left, MASKMOVDQU1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 483.16 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Maskmovdqu)(*#line 7154.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MASKMOVDQU1left, MASKMOVDQU1right), rest671)
end
|  ( 649, ( ( _, ( _, MOVDQ2Q1left, MOVDQ2Q1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 483.69 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Movdq2q)(*#line 7158.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MOVDQ2Q1left, MOVDQ2Q1right), rest671)
end
|  ( 650, ( ( _, ( _, MOVDQA1left, MOVDQA1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 483.118 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Movdqa)(*#line 7162.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MOVDQA1left, MOVDQA1right), rest671)
end
|  ( 651, ( ( _, ( _, MOVDQU1left, MOVDQU1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 483.166 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Movdqu)(*#line 7166.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MOVDQU1left, MOVDQU1right), rest671)
end
|  ( 652, ( ( _, ( _, MOVQ2DQ1left, MOVQ2DQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 483.215 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Movq2dq)(*#line 7170.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MOVQ2DQ1left, MOVQ2DQ1right), rest671)
end
|  ( 653, ( ( _, ( _, MOVNTDQ1left, MOVNTDQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 484.13 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Movntdq)(*#line 7174.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MOVNTDQ1left, MOVNTDQ1right), rest671)
end
|  ( 654, ( ( _, ( _, PSHUFHW1left, PSHUFHW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 484.63 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Pshufhw)(*#line 7178.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PSHUFHW1left, PSHUFHW1right), rest671)
end
|  ( 655, ( ( _, ( _, PSHUFLW1left, PSHUFLW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 484.113 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Pshuflw)(*#line 7182.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PSHUFLW1left, PSHUFLW1right), rest671)
end
|  ( 656, ( ( _, ( _, PSHUFD1left, PSHUFD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 484.162 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Pshufd)(*#line 7186.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PSHUFD1left, PSHUFD1right), rest671)
end
|  ( 657, ( ( _, ( _, PSLLDQ1left, PSLLDQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 485.12 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Pslldq)(*#line 7190.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PSLLDQ1left, PSLLDQ1right), rest671)
end
|  ( 658, ( ( _, ( _, PSRLDQ1left, PSRLDQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 485.60 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Psrldq)(*#line 7194.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PSRLDQ1left, PSRLDQ1right), rest671)
end
|  ( 659, ( ( _, ( _, PUNPCKHQDQ1left, PUNPCKHQDQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 485.112 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Punpckhqdq)(*#line 7198.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PUNPCKHQDQ1left, PUNPCKHQDQ1right), rest671)
end
|  ( 660, ( ( _, ( _, PUNPCKLQDQ1left, PUNPCKLQDQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 485.168 "InstructionSemantics.grm"*)(IMF_SSE2_SIMD, IS_SSE2_SIMD Punpcklqdq)(*#line 7202.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PUNPCKLQDQ1left, PUNPCKLQDQ1right), rest671)
end
|  ( 661, ( ( _, ( _, CDQE1left, CDQE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 487.9 "InstructionSemantics.grm"*)(IMF_X86_64, IS_X86_64 Cdqe)(*#line 7206.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CDQE1left, CDQE1right), rest671)
end
|  ( 662, ( ( _, ( _, CQO1left, CQO1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 487.46 "InstructionSemantics.grm"*)(IMF_X86_64, IS_X86_64 Cqo)(*#line 7210.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CQO1left, CQO1right), rest671)
end
|  ( 663, ( ( _, ( _, CMPSQ1left, CMPSQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 487.84 "InstructionSemantics.grm"*)(IMF_X86_64, IS_X86_64 Cmpsq)(*#line 7214.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMPSQ1left, CMPSQ1right), rest671)
end
|  ( 664, ( ( _, ( _, CMPXCHG16B1left, CMPXCHG16B1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 487.129 "InstructionSemantics.grm"*)(IMF_X86_64, IS_X86_64 Cmpxchg16b)(*#line 7218.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CMPXCHG16B1left, CMPXCHG16B1right), rest671)
end
|  ( 665, ( ( _, ( _, IRETQ1left, IRETQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 487.174 "InstructionSemantics.grm"*)(IMF_X86_64, IS_X86_64 Iretq)(*#line 7222.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, IRETQ1left, IRETQ1right), rest671)
end
|  ( 666, ( ( _, ( _, JRCXZ1left, JRCXZ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 488.11 "InstructionSemantics.grm"*)(IMF_X86_64, IS_X86_64 Jrcxz)(*#line 7226.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, JRCXZ1left, JRCXZ1right), rest671)
end
|  ( 667, ( ( _, ( _, LODSQ1left, LODSQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 488.51 "InstructionSemantics.grm"*)(IMF_X86_64, IS_X86_64 Lodsq)(*#line 7230.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LODSQ1left, LODSQ1right), rest671)
end
|  ( 668, ( ( _, ( _, MOVSXD1left, MOVSXD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 488.92 "InstructionSemantics.grm"*)(IMF_X86_64, IS_X86_64 Movsxd)(*#line 7234.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MOVSXD1left, MOVSXD1right), rest671)
end
|  ( 669, ( ( _, ( _, POPFQ1left, POPFQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 488.133 "InstructionSemantics.grm"*)(IMF_X86_64, IS_X86_64 Popfq)(*#line 7238.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, POPFQ1left, POPFQ1right), rest671)
end
|  ( 670, ( ( _, ( _, PUSHFQ1left, PUSHFQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 488.174 "InstructionSemantics.grm"*)(IMF_X86_64, IS_X86_64 Pushfq)(*#line 7242.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PUSHFQ1left, PUSHFQ1right), rest671)
end
|  ( 671, ( ( _, ( _, RDTSCP1left, RDTSCP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 489.12 "InstructionSemantics.grm"*)(IMF_X86_64, IS_X86_64 Rdtscp)(*#line 7246.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, RDTSCP1left, RDTSCP1right), rest671)
end
|  ( 672, ( ( _, ( _, SCASQ1left, SCASQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 489.53 "InstructionSemantics.grm"*)(IMF_X86_64, IS_X86_64 Scasq)(*#line 7250.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SCASQ1left, SCASQ1right), rest671)
end
|  ( 673, ( ( _, ( _, STOSQ1left, STOSQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 489.93 "InstructionSemantics.grm"*)(IMF_X86_64, IS_X86_64 Stosq)(*#line 7254.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, STOSQ1left, STOSQ1right), rest671)
end
|  ( 674, ( ( _, ( _, SWAPGS1left, SWAPGS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 489.134 "InstructionSemantics.grm"*)(IMF_X86_64, IS_X86_64 Swapgs)(*#line 7258.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SWAPGS1left, SWAPGS1right), rest671)
end
|  ( 675, ( ( _, ( _, MONITOR1left, MONITOR1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 491.12 "InstructionSemantics.grm"*)(IMF_SSE3, IS_SSE3 Monitor)(*#line 7262.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MONITOR1left, MONITOR1right), rest671)
end
|  ( 676, ( ( _, ( _, MWAIT1left, MWAIT1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 491.50 "InstructionSemantics.grm"*)(IMF_SSE3, IS_SSE3 Mwait)(*#line 7266.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MWAIT1left, MWAIT1right), rest671)
end
|  ( 677, ( ( _, ( _, FISTTP1left, FISTTP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 493.11 "InstructionSemantics.grm"*)(IMF_SSE3_x87, IS_SSE3_x87 Fisttp)(*#line 7270.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, FISTTP1left, FISTTP1right), rest671)
end
|  ( 678, ( ( _, ( _, ADDSUBPS1left, ADDSUBPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 495.13 "InstructionSemantics.grm"*)(IMF_SSE3_SIMD, IS_SSE3_SIMD Addsubps)(*#line 7274.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, ADDSUBPS1left, ADDSUBPS1right), rest671)
end
|  ( 679, ( ( _, ( _, ADDSUBPD1left, ADDSUBPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 495.65 "InstructionSemantics.grm"*)(IMF_SSE3_SIMD, IS_SSE3_SIMD Addsubpd)(*#line 7278.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, ADDSUBPD1left, ADDSUBPD1right), rest671)
end
|  ( 680, ( ( _, ( _, MOVDDUP1left, MOVDDUP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 495.116 "InstructionSemantics.grm"*)(IMF_SSE3_SIMD, IS_SSE3_SIMD Movddup)(*#line 7282.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MOVDDUP1left, MOVDDUP1right), rest671)
end
|  ( 681, ( ( _, ( _, MOVSLDUP1left, MOVSLDUP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 495.167 "InstructionSemantics.grm"*)(IMF_SSE3_SIMD, IS_SSE3_SIMD Movsldup)(*#line 7286.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MOVSLDUP1left, MOVSLDUP1right), rest671)
end
|  ( 682, ( ( _, ( _, MOVSHDUP1left, MOVSHDUP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 496.14 "InstructionSemantics.grm"*)(IMF_SSE3_SIMD, IS_SSE3_SIMD Movshdup)(*#line 7290.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MOVSHDUP1left, MOVSHDUP1right), rest671)
end
|  ( 683, ( ( _, ( _, HADDPS1left, HADDPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 496.64 "InstructionSemantics.grm"*)(IMF_SSE3_SIMD, IS_SSE3_SIMD Haddps)(*#line 7294.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, HADDPS1left, HADDPS1right), rest671)
end
|  ( 684, ( ( _, ( _, HADDPD1left, HADDPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 496.112 "InstructionSemantics.grm"*)(IMF_SSE3_SIMD, IS_SSE3_SIMD Haddpd)(*#line 7298.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, HADDPD1left, HADDPD1right), rest671)
end
|  ( 685, ( ( _, ( _, HSUBPS1left, HSUBPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 496.160 "InstructionSemantics.grm"*)(IMF_SSE3_SIMD, IS_SSE3_SIMD Hsubps)(*#line 7302.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, HSUBPS1left, HSUBPS1right), rest671)
end
|  ( 686, ( ( _, ( _, HSUBPD1left, HSUBPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 497.12 "InstructionSemantics.grm"*)(IMF_SSE3_SIMD, IS_SSE3_SIMD Hsubpd)(*#line 7306.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, HSUBPD1left, HSUBPD1right), rest671)
end
|  ( 687, ( ( _, ( _, LDDQU1left, LDDQU1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 497.59 "InstructionSemantics.grm"*)(IMF_SSE3_SIMD, IS_SSE3_SIMD Lddqu)(*#line 7310.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LDDQU1left, LDDQU1right), rest671)
end
|  ( 688, ( ( _, ( _, PSIGNB1left, PSIGNB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 499.11 "InstructionSemantics.grm"*)(IMF_SSSE3_SIMDMMX, IS_SSSE3_SIMDMMX Psignb)(*#line 7314.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PSIGNB1left, PSIGNB1right), rest671)
end
|  ( 689, ( ( _, ( _, PSIGNW1left, PSIGNW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 499.67 "InstructionSemantics.grm"*)(IMF_SSSE3_SIMDMMX, IS_SSSE3_SIMDMMX Psignw)(*#line 7318.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PSIGNW1left, PSIGNW1right), rest671)
end
|  ( 690, ( ( _, ( _, PSIGND1left, PSIGND1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 499.123 "InstructionSemantics.grm"*)(IMF_SSSE3_SIMDMMX, IS_SSSE3_SIMDMMX Psignd)(*#line 7322.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PSIGND1left, PSIGND1right), rest671)
end
|  ( 691, ( ( _, ( _, PSHUFB1left, PSHUFB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 499.179 "InstructionSemantics.grm"*)(IMF_SSSE3_SIMDMMX, IS_SSSE3_SIMDMMX Pshufb)(*#line 7326.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PSHUFB1left, PSHUFB1right), rest671)
end
|  ( 692, ( ( _, ( _, PMULHRSW1left, PMULHRSW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 500.14 "InstructionSemantics.grm"*)(IMF_SSSE3_SIMDMMX, IS_SSSE3_SIMDMMX Pmulhrsw)(*#line 7330.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PMULHRSW1left, PMULHRSW1right), rest671)
end
|  ( 693, ( ( _, ( _, PMADDUBSW1left, PMADDUBSW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 500.75 "InstructionSemantics.grm"*)(IMF_SSSE3_SIMDMMX, IS_SSSE3_SIMDMMX Pmaddubsw)(*#line 7334.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PMADDUBSW1left, PMADDUBSW1right), rest671)
end
|  ( 694, ( ( _, ( _, PHSUBW1left, PHSUBW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 500.134 "InstructionSemantics.grm"*)(IMF_SSSE3_SIMDMMX, IS_SSSE3_SIMDMMX Phsubw)(*#line 7338.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PHSUBW1left, PHSUBW1right), rest671)
end
|  ( 695, ( ( _, ( _, PHSUBSW1left, PHSUBSW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 500.191 "InstructionSemantics.grm"*)(IMF_SSSE3_SIMDMMX, IS_SSSE3_SIMDMMX Phsubsw)(*#line 7342.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PHSUBSW1left, PHSUBSW1right), rest671)
end
|  ( 696, ( ( _, ( _, PHSUBD1left, PHSUBD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 501.12 "InstructionSemantics.grm"*)(IMF_SSSE3_SIMDMMX, IS_SSSE3_SIMDMMX Phsubd)(*#line 7346.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PHSUBD1left, PHSUBD1right), rest671)
end
|  ( 697, ( ( _, ( _, PHADDSW1left, PHADDSW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 501.69 "InstructionSemantics.grm"*)(IMF_SSSE3_SIMDMMX, IS_SSSE3_SIMDMMX Phaddsw)(*#line 7350.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PHADDSW1left, PHADDSW1right), rest671)
end
|  ( 698, ( ( _, ( _, PHADDW1left, PHADDW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 501.126 "InstructionSemantics.grm"*)(IMF_SSSE3_SIMDMMX, IS_SSSE3_SIMDMMX Phaddw)(*#line 7354.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PHADDW1left, PHADDW1right), rest671)
end
|  ( 699, ( ( _, ( _, PHADDD1left, PHADDD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 501.182 "InstructionSemantics.grm"*)(IMF_SSSE3_SIMDMMX, IS_SSSE3_SIMDMMX Phaddd)(*#line 7358.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PHADDD1left, PHADDD1right), rest671)
end
|  ( 700, ( ( _, ( _, PALIGNR1left, PALIGNR1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 502.13 "InstructionSemantics.grm"*)(IMF_SSSE3_SIMDMMX, IS_SSSE3_SIMDMMX Palignr)(*#line 7362.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PALIGNR1left, PALIGNR1right), rest671)
end
|  ( 701, ( ( _, ( _, PABSB1left, PABSB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 502.69 "InstructionSemantics.grm"*)(IMF_SSSE3_SIMDMMX, IS_SSSE3_SIMDMMX Pabsb)(*#line 7366.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PABSB1left, PABSB1right), rest671)
end
|  ( 702, ( ( _, ( _, PABSW1left, PABSW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 502.123 "InstructionSemantics.grm"*)(IMF_SSSE3_SIMDMMX, IS_SSSE3_SIMDMMX Pabsw)(*#line 7370.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PABSW1left, PABSW1right), rest671)
end
|  ( 703, ( ( _, ( _, PABSD1left, PABSD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 502.177 "InstructionSemantics.grm"*)(IMF_SSSE3_SIMDMMX, IS_SSSE3_SIMDMMX Pabsd)(*#line 7374.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PABSD1left, PABSD1right), rest671)
end
|  ( 704, ( ( _, ( _, DPPS1left, DPPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 504.9 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Dpps)(*#line 7378.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, DPPS1left, DPPS1right), rest671)
end
|  ( 705, ( ( _, ( _, DPPD1left, DPPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 504.57 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Dppd)(*#line 7382.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, DPPD1left, DPPD1right), rest671)
end
|  ( 706, ( ( _, ( _, BLENDPS1left, BLENDPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 504.108 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Blendps)(*#line 7386.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, BLENDPS1left, BLENDPS1right), rest671)
end
|  ( 707, ( ( _, ( _, BLENDVPS1left, BLENDVPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 504.163 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Blendvps)(*#line 7390.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, BLENDVPS1left, BLENDVPS1right), rest671)
end
|  ( 708, ( ( _, ( _, BLENDPD1left, BLENDPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 505.13 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Blendpd)(*#line 7394.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, BLENDPD1left, BLENDPD1right), rest671)
end
|  ( 709, ( ( _, ( _, BLENDVPD1left, BLENDVPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 505.68 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Blendvpd)(*#line 7398.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, BLENDVPD1left, BLENDVPD1right), rest671)
end
|  ( 710, ( ( _, ( _, ROUNDPS1left, ROUNDPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 505.123 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Roundps)(*#line 7402.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, ROUNDPS1left, ROUNDPS1right), rest671)
end
|  ( 711, ( ( _, ( _, ROUNDSS1left, ROUNDSS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 505.177 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Roundss)(*#line 7406.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, ROUNDSS1left, ROUNDSS1right), rest671)
end
|  ( 712, ( ( _, ( _, ROUNDPD1left, ROUNDPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 506.13 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Roundpd)(*#line 7410.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, ROUNDPD1left, ROUNDPD1right), rest671)
end
|  ( 713, ( ( _, ( _, ROUNDSD1left, ROUNDSD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 506.67 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Roundsd)(*#line 7414.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, ROUNDSD1left, ROUNDSD1right), rest671)
end
|  ( 714, ( ( _, ( _, INSERTPS1left, INSERTPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 506.122 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Insertps)(*#line 7418.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, INSERTPS1left, INSERTPS1right), rest671)
end
|  ( 715, ( ( _, ( _, EXTRACTPS1left, EXTRACTPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 506.179 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Extractps)(*#line 7422.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, EXTRACTPS1left, EXTRACTPS1right), rest671)
end
|  ( 716, ( ( _, ( _, MPSADBW1left, MPSADBW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 507.13 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Mpsadbw)(*#line 7426.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MPSADBW1left, MPSADBW1right), rest671)
end
|  ( 717, ( ( _, ( _, PHMINPOSUW1left, PHMINPOSUW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 507.70 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Phminposuw)(*#line 7430.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PHMINPOSUW1left, PHMINPOSUW1right), rest671)
end
|  ( 718, ( ( _, ( _, PMULLD1left, PMULLD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 507.127 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Pmulld)(*#line 7434.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PMULLD1left, PMULLD1right), rest671)
end
|  ( 719, ( ( _, ( _, PMULDQ1left, PMULDQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 507.179 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Pmuldq)(*#line 7438.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PMULDQ1left, PMULDQ1right), rest671)
end
|  ( 720, ( ( _, ( _, PBLENDVB1left, PBLENDVB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 508.14 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Pblendvb)(*#line 7442.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PBLENDVB1left, PBLENDVB1right), rest671)
end
|  ( 721, ( ( _, ( _, PBLENDW1left, PBLENDW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 508.69 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Pblendw)(*#line 7446.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PBLENDW1left, PBLENDW1right), rest671)
end
|  ( 722, ( ( _, ( _, PMINSB1left, PMINSB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 508.122 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Pminsb)(*#line 7450.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PMINSB1left, PMINSB1right), rest671)
end
|  ( 723, ( ( _, ( _, PMINUW1left, PMINUW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 508.174 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Pminuw)(*#line 7454.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PMINUW1left, PMINUW1right), rest671)
end
|  ( 724, ( ( _, ( _, PMINSD1left, PMINSD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 509.12 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Pminsd)(*#line 7458.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PMINSD1left, PMINSD1right), rest671)
end
|  ( 725, ( ( _, ( _, PMINUD1left, PMINUD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 509.64 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Pminud)(*#line 7462.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PMINUD1left, PMINUD1right), rest671)
end
|  ( 726, ( ( _, ( _, PMAXSB1left, PMAXSB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 509.116 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Pmaxsb)(*#line 7466.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PMAXSB1left, PMAXSB1right), rest671)
end
|  ( 727, ( ( _, ( _, PMAXUW1left, PMAXUW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 509.168 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Pmaxuw)(*#line 7470.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PMAXUW1left, PMAXUW1right), rest671)
end
|  ( 728, ( ( _, ( _, PMAXSD1left, PMAXSD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 510.12 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Pmaxsd)(*#line 7474.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PMAXSD1left, PMAXSD1right), rest671)
end
|  ( 729, ( ( _, ( _, PMAXUD1left, PMAXUD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 510.64 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Pmaxud)(*#line 7478.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PMAXUD1left, PMAXUD1right), rest671)
end
|  ( 730, ( ( _, ( _, PINSRB1left, PINSRB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 510.116 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Pinsrb)(*#line 7482.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PINSRB1left, PINSRB1right), rest671)
end
|  ( 731, ( ( _, ( _, PINSRD1left, PINSRD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 510.168 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Pinsrd)(*#line 7486.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PINSRD1left, PINSRD1right), rest671)
end
|  ( 732, ( ( _, ( _, PINSRQ1left, PINSRQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 511.12 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Pinsrq)(*#line 7490.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PINSRQ1left, PINSRQ1right), rest671)
end
|  ( 733, ( ( _, ( _, PEXTRB1left, PEXTRB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 511.64 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Pextrb)(*#line 7494.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PEXTRB1left, PEXTRB1right), rest671)
end
|  ( 734, ( ( _, ( _, PEXTRD1left, PEXTRD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 511.116 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Pextrd)(*#line 7498.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PEXTRD1left, PEXTRD1right), rest671)
end
|  ( 735, ( ( _, ( _, PEXTRQ1left, PEXTRQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 512.12 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Pextrq)(*#line 7502.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PEXTRQ1left, PEXTRQ1right), rest671)
end
|  ( 736, ( ( _, ( _, PMOVSXBW1left, PMOVSXBW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 512.66 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Pmovsxbw)(*#line 7506.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PMOVSXBW1left, PMOVSXBW1right), rest671)
end
|  ( 737, ( ( _, ( _, PMOVZXBW1left, PMOVZXBW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 512.122 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Pmovzxbw)(*#line 7510.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PMOVZXBW1left, PMOVZXBW1right), rest671)
end
|  ( 738, ( ( _, ( _, PMOVSXBD1left, PMOVSXBD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 512.178 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Pmovsxbd)(*#line 7514.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PMOVSXBD1left, PMOVSXBD1right), rest671)
end
|  ( 739, ( ( _, ( _, PMOVZXBD1left, PMOVZXBD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 513.14 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Pmovzxbd)(*#line 7518.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PMOVZXBD1left, PMOVZXBD1right), rest671)
end
|  ( 740, ( ( _, ( _, PMOVSXBQ1left, PMOVSXBQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 513.70 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Pmovsxbq)(*#line 7522.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PMOVSXBQ1left, PMOVSXBQ1right), rest671)
end
|  ( 741, ( ( _, ( _, PMOVZXBQ1left, PMOVZXBQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 513.126 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Pmovzxbq)(*#line 7526.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PMOVZXBQ1left, PMOVZXBQ1right), rest671)
end
|  ( 742, ( ( _, ( _, PMOVSXWD1left, PMOVSXWD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 513.182 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Pmovsxwd)(*#line 7530.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PMOVSXWD1left, PMOVSXWD1right), rest671)
end
|  ( 743, ( ( _, ( _, PMOVZXWD1left, PMOVZXWD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 514.14 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Pmovzxwd)(*#line 7534.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PMOVZXWD1left, PMOVZXWD1right), rest671)
end
|  ( 744, ( ( _, ( _, PMOVSXWQ1left, PMOVSXWQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 514.70 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Pmovsxwq)(*#line 7538.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PMOVSXWQ1left, PMOVSXWQ1right), rest671)
end
|  ( 745, ( ( _, ( _, PMOVZXWQ1left, PMOVZXWQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 514.126 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Pmovzxwq)(*#line 7542.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PMOVZXWQ1left, PMOVZXWQ1right), rest671)
end
|  ( 746, ( ( _, ( _, PMOVSXDQ1left, PMOVSXDQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 514.183 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Pmovsxdq)(*#line 7546.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PMOVSXDQ1left, PMOVSXDQ1right), rest671)
end
|  ( 747, ( ( _, ( _, PMOVZXDQ1left, PMOVZXDQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 515.14 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Pmovzxdq)(*#line 7550.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PMOVZXDQ1left, PMOVZXDQ1right), rest671)
end
|  ( 748, ( ( _, ( _, PTEST1left, PTEST1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 515.67 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Ptest)(*#line 7554.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PTEST1left, PTEST1right), rest671)
end
|  ( 749, ( ( _, ( _, PCMPEQQ1left, PCMPEQQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 515.119 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Pcmpeqq)(*#line 7558.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PCMPEQQ1left, PCMPEQQ1right), rest671)
end
|  ( 750, ( ( _, ( _, PACKUSDW1left, PACKUSDW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 515.174 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Packusdw)(*#line 7562.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PACKUSDW1left, PACKUSDW1right), rest671)
end
|  ( 751, ( ( _, ( _, MOVNTDQA1left, MOVNTDQA1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 516.14 "InstructionSemantics.grm"*)(IMF_SSE4_1_SIMD, IS_SSE4_1_SIMD Movntdqa)(*#line 7566.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MOVNTDQA1left, MOVNTDQA1right), rest671)
end
|  ( 752, ( ( _, ( _, VMPTRLD1left, VMPTRLD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 518.12 "InstructionSemantics.grm"*)(IMF_VT_X, IS_VT_X Vmptrld)(*#line 7570.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMPTRLD1left, VMPTRLD1right), rest671)
end
|  ( 753, ( ( _, ( _, VMPTRST1left, VMPTRST1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 518.52 "InstructionSemantics.grm"*)(IMF_VT_X, IS_VT_X Vmptrst)(*#line 7574.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMPTRST1left, VMPTRST1right), rest671)
end
|  ( 754, ( ( _, ( _, VMCLEAR1left, VMCLEAR1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 518.92 "InstructionSemantics.grm"*)(IMF_VT_X, IS_VT_X Vmclear)(*#line 7578.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMCLEAR1left, VMCLEAR1right), rest671)
end
|  ( 755, ( ( _, ( _, VMREAD1left, VMREAD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 518.131 "InstructionSemantics.grm"*)(IMF_VT_X, IS_VT_X Vmread)(*#line 7582.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMREAD1left, VMREAD1right), rest671)
end
|  ( 756, ( ( _, ( _, VMWRITE1left, VMWRITE1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 518.170 "InstructionSemantics.grm"*)(IMF_VT_X, IS_VT_X Vmwrite)(*#line 7586.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMWRITE1left, VMWRITE1right), rest671)
end
|  ( 757, ( ( _, ( _, VMCALL1left, VMCALL1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 519.12 "InstructionSemantics.grm"*)(IMF_VT_X, IS_VT_X Vmcall)(*#line 7590.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMCALL1left, VMCALL1right), rest671)
end
|  ( 758, ( ( _, ( _, VMLAUNCH1left, VMLAUNCH1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 519.52 "InstructionSemantics.grm"*)(IMF_VT_X, IS_VT_X Vmlaunch)(*#line 7594.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMLAUNCH1left, VMLAUNCH1right), rest671)
end
|  ( 759, ( ( _, ( _, VMRESUME1left, VMRESUME1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 519.94 "InstructionSemantics.grm"*)(IMF_VT_X, IS_VT_X Vmresume)(*#line 7598.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMRESUME1left, VMRESUME1right), rest671)
end
|  ( 760, ( ( _, ( _, VMXOFF1left, VMXOFF1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 519.134 "InstructionSemantics.grm"*)(IMF_VT_X, IS_VT_X Vmxoff)(*#line 7602.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMXOFF1left, VMXOFF1right), rest671)
end
|  ( 761, ( ( _, ( _, VMXON1left, VMXON1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 519.171 "InstructionSemantics.grm"*)(IMF_VT_X, IS_VT_X Vmxon)(*#line 7606.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMXON1left, VMXON1right), rest671)
end
|  ( 762, ( ( _, ( _, VMFUNC1left, VMFUNC1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 520.12 "InstructionSemantics.grm"*)(IMF_VT_X, IS_VT_X Vmfunc)(*#line 7610.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMFUNC1left, VMFUNC1right), rest671)
end
|  ( 763, ( ( _, ( _, INVVPID1left, INVVPID1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 520.51 "InstructionSemantics.grm"*)(IMF_VT_X, IS_VT_X Invvpid)(*#line 7614.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, INVVPID1left, INVVPID1right), rest671)
end
|  ( 764, ( ( _, ( _, INVEPT1left, INVEPT1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 520.90 "InstructionSemantics.grm"*)(IMF_VT_X, IS_VT_X Invvpid)(*#line 7618.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, INVEPT1left, INVEPT1right), rest671)
end
|  ( 765, ( ( _, ( _, CRC321left, CRC321right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 522.10 "InstructionSemantics.grm"*)(IMF_SSE4_2, IS_SSE4_2 Crc32)(*#line 7622.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, CRC321left, CRC321right), rest671)
end
|  ( 766, ( ( _, ( _, POPCNT1left, POPCNT1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 522.51 "InstructionSemantics.grm"*)(IMF_SSE4_2, IS_SSE4_2 Popcnt)(*#line 7626.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, POPCNT1left, POPCNT1right), rest671)
end
|  ( 767, ( ( _, ( _, PCMPESTRI1left, PCMPESTRI1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 524.14 "InstructionSemantics.grm"*)(IMF_SSE4_2_SIMD, IS_SSE4_2_SIMD Pcmpestri)(*#line 7630.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PCMPESTRI1left, PCMPESTRI1right), rest671)
end
|  ( 768, ( ( _, ( _, PCMPESTRM1left, PCMPESTRM1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 524.72 "InstructionSemantics.grm"*)(IMF_SSE4_2_SIMD, IS_SSE4_2_SIMD Pcmpestrm)(*#line 7634.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PCMPESTRM1left, PCMPESTRM1right), rest671)
end
|  ( 769, ( ( _, ( _, PCMPISTRI1left, PCMPISTRI1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 524.130 "InstructionSemantics.grm"*)(IMF_SSE4_2_SIMD, IS_SSE4_2_SIMD Pcmpistri)(*#line 7638.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PCMPISTRI1left, PCMPISTRI1right), rest671)
end
|  ( 770, ( ( _, ( _, PCMPISTRM1left, PCMPISTRM1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 524.188 "InstructionSemantics.grm"*)(IMF_SSE4_2_SIMD, IS_SSE4_2_SIMD Pcmpistrm)(*#line 7642.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PCMPISTRM1left, PCMPISTRM1right), rest671)
end
|  ( 771, ( ( _, ( _, PCMPGTQ1left, PCMPGTQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 525.13 "InstructionSemantics.grm"*)(IMF_SSE4_2_SIMD, IS_SSE4_2_SIMD Pcmpgtq)(*#line 7646.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PCMPGTQ1left, PCMPGTQ1right), rest671)
end
|  ( 772, ( ( _, ( _, VSQRTPS1left, VSQRTPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 527.12 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vsqrtps)(*#line 7650.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VSQRTPS1left, VSQRTPS1right), rest671)
end
|  ( 773, ( ( _, ( _, VSQRTPD1left, VSQRTPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 527.50 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vsqrtpd)(*#line 7654.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VSQRTPD1left, VSQRTPD1right), rest671)
end
|  ( 774, ( ( _, ( _, VRSQRTPS1left, VRSQRTPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 527.89 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vrsqrtps)(*#line 7658.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VRSQRTPS1left, VRSQRTPS1right), rest671)
end
|  ( 775, ( ( _, ( _, VRCPPS1left, VRCPPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 527.127 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vrcpps)(*#line 7662.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VRCPPS1left, VRCPPS1right), rest671)
end
|  ( 776, ( ( _, ( _, VADDPS1left, VADDPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 527.163 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vaddps)(*#line 7666.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VADDPS1left, VADDPS1right), rest671)
end
|  ( 777, ( ( _, ( _, VADDPD1left, VADDPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 528.12 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vaddpd)(*#line 7670.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VADDPD1left, VADDPD1right), rest671)
end
|  ( 778, ( ( _, ( _, VSUBPS1left, VSUBPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 528.48 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vsubps)(*#line 7674.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VSUBPS1left, VSUBPS1right), rest671)
end
|  ( 779, ( ( _, ( _, VSUBPD1left, VSUBPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 528.84 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vsubpd)(*#line 7678.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VSUBPD1left, VSUBPD1right), rest671)
end
|  ( 780, ( ( _, ( _, VMULPS1left, VMULPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 528.120 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vmulps)(*#line 7682.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMULPS1left, VMULPS1right), rest671)
end
|  ( 781, ( ( _, ( _, VMULPD1left, VMULPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 528.156 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vmulpd)(*#line 7686.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMULPD1left, VMULPD1right), rest671)
end
|  ( 782, ( ( _, ( _, VDIVPS1left, VDIVPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 529.12 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vdivps)(*#line 7690.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VDIVPS1left, VDIVPS1right), rest671)
end
|  ( 783, ( ( _, ( _, VDIVPD1left, VDIVPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 529.48 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vdivpd)(*#line 7694.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VDIVPD1left, VDIVPD1right), rest671)
end
|  ( 784, ( ( _, ( _, VCVTPS2PD1left, VCVTPS2PD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 529.87 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vcvtps2pd)(*#line 7698.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VCVTPS2PD1left, VCVTPS2PD1right), rest671)
end
|  ( 785, ( ( _, ( _, VCVTPD2PS1left, VCVTPD2PS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 529.129 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vcvtpd2ps)(*#line 7702.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VCVTPD2PS1left, VCVTPD2PS1right), rest671)
end
|  ( 786, ( ( _, ( _, VCVTDQ2PS1left, VCVTDQ2PS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 529.171 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vcvtdq2ps)(*#line 7706.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VCVTDQ2PS1left, VCVTDQ2PS1right), rest671)
end
|  ( 787, ( ( _, ( _, VCVTPS2DQ1left, VCVTPS2DQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 530.15 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vcvtps2dq)(*#line 7710.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VCVTPS2DQ1left, VCVTPS2DQ1right), rest671)
end
|  ( 788, ( ( _, ( _, VCVTTPS2DQ1left, VCVTTPS2DQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 530.58 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vcvttps2dq)(*#line 7714.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VCVTTPS2DQ1left, VCVTTPS2DQ1right), rest671)
end
|  ( 789, ( ( _, ( _, VCVTTPD2DQ1left, VCVTTPD2DQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 530.102 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vcvttpd2dq)(*#line 7718.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VCVTTPD2DQ1left, VCVTTPD2DQ1right), rest671)
end
|  ( 790, ( ( _, ( _, VCVTPD2DQ1left, VCVTPD2DQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 530.145 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vcvtpd2dq)(*#line 7722.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VCVTPD2DQ1left, VCVTPD2DQ1right), rest671)
end
|  ( 791, ( ( _, ( _, VCVTDQ2PD1left, VCVTDQ2PD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 531.15 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vcvtdq2pd)(*#line 7726.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VCVTDQ2PD1left, VCVTDQ2PD1right), rest671)
end
|  ( 792, ( ( _, ( _, VMINPS1left, VMINPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 531.54 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vminps)(*#line 7730.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMINPS1left, VMINPS1right), rest671)
end
|  ( 793, ( ( _, ( _, VMINPD1left, VMINPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 531.90 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vminpd)(*#line 7734.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMINPD1left, VMINPD1right), rest671)
end
|  ( 794, ( ( _, ( _, VMAXPS1left, VMAXPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 531.126 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vmaxps)(*#line 7738.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMAXPS1left, VMAXPS1right), rest671)
end
|  ( 795, ( ( _, ( _, VMAXPD1left, VMAXPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 531.162 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vmaxpd)(*#line 7742.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMAXPD1left, VMAXPD1right), rest671)
end
|  ( 796, ( ( _, ( _, VHADDPD1left, VHADDPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 532.13 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vhaddpd)(*#line 7746.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VHADDPD1left, VHADDPD1right), rest671)
end
|  ( 797, ( ( _, ( _, VHADDPS1left, VHADDPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 532.51 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vhaddps)(*#line 7750.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VHADDPS1left, VHADDPS1right), rest671)
end
|  ( 798, ( ( _, ( _, VHSUBPD1left, VHSUBPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 532.89 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vhsubpd)(*#line 7754.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VHSUBPD1left, VHSUBPD1right), rest671)
end
|  ( 799, ( ( _, ( _, VHSUBPS1left, VHSUBPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 532.127 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vhsubps)(*#line 7758.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VHSUBPS1left, VHSUBPS1right), rest671)
end
|  ( 800, ( ( _, ( _, VCMPPS1left, VCMPPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 532.164 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vcmpps)(*#line 7762.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VCMPPS1left, VCMPPS1right), rest671)
end
|  ( 801, ( ( _, ( _, VCMPPD1left, VCMPPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 533.12 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vcmppd)(*#line 7766.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VCMPPD1left, VCMPPD1right), rest671)
end
|  ( 802, ( ( _, ( _, VADDSUBPD1left, VADDSUBPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 533.51 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vaddsubpd)(*#line 7770.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VADDSUBPD1left, VADDSUBPD1right), rest671)
end
|  ( 803, ( ( _, ( _, VADDSUBPS1left, VADDSUBPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 533.93 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vaddsubps)(*#line 7774.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VADDSUBPS1left, VADDSUBPS1right), rest671)
end
|  ( 804, ( ( _, ( _, VDPPS1left, VDPPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 533.131 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vdpps)(*#line 7778.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VDPPS1left, VDPPS1right), rest671)
end
|  ( 805, ( ( _, ( _, VROUNDPD1left, VROUNDPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 533.168 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vroundpd)(*#line 7782.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VROUNDPD1left, VROUNDPD1right), rest671)
end
|  ( 806, ( ( _, ( _, VROUNDPS1left, VROUNDPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 534.14 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vroundps)(*#line 7786.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VROUNDPS1left, VROUNDPS1right), rest671)
end
|  ( 807, ( ( _, ( _, VMOVAPS1left, VMOVAPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 534.53 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vmovaps)(*#line 7790.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMOVAPS1left, VMOVAPS1right), rest671)
end
|  ( 808, ( ( _, ( _, VMOVAPD1left, VMOVAPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 534.91 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vmovapd)(*#line 7794.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMOVAPD1left, VMOVAPD1right), rest671)
end
|  ( 809, ( ( _, ( _, VMOVDQA1left, VMOVDQA1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 534.129 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vmovdqa)(*#line 7798.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMOVDQA1left, VMOVDQA1right), rest671)
end
|  ( 810, ( ( _, ( _, VMOVUPS1left, VMOVUPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 534.167 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vmovups)(*#line 7802.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMOVUPS1left, VMOVUPS1right), rest671)
end
|  ( 811, ( ( _, ( _, VMOVUPD1left, VMOVUPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 535.13 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vmovupd)(*#line 7806.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMOVUPD1left, VMOVUPD1right), rest671)
end
|  ( 812, ( ( _, ( _, VMOVDQU1left, VMOVDQU1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 535.51 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vmovdqu)(*#line 7810.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMOVDQU1left, VMOVDQU1right), rest671)
end
|  ( 813, ( ( _, ( _, VMOVMSKPS1left, VMOVMSKPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 535.91 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vmovmskps)(*#line 7814.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMOVMSKPS1left, VMOVMSKPS1right), rest671)
end
|  ( 814, ( ( _, ( _, VMOVMSKPD1left, VMOVMSKPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 535.133 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vmovmskpd)(*#line 7818.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMOVMSKPD1left, VMOVMSKPD1right), rest671)
end
|  ( 815, ( ( _, ( _, VLDDQU1left, VLDDQU1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 535.173 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vlddqu)(*#line 7822.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VLDDQU1left, VLDDQU1right), rest671)
end
|  ( 816, ( ( _, ( _, VMOVNTPS1left, VMOVNTPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 536.14 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vmovntps)(*#line 7826.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMOVNTPS1left, VMOVNTPS1right), rest671)
end
|  ( 817, ( ( _, ( _, VMOVNTPD1left, VMOVNTPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 536.54 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vmovntpd)(*#line 7830.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMOVNTPD1left, VMOVNTPD1right), rest671)
end
|  ( 818, ( ( _, ( _, VMOVNTDQ1left, VMOVNTDQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 536.94 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vmovntdq)(*#line 7834.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMOVNTDQ1left, VMOVNTDQ1right), rest671)
end
|  ( 819, ( ( _, ( _, VMOVNTDQA1left, VMOVNTDQA1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 536.135 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vmovntdqa)(*#line 7838.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMOVNTDQA1left, VMOVNTDQA1right), rest671)
end
|  ( 820, ( ( _, ( _, VMOVSHDUP1left, VMOVSHDUP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 536.177 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vmovshdup)(*#line 7842.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMOVSHDUP1left, VMOVSHDUP1right), rest671)
end
|  ( 821, ( ( _, ( _, VMOVSLDUP1left, VMOVSLDUP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 537.15 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vmovsldup)(*#line 7846.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMOVSLDUP1left, VMOVSLDUP1right), rest671)
end
|  ( 822, ( ( _, ( _, VMOVDDUP1left, VMOVDDUP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 537.56 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vmovddup)(*#line 7850.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMOVDDUP1left, VMOVDDUP1right), rest671)
end
|  ( 823, ( ( _, ( _, VUNPCKHPD1left, VUNPCKHPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 537.97 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vunpckhpd)(*#line 7854.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VUNPCKHPD1left, VUNPCKHPD1right), rest671)
end
|  ( 824, ( ( _, ( _, VUNPCKHPS1left, VUNPCKHPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 537.139 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vunpckhps)(*#line 7858.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VUNPCKHPS1left, VUNPCKHPS1right), rest671)
end
|  ( 825, ( ( _, ( _, VUNPCKLPD1left, VUNPCKLPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 537.181 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vunpcklpd)(*#line 7862.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VUNPCKLPD1left, VUNPCKLPD1right), rest671)
end
|  ( 826, ( ( _, ( _, VBLENDPS1left, VBLENDPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 538.14 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vblendps)(*#line 7866.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VBLENDPS1left, VBLENDPS1right), rest671)
end
|  ( 827, ( ( _, ( _, VBLENDPD1left, VBLENDPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 538.54 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vblendpd)(*#line 7870.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VBLENDPD1left, VBLENDPD1right), rest671)
end
|  ( 828, ( ( _, ( _, VSHUFPD1left, VSHUFPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 538.94 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vshufpd)(*#line 7874.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VSHUFPD1left, VSHUFPD1right), rest671)
end
|  ( 829, ( ( _, ( _, VSHUFPS1left, VSHUFPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 538.132 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vshufps)(*#line 7878.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VSHUFPS1left, VSHUFPS1right), rest671)
end
|  ( 830, ( ( _, ( _, VUNPCKLPS1left, VUNPCKLPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 538.172 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vunpcklps)(*#line 7882.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VUNPCKLPS1left, VUNPCKLPS1right), rest671)
end
|  ( 831, ( ( _, ( _, VBLENDVPS1left, VBLENDVPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 539.15 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vblendvps)(*#line 7886.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VBLENDVPS1left, VBLENDVPS1right), rest671)
end
|  ( 832, ( ( _, ( _, VBLENDVPD1left, VBLENDVPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 539.57 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vblendvpd)(*#line 7890.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VBLENDVPD1left, VBLENDVPD1right), rest671)
end
|  ( 833, ( ( _, ( _, VPTEST1left, VPTEST1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 539.96 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vptest)(*#line 7894.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPTEST1left, VPTEST1right), rest671)
end
|  ( 834, ( ( _, ( _, VXORPS1left, VXORPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 539.132 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vxorps)(*#line 7898.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VXORPS1left, VXORPS1right), rest671)
end
|  ( 835, ( ( _, ( _, VXORPD1left, VXORPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 539.168 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vxorpd)(*#line 7902.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VXORPD1left, VXORPD1right), rest671)
end
|  ( 836, ( ( _, ( _, VORPS1left, VORPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 540.11 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vorps)(*#line 7906.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VORPS1left, VORPS1right), rest671)
end
|  ( 837, ( ( _, ( _, VORPD1left, VORPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 540.45 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vorpd)(*#line 7910.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VORPD1left, VORPD1right), rest671)
end
|  ( 838, ( ( _, ( _, VANDNPD1left, VANDNPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 540.81 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vandnpd)(*#line 7914.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VANDNPD1left, VANDNPD1right), rest671)
end
|  ( 839, ( ( _, ( _, VANDNPS1left, VANDNPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 540.119 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vandnps)(*#line 7918.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VANDNPS1left, VANDNPS1right), rest671)
end
|  ( 840, ( ( _, ( _, VANDPD1left, VANDPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 540.156 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vandpd)(*#line 7922.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VANDPD1left, VANDPD1right), rest671)
end
|  ( 841, ( ( _, ( _, VANDPS1left, VANDPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 540.192 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vandps)(*#line 7926.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VANDPS1left, VANDPS1right), rest671)
end
|  ( 842, ( ( _, ( _, VBROADCASTF1281left, VBROADCASTF1281right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 541.20 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vbroadcastf128)(*#line 7930.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VBROADCASTF1281left, VBROADCASTF1281right), rest671)
end
|  ( 843, ( ( _, ( _, VBROADCASTSD1left, VBROADCASTSD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 541.70 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vbroadcastsd)(*#line 7934.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VBROADCASTSD1left, VBROADCASTSD1right), rest671)
end
|  ( 844, ( ( _, ( _, VBROADCASTSS1left, VBROADCASTSS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 541.118 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vbroadcastss)(*#line 7938.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VBROADCASTSS1left, VBROADCASTSS1right), rest671)
end
|  ( 845, ( ( _, ( _, VEXTRACTF1281left, VEXTRACTF1281right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 541.166 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vextractf128)(*#line 7942.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VEXTRACTF1281left, VEXTRACTF1281right), rest671)
end
|  ( 846, ( ( _, ( _, VINSERTF1281left, VINSERTF1281right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 542.17 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vinsertf128)(*#line 7946.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VINSERTF1281left, VINSERTF1281right), rest671)
end
|  ( 847, ( ( _, ( _, VMASKMOVPS1left, VMASKMOVPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 542.62 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vmaskmovps)(*#line 7950.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMASKMOVPS1left, VMASKMOVPS1right), rest671)
end
|  ( 848, ( ( _, ( _, VMASKMOVPD1left, VMASKMOVPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 542.106 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vmaskmovpd)(*#line 7954.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMASKMOVPD1left, VMASKMOVPD1right), rest671)
end
|  ( 849, ( ( _, ( _, VPERMILPD1left, VPERMILPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 542.149 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vpermilpd)(*#line 7958.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPERMILPD1left, VPERMILPD1right), rest671)
end
|  ( 850, ( ( _, ( _, VPERMILPS1left, VPERMILPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 543.15 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vpermilps)(*#line 7962.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPERMILPS1left, VPERMILPS1right), rest671)
end
|  ( 851, ( ( _, ( _, VPERM2F1281left, VPERM2F1281right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 543.58 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vperm2f128)(*#line 7966.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPERM2F1281left, VPERM2F1281right), rest671)
end
|  ( 852, ( ( _, ( _, VTESTPS1left, VTESTPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 543.100 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vtestps)(*#line 7970.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VTESTPS1left, VTESTPS1right), rest671)
end
|  ( 853, ( ( _, ( _, VTESTPD1left, VTESTPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 543.138 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vtestpd)(*#line 7974.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VTESTPD1left, VTESTPD1right), rest671)
end
|  ( 854, ( ( _, ( _, VZEROALL1left, VZEROALL1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 543.177 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vzeroall)(*#line 7978.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VZEROALL1left, VZEROALL1right), rest671)
end
|  ( 855, ( ( _, ( _, VZEROUPPER1left, VZEROUPPER1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 544.16 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vzeroupper)(*#line 7982.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VZEROUPPER1left, VZEROUPPER1right), rest671)
end
|  ( 856, ( ( _, ( _, VCVTSI2SS1left, VCVTSI2SS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 544.59 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vcvtsi2ss)(*#line 7986.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VCVTSI2SS1left, VCVTSI2SS1right), rest671)
end
|  ( 857, ( ( _, ( _, VCVTSI2SD1left, VCVTSI2SD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 544.101 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vcvtsi2sd)(*#line 7990.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VCVTSI2SD1left, VCVTSI2SD1right), rest671)
end
|  ( 858, ( ( _, ( _, VCVTSD2SI1left, VCVTSD2SI1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 544.143 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vcvtsd2si)(*#line 7994.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VCVTSD2SI1left, VCVTSD2SI1right), rest671)
end
|  ( 859, ( ( _, ( _, VCVTTSS2SI1left, VCVTTSS2SI1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 545.16 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vcvttss2si)(*#line 7998.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VCVTTSS2SI1left, VCVTTSS2SI1right), rest671)
end
|  ( 860, ( ( _, ( _, VCVTTSD2SI1left, VCVTTSD2SI1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 545.60 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vcvttsd2si)(*#line 8002.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VCVTTSD2SI1left, VCVTTSD2SI1right), rest671)
end
|  ( 861, ( ( _, ( _, VCVTSS2SI1left, VCVTSS2SI1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 545.103 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vcvtss2si)(*#line 8006.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VCVTSS2SI1left, VCVTSS2SI1right), rest671)
end
|  ( 862, ( ( _, ( _, VCOMISD1left, VCOMISD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 545.143 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vcomisd)(*#line 8010.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VCOMISD1left, VCOMISD1right), rest671)
end
|  ( 863, ( ( _, ( _, VRSQRTSS1left, VRSQRTSS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 545.182 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vrsqrtss)(*#line 8014.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VRSQRTSS1left, VRSQRTSS1right), rest671)
end
|  ( 864, ( ( _, ( _, VRCPSS1left, VRCPSS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 546.13 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vrcpss)(*#line 8018.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VRCPSS1left, VRCPSS1right), rest671)
end
|  ( 865, ( ( _, ( _, VUCOMISS1left, VUCOMISS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 546.51 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vucomiss)(*#line 8022.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VUCOMISS1left, VUCOMISS1right), rest671)
end
|  ( 866, ( ( _, ( _, VUCOMISD1left, VUCOMISD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 546.91 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vucomisd)(*#line 8026.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VUCOMISD1left, VUCOMISD1right), rest671)
end
|  ( 867, ( ( _, ( _, VCOMISS1left, VCOMISS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 546.130 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vcomiss)(*#line 8030.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VCOMISS1left, VCOMISS1right), rest671)
end
|  ( 868, ( ( _, ( _, VADDSS1left, VADDSS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 546.167 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vaddss)(*#line 8034.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VADDSS1left, VADDSS1right), rest671)
end
|  ( 869, ( ( _, ( _, VADDSD1left, VADDSD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 547.12 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vaddsd)(*#line 8038.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VADDSD1left, VADDSD1right), rest671)
end
|  ( 870, ( ( _, ( _, VSUBSS1left, VSUBSS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 547.48 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vsubss)(*#line 8042.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VSUBSS1left, VSUBSS1right), rest671)
end
|  ( 871, ( ( _, ( _, VSUBSD1left, VSUBSD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 547.84 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vsubsd)(*#line 8046.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VSUBSD1left, VSUBSD1right), rest671)
end
|  ( 872, ( ( _, ( _, VMULSS1left, VMULSS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 547.120 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vmulss)(*#line 8050.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMULSS1left, VMULSS1right), rest671)
end
|  ( 873, ( ( _, ( _, VMULSD1left, VMULSD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 547.156 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vmulsd)(*#line 8054.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMULSD1left, VMULSD1right), rest671)
end
|  ( 874, ( ( _, ( _, VDIVSS1left, VDIVSS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 547.192 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vdivss)(*#line 8058.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VDIVSS1left, VDIVSS1right), rest671)
end
|  ( 875, ( ( _, ( _, VDIVSD1left, VDIVSD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 548.12 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vdivsd)(*#line 8062.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VDIVSD1left, VDIVSD1right), rest671)
end
|  ( 876, ( ( _, ( _, VSQRTSS1left, VSQRTSS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 548.49 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vsqrtss)(*#line 8066.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VSQRTSS1left, VSQRTSS1right), rest671)
end
|  ( 877, ( ( _, ( _, VSQRTSD1left, VSQRTSD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 548.87 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vsqrtsd)(*#line 8070.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VSQRTSD1left, VSQRTSD1right), rest671)
end
|  ( 878, ( ( _, ( _, VCVTSS2SD1left, VCVTSS2SD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 548.127 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vcvtss2sd)(*#line 8074.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VCVTSS2SD1left, VCVTSS2SD1right), rest671)
end
|  ( 879, ( ( _, ( _, VCVTSD2SS1left, VCVTSD2SS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 548.170 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vcvtsd2ss)(*#line 8078.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VCVTSD2SS1left, VCVTSD2SS1right), rest671)
end
|  ( 880, ( ( _, ( _, VMINSS1left, VMINSS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 549.12 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vminss)(*#line 8082.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMINSS1left, VMINSS1right), rest671)
end
|  ( 881, ( ( _, ( _, VMINSD1left, VMINSD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 549.48 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vminsd)(*#line 8086.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMINSD1left, VMINSD1right), rest671)
end
|  ( 882, ( ( _, ( _, VMAXSS1left, VMAXSS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 549.84 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vmaxss)(*#line 8090.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMAXSS1left, VMAXSS1right), rest671)
end
|  ( 883, ( ( _, ( _, VMAXSD1left, VMAXSD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 549.120 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vmaxsd)(*#line 8094.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMAXSD1left, VMAXSD1right), rest671)
end
|  ( 884, ( ( _, ( _, VPAND1left, VPAND1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 549.155 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vpand)(*#line 8098.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPAND1left, VPAND1right), rest671)
end
|  ( 885, ( ( _, ( _, VPANDN1left, VPANDN1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 549.190 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vpandn)(*#line 8102.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPANDN1left, VPANDN1right), rest671)
end
|  ( 886, ( ( _, ( _, VPOR1left, VPOR1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 550.10 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vpor)(*#line 8106.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPOR1left, VPOR1right), rest671)
end
|  ( 887, ( ( _, ( _, VPXOR1left, VPXOR1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 550.43 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vpxor)(*#line 8110.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPXOR1left, VPXOR1right), rest671)
end
|  ( 888, ( ( _, ( _, VPCMPGTB1left, VPCMPGTB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 550.80 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vpcmpgtb)(*#line 8114.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPCMPGTB1left, VPCMPGTB1right), rest671)
end
|  ( 889, ( ( _, ( _, VPCMPGTW1left, VPCMPGTW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 550.120 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vpcmpgtw)(*#line 8118.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPCMPGTW1left, VPCMPGTW1right), rest671)
end
|  ( 890, ( ( _, ( _, VPCMPGTD1left, VPCMPGTD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 550.160 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vpcmpgtd)(*#line 8122.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPCMPGTD1left, VPCMPGTD1right), rest671)
end
|  ( 891, ( ( _, ( _, VPMADDWD1left, VPMADDWD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 551.14 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vpmaddwd)(*#line 8126.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPMADDWD1left, VPMADDWD1right), rest671)
end
|  ( 892, ( ( _, ( _, VPMADDUBSW1left, VPMADDUBSW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 551.56 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vpmaddubsw)(*#line 8130.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPMADDUBSW1left, VPMADDUBSW1right), rest671)
end
|  ( 893, ( ( _, ( _, VPAVGB1left, VPAVGB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 551.96 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vpavgb)(*#line 8134.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPAVGB1left, VPAVGB1right), rest671)
end
|  ( 894, ( ( _, ( _, VPAVGW1left, VPAVGW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 551.133 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vpavgw)(*#line 8138.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPAVGW1left, VPAVGW1right), rest671)
end
|  ( 895, ( ( _, ( _, VPMULUDQ1left, VPMULUDQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 551.171 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vpmuludq)(*#line 8142.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPMULUDQ1left, VPMULUDQ1right), rest671)
end
|  ( 896, ( ( _, ( _, VPCMPEQB1left, VPCMPEQB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 552.14 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vpcmpeqb)(*#line 8146.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPCMPEQB1left, VPCMPEQB1right), rest671)
end
|  ( 897, ( ( _, ( _, VPCMPEQW1left, VPCMPEQW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 552.54 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vpcmpeqw)(*#line 8150.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPCMPEQW1left, VPCMPEQW1right), rest671)
end
|  ( 898, ( ( _, ( _, VPCMPEQD1left, VPCMPEQD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 552.94 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vpcmpeqd)(*#line 8154.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPCMPEQD1left, VPCMPEQD1right), rest671)
end
|  ( 899, ( ( _, ( _, VPMULLW1left, VPMULLW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 552.133 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vpmullw)(*#line 8158.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPMULLW1left, VPMULLW1right), rest671)
end
|  ( 900, ( ( _, ( _, VPMULHUW1left, VPMULHUW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 552.172 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vpmulhuw)(*#line 8162.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPMULHUW1left, VPMULHUW1right), rest671)
end
|  ( 901, ( ( _, ( _, VPMULHW1left, VPMULHW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 553.13 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vpmulhw)(*#line 8166.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPMULHW1left, VPMULHW1right), rest671)
end
|  ( 902, ( ( _, ( _, VPSUBSW1left, VPSUBSW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 553.51 "InstructionSemantics.grm"*)(IMF_AVX, IS_AVX Vpsubsw)(*#line 8170.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPSUBSW1left, VPSUBSW1right), rest671)
end
|  ( 903, ( ( _, ( _, VPADDSW1left, VPADDSW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 555.11 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpaddsw)(*#line 8174.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPADDSW1left, VPADDSW1right), rest671)
end
|  ( 904, ( ( _, ( _, VPSADBW1left, VPSADBW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 555.53 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpsadbw)(*#line 8178.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPSADBW1left, VPSADBW1right), rest671)
end
|  ( 905, ( ( _, ( _, VPADDUSB1left, VPADDUSB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 555.96 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpaddusb)(*#line 8182.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPADDUSB1left, VPADDUSB1right), rest671)
end
|  ( 906, ( ( _, ( _, VPADDUSW1left, VPADDUSW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 555.140 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpaddusw)(*#line 8186.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPADDUSW1left, VPADDUSW1right), rest671)
end
|  ( 907, ( ( _, ( _, VPADDSB1left, VPADDSB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 555.183 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpaddsb)(*#line 8190.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPADDSB1left, VPADDSB1right), rest671)
end
|  ( 908, ( ( _, ( _, VPSUBUSB1left, VPSUBUSB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 556.14 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpsubusb)(*#line 8194.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPSUBUSB1left, VPSUBUSB1right), rest671)
end
|  ( 909, ( ( _, ( _, VPSUBUSW1left, VPSUBUSW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 556.58 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpsubusw)(*#line 8198.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPSUBUSW1left, VPSUBUSW1right), rest671)
end
|  ( 910, ( ( _, ( _, VPSUBSB1left, VPSUBSB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 556.101 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpsubsb)(*#line 8202.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPSUBSB1left, VPSUBSB1right), rest671)
end
|  ( 911, ( ( _, ( _, VPMINUB1left, VPMINUB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 556.143 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpminub)(*#line 8206.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPMINUB1left, VPMINUB1right), rest671)
end
|  ( 912, ( ( _, ( _, VPMINSW1left, VPMINSW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 556.185 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpminsw)(*#line 8210.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPMINSW1left, VPMINSW1right), rest671)
end
|  ( 913, ( ( _, ( _, VPMAXUB1left, VPMAXUB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 557.13 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpmaxub)(*#line 8214.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPMAXUB1left, VPMAXUB1right), rest671)
end
|  ( 914, ( ( _, ( _, VPMAXSW1left, VPMAXSW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 557.55 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpmaxsw)(*#line 8218.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPMAXSW1left, VPMAXSW1right), rest671)
end
|  ( 915, ( ( _, ( _, VPADDB1left, VPADDB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 557.96 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpaddb)(*#line 8222.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPADDB1left, VPADDB1right), rest671)
end
|  ( 916, ( ( _, ( _, VPADDW1left, VPADDW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 557.136 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpaddw)(*#line 8226.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPADDW1left, VPADDW1right), rest671)
end
|  ( 917, ( ( _, ( _, VPADDD1left, VPADDD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 557.176 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpaddd)(*#line 8230.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPADDD1left, VPADDD1right), rest671)
end
|  ( 918, ( ( _, ( _, VPADDQ1left, VPADDQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 558.12 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpaddq)(*#line 8234.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPADDQ1left, VPADDQ1right), rest671)
end
|  ( 919, ( ( _, ( _, VPSUBB1left, VPSUBB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 558.52 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpsubb)(*#line 8238.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPSUBB1left, VPSUBB1right), rest671)
end
|  ( 920, ( ( _, ( _, VPSUBW1left, VPSUBW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 558.92 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpsubw)(*#line 8242.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPSUBW1left, VPSUBW1right), rest671)
end
|  ( 921, ( ( _, ( _, VPSUBD1left, VPSUBD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 558.132 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpsubd)(*#line 8246.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPSUBD1left, VPSUBD1right), rest671)
end
|  ( 922, ( ( _, ( _, VPSUBQ1left, VPSUBQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 558.172 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpsubq)(*#line 8250.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPSUBQ1left, VPSUBQ1right), rest671)
end
|  ( 923, ( ( _, ( _, VPSLLW1left, VPSLLW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 559.12 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpsllw)(*#line 8254.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPSLLW1left, VPSLLW1right), rest671)
end
|  ( 924, ( ( _, ( _, VPSLLD1left, VPSLLD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 559.52 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpslld)(*#line 8258.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPSLLD1left, VPSLLD1right), rest671)
end
|  ( 925, ( ( _, ( _, VPSLLQ1left, VPSLLQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 559.92 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpsllq)(*#line 8262.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPSLLQ1left, VPSLLQ1right), rest671)
end
|  ( 926, ( ( _, ( _, VPSRAW1left, VPSRAW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 559.132 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpsraw)(*#line 8266.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPSRAW1left, VPSRAW1right), rest671)
end
|  ( 927, ( ( _, ( _, VPSRLW1left, VPSRLW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 559.172 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpsrlw)(*#line 8270.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPSRLW1left, VPSRLW1right), rest671)
end
|  ( 928, ( ( _, ( _, VPSRLD1left, VPSRLD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 560.12 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpsrld)(*#line 8274.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPSRLD1left, VPSRLD1right), rest671)
end
|  ( 929, ( ( _, ( _, VPSRLQ1left, VPSRLQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 560.52 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpsrlq)(*#line 8278.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPSRLQ1left, VPSRLQ1right), rest671)
end
|  ( 930, ( ( _, ( _, VPSRAD1left, VPSRAD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 560.92 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpsrad)(*#line 8282.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPSRAD1left, VPSRAD1right), rest671)
end
|  ( 931, ( ( _, ( _, VPHSUBW1left, VPHSUBW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 560.133 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vphsubw)(*#line 8286.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPHSUBW1left, VPHSUBW1right), rest671)
end
|  ( 932, ( ( _, ( _, VPHSUBD1left, VPHSUBD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 560.175 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vphsubd)(*#line 8290.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPHSUBD1left, VPHSUBD1right), rest671)
end
|  ( 933, ( ( _, ( _, VPHSUBSW1left, VPHSUBSW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 561.14 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vphsubsw)(*#line 8294.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPHSUBSW1left, VPHSUBSW1right), rest671)
end
|  ( 934, ( ( _, ( _, VPHADDW1left, VPHADDW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 561.58 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vphaddw)(*#line 8298.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPHADDW1left, VPHADDW1right), rest671)
end
|  ( 935, ( ( _, ( _, VPHADDD1left, VPHADDD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 561.100 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vphaddd)(*#line 8302.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPHADDD1left, VPHADDD1right), rest671)
end
|  ( 936, ( ( _, ( _, VPHADDSW1left, VPHADDSW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 561.143 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vphaddsw)(*#line 8306.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPHADDSW1left, VPHADDSW1right), rest671)
end
|  ( 937, ( ( _, ( _, VPMULHRSW1left, VPMULHRSW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 561.188 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpmulhrsw)(*#line 8310.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPMULHRSW1left, VPMULHRSW1right), rest671)
end
|  ( 938, ( ( _, ( _, VPSIGNB1left, VPSIGNB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 562.13 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpsignb)(*#line 8314.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPSIGNB1left, VPSIGNB1right), rest671)
end
|  ( 939, ( ( _, ( _, VPSIGNW1left, VPSIGNW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 562.55 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpsignw)(*#line 8318.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPSIGNW1left, VPSIGNW1right), rest671)
end
|  ( 940, ( ( _, ( _, VPSIGND1left, VPSIGND1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 562.97 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpsignd)(*#line 8322.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPSIGND1left, VPSIGND1right), rest671)
end
|  ( 941, ( ( _, ( _, VPABSB1left, VPABSB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 562.138 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpabsb)(*#line 8326.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPABSB1left, VPABSB1right), rest671)
end
|  ( 942, ( ( _, ( _, VPABSW1left, VPABSW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 562.178 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpabsw)(*#line 8330.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPABSW1left, VPABSW1right), rest671)
end
|  ( 943, ( ( _, ( _, VPABSD1left, VPABSD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 563.12 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpabsd)(*#line 8334.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPABSD1left, VPABSD1right), rest671)
end
|  ( 944, ( ( _, ( _, VDPPD1left, VDPPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 563.51 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vdppd)(*#line 8338.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VDPPD1left, VDPPD1right), rest671)
end
|  ( 945, ( ( _, ( _, VPHMINPOSUW1left, VPHMINPOSUW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 563.95 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vphminposuw)(*#line 8342.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPHMINPOSUW1left, VPHMINPOSUW1right), rest671)
end
|  ( 946, ( ( _, ( _, VMPSADBW1left, VMPSADBW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 563.142 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vmpsadbw)(*#line 8346.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMPSADBW1left, VMPSADBW1right), rest671)
end
|  ( 947, ( ( _, ( _, VPMAXSB1left, VPMAXSB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 563.185 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpmaxsb)(*#line 8350.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPMAXSB1left, VPMAXSB1right), rest671)
end
|  ( 948, ( ( _, ( _, VPMAXSD1left, VPMAXSD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 564.13 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpmaxsd)(*#line 8354.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPMAXSD1left, VPMAXSD1right), rest671)
end
|  ( 949, ( ( _, ( _, VPMAXUD1left, VPMAXUD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 564.56 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpmaxud)(*#line 8358.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPMAXUD1left, VPMAXUD1right), rest671)
end
|  ( 950, ( ( _, ( _, VPMINSB1left, VPMINSB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 564.98 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpminsb)(*#line 8362.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPMINSB1left, VPMINSB1right), rest671)
end
|  ( 951, ( ( _, ( _, VPMINSD1left, VPMINSD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 564.140 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpminsd)(*#line 8366.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPMINSD1left, VPMINSD1right), rest671)
end
|  ( 952, ( ( _, ( _, VPMINUD1left, VPMINUD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 564.182 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpminud)(*#line 8370.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPMINUD1left, VPMINUD1right), rest671)
end
|  ( 953, ( ( _, ( _, VPMAXUW1left, VPMAXUW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 565.13 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpmaxuw)(*#line 8374.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPMAXUW1left, VPMAXUW1right), rest671)
end
|  ( 954, ( ( _, ( _, VPMINUW1left, VPMINUW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 565.55 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpminuw)(*#line 8378.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPMINUW1left, VPMINUW1right), rest671)
end
|  ( 955, ( ( _, ( _, VPMOVSXBW1left, VPMOVSXBW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 565.99 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpmovsxbw)(*#line 8382.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPMOVSXBW1left, VPMOVSXBW1right), rest671)
end
|  ( 956, ( ( _, ( _, VPMOVZXBW1left, VPMOVZXBW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 565.145 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpmovzxbw)(*#line 8386.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPMOVZXBW1left, VPMOVZXBW1right), rest671)
end
|  ( 957, ( ( _, ( _, VPMOVSXBD1left, VPMOVSXBD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 566.15 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpmovsxbd)(*#line 8390.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPMOVSXBD1left, VPMOVSXBD1right), rest671)
end
|  ( 958, ( ( _, ( _, VPMOVZXBD1left, VPMOVZXBD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 566.61 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpmovzxbd)(*#line 8394.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPMOVZXBD1left, VPMOVZXBD1right), rest671)
end
|  ( 959, ( ( _, ( _, VPMOVSXBQ1left, VPMOVSXBQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 566.107 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpmovsxbq)(*#line 8398.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPMOVSXBQ1left, VPMOVSXBQ1right), rest671)
end
|  ( 960, ( ( _, ( _, VPMOVZXBQ1left, VPMOVZXBQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 566.153 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpmovzxbq)(*#line 8402.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPMOVZXBQ1left, VPMOVZXBQ1right), rest671)
end
|  ( 961, ( ( _, ( _, VPMOVSXWD1left, VPMOVSXWD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 567.15 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpmovsxwd)(*#line 8406.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPMOVSXWD1left, VPMOVSXWD1right), rest671)
end
|  ( 962, ( ( _, ( _, VPMOVZXWD1left, VPMOVZXWD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 567.62 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpmovzxwd)(*#line 8410.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPMOVZXWD1left, VPMOVZXWD1right), rest671)
end
|  ( 963, ( ( _, ( _, VPMOVSXWQ1left, VPMOVSXWQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 567.108 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpmovsxwq)(*#line 8414.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPMOVSXWQ1left, VPMOVSXWQ1right), rest671)
end
|  ( 964, ( ( _, ( _, VPMOVZXWQ1left, VPMOVZXWQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 567.154 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpmovzxwq)(*#line 8418.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPMOVZXWQ1left, VPMOVZXWQ1right), rest671)
end
|  ( 965, ( ( _, ( _, VPMOVSXDQ1left, VPMOVSXDQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 568.15 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpmovsxdq)(*#line 8422.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPMOVSXDQ1left, VPMOVSXDQ1right), rest671)
end
|  ( 966, ( ( _, ( _, VPMOVZXDQ1left, VPMOVZXDQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 568.61 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpmovzxdq)(*#line 8426.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPMOVZXDQ1left, VPMOVZXDQ1right), rest671)
end
|  ( 967, ( ( _, ( _, VPMULDQ1left, VPMULDQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 568.105 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpmuldq)(*#line 8430.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPMULDQ1left, VPMULDQ1right), rest671)
end
|  ( 968, ( ( _, ( _, VPMULLD1left, VPMULLD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 568.147 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpmulld)(*#line 8434.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPMULLD1left, VPMULLD1right), rest671)
end
|  ( 969, ( ( _, ( _, VROUNDSD1left, VROUNDSD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 568.190 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vroundsd)(*#line 8438.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VROUNDSD1left, VROUNDSD1right), rest671)
end
|  ( 970, ( ( _, ( _, VROUNDSS1left, VROUNDSS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 569.14 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vroundss)(*#line 8442.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VROUNDSS1left, VROUNDSS1right), rest671)
end
|  ( 971, ( ( _, ( _, VPOPCNT1left, VPOPCNT1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 569.57 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpopcnt)(*#line 8446.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPOPCNT1left, VPOPCNT1right), rest671)
end
|  ( 972, ( ( _, ( _, VPCMPGTQ1left, VPCMPGTQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 569.100 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpcmpgtq)(*#line 8450.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPCMPGTQ1left, VPCMPGTQ1right), rest671)
end
|  ( 973, ( ( _, ( _, VPCMPESTRI1left, VPCMPESTRI1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 569.146 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpcmpestri)(*#line 8454.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPCMPESTRI1left, VPCMPESTRI1right), rest671)
end
|  ( 974, ( ( _, ( _, VPCMPESTRM1left, VPCMPESTRM1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 570.16 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpcmpestrm)(*#line 8458.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPCMPESTRM1left, VPCMPESTRM1right), rest671)
end
|  ( 975, ( ( _, ( _, VPCMPISTRI1left, VPCMPISTRI1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 570.65 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpcmpistri)(*#line 8462.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPCMPISTRI1left, VPCMPISTRI1right), rest671)
end
|  ( 976, ( ( _, ( _, VPCMPISTRM1left, VPCMPISTRM1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 570.113 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpcmpistrm)(*#line 8466.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPCMPISTRM1left, VPCMPISTRM1right), rest671)
end
|  ( 977, ( ( _, ( _, VPCLMULQDQ1left, VPCLMULQDQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 570.161 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpclmulqdq)(*#line 8470.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPCLMULQDQ1left, VPCLMULQDQ1right), rest671)
end
|  ( 978, ( ( _, ( _, VAESDEC1left, VAESDEC1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 571.13 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vaesdec)(*#line 8474.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VAESDEC1left, VAESDEC1right), rest671)
end
|  ( 979, ( ( _, ( _, VAESDECLAST1left, VAESDECLAST1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 571.59 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vaesdeclast)(*#line 8478.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VAESDECLAST1left, VAESDECLAST1right), rest671)
end
|  ( 980, ( ( _, ( _, VAESENC1left, VAESENC1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 571.105 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vaesenc)(*#line 8482.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VAESENC1left, VAESENC1right), rest671)
end
|  ( 981, ( ( _, ( _, VAESENCLAST1left, VAESENCLAST1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 571.151 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vaesenclast)(*#line 8486.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VAESENCLAST1left, VAESENCLAST1right), rest671)
end
|  ( 982, ( ( _, ( _, VAESIMX1left, VAESIMX1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 572.13 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vaesimx)(*#line 8490.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VAESIMX1left, VAESIMX1right), rest671)
end
|  ( 983, ( ( _, ( _, VAESKEYGENASSIST1left, VAESKEYGENASSIST1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 572.64 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vaeskeygenassist)(*#line 8494.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VAESKEYGENASSIST1left, VAESKEYGENASSIST1right), rest671)
end
|  ( 984, ( ( _, ( _, VSTMXCSR1left, VSTMXCSR1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 572.116 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vstmxcsr)(*#line 8498.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VSTMXCSR1left, VSTMXCSR1right), rest671)
end
|  ( 985, ( ( _, ( _, VMOVSS1left, VMOVSS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 572.158 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vmovss)(*#line 8502.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMOVSS1left, VMOVSS1right), rest671)
end
|  ( 986, ( ( _, ( _, VMOVSD1left, VMOVSD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 572.198 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vmovsd)(*#line 8506.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMOVSD1left, VMOVSD1right), rest671)
end
|  ( 987, ( ( _, ( _, VCMPSS1left, VCMPSS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 573.13 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vcmpss)(*#line 8510.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VCMPSS1left, VCMPSS1right), rest671)
end
|  ( 988, ( ( _, ( _, VCMPSD1left, VCMPSD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 573.53 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vcmpsd)(*#line 8514.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VCMPSD1left, VCMPSD1right), rest671)
end
|  ( 989, ( ( _, ( _, VMOVHPS1left, VMOVHPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 573.94 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vmovhps)(*#line 8518.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMOVHPS1left, VMOVHPS1right), rest671)
end
|  ( 990, ( ( _, ( _, VMOVHPD1left, VMOVHPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 573.136 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vmovhpd)(*#line 8522.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMOVHPD1left, VMOVHPD1right), rest671)
end
|  ( 991, ( ( _, ( _, VMOVLPS1left, VMOVLPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 573.178 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vmovlps)(*#line 8526.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMOVLPS1left, VMOVLPS1right), rest671)
end
|  ( 992, ( ( _, ( _, VMOVLPD1left, VMOVLPD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 574.13 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vmovlpd)(*#line 8530.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMOVLPD1left, VMOVLPD1right), rest671)
end
|  ( 993, ( ( _, ( _, VMOVLHPS1left, VMOVLHPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 574.56 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vmovlhps)(*#line 8534.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMOVLHPS1left, VMOVLHPS1right), rest671)
end
|  ( 994, ( ( _, ( _, VMOVHLPS1left, VMOVHLPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 574.100 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vmovhlps)(*#line 8538.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMOVHLPS1left, VMOVHLPS1right), rest671)
end
|  ( 995, ( ( _, ( _, VMOVQ1left, VMOVQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 574.141 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vmovq)(*#line 8542.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMOVQ1left, VMOVQ1right), rest671)
end
|  ( 996, ( ( _, ( _, VMOVD1left, VMOVD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 574.179 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vmovd)(*#line 8546.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMOVD1left, VMOVD1right), rest671)
end
|  ( 997, ( ( _, ( _, VPACKUSWB1left, VPACKUSWB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 575.15 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpackuswb)(*#line 8550.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPACKUSWB1left, VPACKUSWB1right), rest671)
end
|  ( 998, ( ( _, ( _, VPACKSSDW1left, VPACKSSDW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 575.61 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpackssdw)(*#line 8554.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPACKSSDW1left, VPACKSSDW1right), rest671)
end
|  ( 999, ( ( _, ( _, VPACKSSWB1left, VPACKSSWB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 575.107 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpacksswb)(*#line 8558.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPACKSSWB1left, VPACKSSWB1right), rest671)
end
|  ( 1000, ( ( _, ( _, VPUNPCKHBW1left, VPUNPCKHBW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 575.154 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpunpckhbw)(*#line 8562.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPUNPCKHBW1left, VPUNPCKHBW1right), rest671)
end
|  ( 1001, ( ( _, ( _, VPUNPCKHWD1left, VPUNPCKHWD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 576.16 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpunpckhwd)(*#line 8566.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPUNPCKHWD1left, VPUNPCKHWD1right), rest671)
end
|  ( 1002, ( ( _, ( _, VPUNPCKLBW1left, VPUNPCKLBW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 576.64 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpunpcklbw)(*#line 8570.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPUNPCKLBW1left, VPUNPCKLBW1right), rest671)
end
|  ( 1003, ( ( _, ( _, VPUNPCKLWD1left, VPUNPCKLWD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 576.112 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpunpcklwd)(*#line 8574.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPUNPCKLWD1left, VPUNPCKLWD1right), rest671)
end
|  ( 1004, ( ( _, ( _, VPUNPCKHDQ1left, VPUNPCKHDQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 576.160 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpunpckhdq)(*#line 8578.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPUNPCKHDQ1left, VPUNPCKHDQ1right), rest671)
end
|  ( 1005, ( ( _, ( _, VPUNPCKLDQ1left, VPUNPCKLDQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 577.16 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpunpckldq)(*#line 8582.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPUNPCKLDQ1left, VPUNPCKLDQ1right), rest671)
end
|  ( 1006, ( ( _, ( _, VPUNPCKLQDQ1left, VPUNPCKLQDQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 577.65 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpunpcklqdq)(*#line 8586.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPUNPCKLQDQ1left, VPUNPCKLQDQ1right), rest671)
end
|  ( 1007, ( ( _, ( _, VPUNPCKHQDQ1left, VPUNPCKHQDQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 577.115 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpunpckhqdq)(*#line 8590.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPUNPCKHQDQ1left, VPUNPCKHQDQ1right), rest671)
end
|  ( 1008, ( ( _, ( _, VPSHUFHW1left, VPSHUFHW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 577.162 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpshufhw)(*#line 8594.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPSHUFHW1left, VPSHUFHW1right), rest671)
end
|  ( 1009, ( ( _, ( _, VPSHUFLW1left, VPSHUFLW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 578.14 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpshuflw)(*#line 8598.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPSHUFLW1left, VPSHUFLW1right), rest671)
end
|  ( 1010, ( ( _, ( _, VPSHUFD1left, VPSHUFD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 578.57 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpshufd)(*#line 8602.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPSHUFD1left, VPSHUFD1right), rest671)
end
|  ( 1011, ( ( _, ( _, VPMOVMSKB1left, VPMOVMSKB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 578.101 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpmovmskb)(*#line 8606.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPMOVMSKB1left, VPMOVMSKB1right), rest671)
end
|  ( 1012, ( ( _, ( _, VMASKMOVDQU1left, VMASKMOVDQU1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 578.150 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vmaskmovdqu)(*#line 8610.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VMASKMOVDQU1left, VMASKMOVDQU1right), rest671)
end
|  ( 1013, ( ( _, ( _, VPINSRW1left, VPINSRW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 579.13 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpinsrw)(*#line 8614.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPINSRW1left, VPINSRW1right), rest671)
end
|  ( 1014, ( ( _, ( _, VPEXTRW1left, VPEXTRW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 579.55 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpextrw)(*#line 8618.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPEXTRW1left, VPEXTRW1right), rest671)
end
|  ( 1015, ( ( _, ( _, VPALIGNR1left, VPALIGNR1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 579.98 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpalignr)(*#line 8622.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPALIGNR1left, VPALIGNR1right), rest671)
end
|  ( 1016, ( ( _, ( _, VPSHUFB1left, VPSHUFB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 579.141 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpshufb)(*#line 8626.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPSHUFB1left, VPSHUFB1right), rest671)
end
|  ( 1017, ( ( _, ( _, VEXTRACTPS1left, VEXTRACTPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 579.186 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vextractps)(*#line 8630.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VEXTRACTPS1left, VEXTRACTPS1right), rest671)
end
|  ( 1018, ( ( _, ( _, VINSERTPS1left, VINSERTPS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 580.15 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vinsertps)(*#line 8634.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VINSERTPS1left, VINSERTPS1right), rest671)
end
|  ( 1019, ( ( _, ( _, VPACKUSDW1left, VPACKUSDW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 580.61 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpackusdw)(*#line 8638.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPACKUSDW1left, VPACKUSDW1right), rest671)
end
|  ( 1020, ( ( _, ( _, VPCMPEQQ1left, VPCMPEQQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 580.106 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpcmpeqq)(*#line 8642.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPCMPEQQ1left, VPCMPEQQ1right), rest671)
end
|  ( 1021, ( ( _, ( _, VPBLENDVB1left, VPBLENDVB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 580.151 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpblendvb)(*#line 8646.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPBLENDVB1left, VPBLENDVB1right), rest671)
end
|  ( 1022, ( ( _, ( _, VPBLENDW1left, VPBLENDW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 581.14 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpblendw)(*#line 8650.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPBLENDW1left, VPBLENDW1right), rest671)
end
|  ( 1023, ( ( _, ( _, VPEXTRB1left, VPEXTRB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 581.57 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpextrb)(*#line 8654.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPEXTRB1left, VPEXTRB1right), rest671)
end
|  ( 1024, ( ( _, ( _, VPEXTRD1left, VPEXTRD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 581.100 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpextrd)(*#line 8658.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPEXTRD1left, VPEXTRD1right), rest671)
end
|  ( 1025, ( ( _, ( _, VPEXTRQ1left, VPEXTRQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 581.142 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpextrq)(*#line 8662.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPEXTRQ1left, VPEXTRQ1right), rest671)
end
|  ( 1026, ( ( _, ( _, VPINSRB1left, VPINSRB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 581.184 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpinsrb)(*#line 8666.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPINSRB1left, VPINSRB1right), rest671)
end
|  ( 1027, ( ( _, ( _, VPINSRD1left, VPINSRD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 582.13 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpinsrd)(*#line 8670.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPINSRD1left, VPINSRD1right), rest671)
end
|  ( 1028, ( ( _, ( _, VPINSRQ1left, VPINSRQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 582.55 "InstructionSemantics.grm"*)(IMF_AVX_2, IS_AVX_2 Vpinsrq)(*#line 8674.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPINSRQ1left, VPINSRQ1right), rest671)
end
|  ( 1029, ( ( _, ( _, VFMADD132PD1left, VFMADD132PD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 584.16 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfmadd132pd)(*#line 8678.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFMADD132PD1left, VFMADD132PD1right), rest671)
end
|  ( 1030, ( ( _, ( _, VFMADD213PD1left, VFMADD213PD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 584.62 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfmadd213pd)(*#line 8682.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFMADD213PD1left, VFMADD213PD1right), rest671)
end
|  ( 1031, ( ( _, ( _, VFMADD231PD1left, VFMADD231PD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 584.108 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfmadd231pd)(*#line 8686.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFMADD231PD1left, VFMADD231PD1right), rest671)
end
|  ( 1032, ( ( _, ( _, VFMADD132PS1left, VFMADD132PS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 584.154 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfmadd132ps)(*#line 8690.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFMADD132PS1left, VFMADD132PS1right), rest671)
end
|  ( 1033, ( ( _, ( _, VFMADD213PS1left, VFMADD213PS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 585.17 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfmadd213ps)(*#line 8694.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFMADD213PS1left, VFMADD213PS1right), rest671)
end
|  ( 1034, ( ( _, ( _, VFMADD231PS1left, VFMADD231PS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 585.63 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfmadd231ps)(*#line 8698.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFMADD231PS1left, VFMADD231PS1right), rest671)
end
|  ( 1035, ( ( _, ( _, VFMADD132SD1left, VFMADD132SD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 585.109 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfmadd132sd)(*#line 8702.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFMADD132SD1left, VFMADD132SD1right), rest671)
end
|  ( 1036, ( ( _, ( _, VFMADD213SD1left, VFMADD213SD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 585.155 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfmadd213sd)(*#line 8706.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFMADD213SD1left, VFMADD213SD1right), rest671)
end
|  ( 1037, ( ( _, ( _, VFMADD231SD1left, VFMADD231SD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 586.17 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfmadd231sd)(*#line 8710.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFMADD231SD1left, VFMADD231SD1right), rest671)
end
|  ( 1038, ( ( _, ( _, VFMADD132SS1left, VFMADD132SS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 586.63 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfmadd132ss)(*#line 8714.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFMADD132SS1left, VFMADD132SS1right), rest671)
end
|  ( 1039, ( ( _, ( _, VFMADD213SS1left, VFMADD213SS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 586.109 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfmadd213ss)(*#line 8718.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFMADD213SS1left, VFMADD213SS1right), rest671)
end
|  ( 1040, ( ( _, ( _, VFMADD231SS1left, VFMADD231SS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 586.156 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfmadd231ss)(*#line 8722.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFMADD231SS1left, VFMADD231SS1right), rest671)
end
|  ( 1041, ( ( _, ( _, VFMADDSUB132PD1left, VFMADDSUB132PD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 587.20 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfmaddsub132pd)(*#line 8726.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFMADDSUB132PD1left, VFMADDSUB132PD1right), rest671)
end
|  ( 1042, ( ( _, ( _, VFMADDSUB213PD1left, VFMADDSUB213PD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 587.72 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfmaddsub213pd)(*#line 8730.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFMADDSUB213PD1left, VFMADDSUB213PD1right), rest671)
end
|  ( 1043, ( ( _, ( _, VFMADDSUB231PD1left, VFMADDSUB231PD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 587.124 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfmaddsub231pd)(*#line 8734.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFMADDSUB231PD1left, VFMADDSUB231PD1right), rest671)
end
|  ( 1044, ( ( _, ( _, VFMADDSUB132PS1left, VFMADDSUB132PS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 588.20 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfmaddsub132ps)(*#line 8738.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFMADDSUB132PS1left, VFMADDSUB132PS1right), rest671)
end
|  ( 1045, ( ( _, ( _, VFMADDSUB213PS1left, VFMADDSUB213PS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 588.72 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfmaddsub213ps)(*#line 8742.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFMADDSUB213PS1left, VFMADDSUB213PS1right), rest671)
end
|  ( 1046, ( ( _, ( _, VFMADDSUB231PS1left, VFMADDSUB231PS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 588.124 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfmaddsub231ps)(*#line 8746.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFMADDSUB231PS1left, VFMADDSUB231PS1right), rest671)
end
|  ( 1047, ( ( _, ( _, VFMSUBADD132PD1left, VFMSUBADD132PD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 589.20 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfmsubadd132pd)(*#line 8750.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFMSUBADD132PD1left, VFMSUBADD132PD1right), rest671)
end
|  ( 1048, ( ( _, ( _, VFMSUBADD213PD1left, VFMSUBADD213PD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 589.72 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfmsubadd213pd)(*#line 8754.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFMSUBADD213PD1left, VFMSUBADD213PD1right), rest671)
end
|  ( 1049, ( ( _, ( _, VFMSUBADD231PD1left, VFMSUBADD231PD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 589.125 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfmsubadd231pd)(*#line 8758.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFMSUBADD231PD1left, VFMSUBADD231PD1right), rest671)
end
|  ( 1050, ( ( _, ( _, VFMSUBADD132PS1left, VFMSUBADD132PS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 590.20 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfmsubadd132ps)(*#line 8762.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFMSUBADD132PS1left, VFMSUBADD132PS1right), rest671)
end
|  ( 1051, ( ( _, ( _, VFMSUBADD213PS1left, VFMSUBADD213PS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 590.72 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfmsubadd213ps)(*#line 8766.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFMSUBADD213PS1left, VFMSUBADD213PS1right), rest671)
end
|  ( 1052, ( ( _, ( _, VFMSUBADD231PS1left, VFMSUBADD231PS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 590.124 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfmsubadd231ps)(*#line 8770.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFMSUBADD231PS1left, VFMSUBADD231PS1right), rest671)
end
|  ( 1053, ( ( _, ( _, VFMSUB132PD1left, VFMSUB132PD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 591.17 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfmsub132pd)(*#line 8774.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFMSUB132PD1left, VFMSUB132PD1right), rest671)
end
|  ( 1054, ( ( _, ( _, VFMSUB213PD1left, VFMSUB213PD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 591.63 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfmsub213pd)(*#line 8778.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFMSUB213PD1left, VFMSUB213PD1right), rest671)
end
|  ( 1055, ( ( _, ( _, VFMSUB231PD1left, VFMSUB231PD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 591.109 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfmsub231pd)(*#line 8782.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFMSUB231PD1left, VFMSUB231PD1right), rest671)
end
|  ( 1056, ( ( _, ( _, VFMSUB132PS1left, VFMSUB132PS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 591.155 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfmsub132ps)(*#line 8786.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFMSUB132PS1left, VFMSUB132PS1right), rest671)
end
|  ( 1057, ( ( _, ( _, VFMSUB213PS1left, VFMSUB213PS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 592.17 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfmsub213ps)(*#line 8790.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFMSUB213PS1left, VFMSUB213PS1right), rest671)
end
|  ( 1058, ( ( _, ( _, VFMSUB231PS1left, VFMSUB231PS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 592.63 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfmsub231ps)(*#line 8794.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFMSUB231PS1left, VFMSUB231PS1right), rest671)
end
|  ( 1059, ( ( _, ( _, VFMSUB132SD1left, VFMSUB132SD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 592.110 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfmsub132sd)(*#line 8798.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFMSUB132SD1left, VFMSUB132SD1right), rest671)
end
|  ( 1060, ( ( _, ( _, VFMSUB213SD1left, VFMSUB213SD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 592.156 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfmsub213sd)(*#line 8802.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFMSUB213SD1left, VFMSUB213SD1right), rest671)
end
|  ( 1061, ( ( _, ( _, VFMSUB231SD1left, VFMSUB231SD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 593.17 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfmsub231sd)(*#line 8806.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFMSUB231SD1left, VFMSUB231SD1right), rest671)
end
|  ( 1062, ( ( _, ( _, VFMSUB132SS1left, VFMSUB132SS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 593.63 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfmsub132ss)(*#line 8810.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFMSUB132SS1left, VFMSUB132SS1right), rest671)
end
|  ( 1063, ( ( _, ( _, VFMSUB213SS1left, VFMSUB213SS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 593.109 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfmsub213ss)(*#line 8814.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFMSUB213SS1left, VFMSUB213SS1right), rest671)
end
|  ( 1064, ( ( _, ( _, VFMSUB231SS1left, VFMSUB231SS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 593.155 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfmsub231ss)(*#line 8818.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFMSUB231SS1left, VFMSUB231SS1right), rest671)
end
|  ( 1065, ( ( _, ( _, VFNMADD132PD1left, VFNMADD132PD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 594.18 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfnmadd132pd)(*#line 8822.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFNMADD132PD1left, VFNMADD132PD1right), rest671)
end
|  ( 1066, ( ( _, ( _, VFNMADD213PD1left, VFNMADD213PD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 594.66 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfnmadd213pd)(*#line 8826.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFNMADD213PD1left, VFNMADD213PD1right), rest671)
end
|  ( 1067, ( ( _, ( _, VFNMADD231PD1left, VFNMADD231PD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 594.114 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfnmadd231pd)(*#line 8830.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFNMADD231PD1left, VFNMADD231PD1right), rest671)
end
|  ( 1068, ( ( _, ( _, VFNMADD132PS1left, VFNMADD132PS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 594.162 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfnmadd132ps)(*#line 8834.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFNMADD132PS1left, VFNMADD132PS1right), rest671)
end
|  ( 1069, ( ( _, ( _, VFNMADD213PS1left, VFNMADD213PS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 595.19 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfnmadd213ps)(*#line 8838.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFNMADD213PS1left, VFNMADD213PS1right), rest671)
end
|  ( 1070, ( ( _, ( _, VFNMADD231PS1left, VFNMADD231PS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 595.67 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfnmadd231ps)(*#line 8842.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFNMADD231PS1left, VFNMADD231PS1right), rest671)
end
|  ( 1071, ( ( _, ( _, VFNMADD132SD1left, VFNMADD132SD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 595.115 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfnmadd132sd)(*#line 8846.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFNMADD132SD1left, VFNMADD132SD1right), rest671)
end
|  ( 1072, ( ( _, ( _, VFNMADD213SD1left, VFNMADD213SD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 595.163 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfnmadd213sd)(*#line 8850.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFNMADD213SD1left, VFNMADD213SD1right), rest671)
end
|  ( 1073, ( ( _, ( _, VFNMADD231SD1left, VFNMADD231SD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 596.18 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfnmadd231sd)(*#line 8854.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFNMADD231SD1left, VFNMADD231SD1right), rest671)
end
|  ( 1074, ( ( _, ( _, VFNMADD132SS1left, VFNMADD132SS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 596.66 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfnmadd132ss)(*#line 8858.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFNMADD132SS1left, VFNMADD132SS1right), rest671)
end
|  ( 1075, ( ( _, ( _, VFNMADD213SS1left, VFNMADD213SS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 596.114 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfnmadd213ss)(*#line 8862.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFNMADD213SS1left, VFNMADD213SS1right), rest671)
end
|  ( 1076, ( ( _, ( _, VFNMADD231SS1left, VFNMADD231SS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 596.162 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfnmadd231ss)(*#line 8866.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFNMADD231SS1left, VFNMADD231SS1right), rest671)
end
|  ( 1077, ( ( _, ( _, VFNMSUB132PD1left, VFNMSUB132PD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 597.18 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfnmsub132pd)(*#line 8870.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFNMSUB132PD1left, VFNMSUB132PD1right), rest671)
end
|  ( 1078, ( ( _, ( _, VFNMSUB213PD1left, VFNMSUB213PD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 597.66 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfnmsub213pd)(*#line 8874.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFNMSUB213PD1left, VFNMSUB213PD1right), rest671)
end
|  ( 1079, ( ( _, ( _, VFNMSUB231PD1left, VFNMSUB231PD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 597.115 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfnmsub231pd)(*#line 8878.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFNMSUB231PD1left, VFNMSUB231PD1right), rest671)
end
|  ( 1080, ( ( _, ( _, VFNMSUB132PS1left, VFNMSUB132PS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 597.163 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfnmsub132ps)(*#line 8882.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFNMSUB132PS1left, VFNMSUB132PS1right), rest671)
end
|  ( 1081, ( ( _, ( _, VFNMSUB213PS1left, VFNMSUB213PS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 598.18 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfnmsub213ps)(*#line 8886.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFNMSUB213PS1left, VFNMSUB213PS1right), rest671)
end
|  ( 1082, ( ( _, ( _, VFNMSUB231PS1left, VFNMSUB231PS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 598.66 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfnmsub231ps)(*#line 8890.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFNMSUB231PS1left, VFNMSUB231PS1right), rest671)
end
|  ( 1083, ( ( _, ( _, VFNMSUB132SD1left, VFNMSUB132SD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 598.114 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfnmsub132sd)(*#line 8894.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFNMSUB132SD1left, VFNMSUB132SD1right), rest671)
end
|  ( 1084, ( ( _, ( _, VFNMSUB213SD1left, VFNMSUB213SD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 598.162 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfnmsub213sd)(*#line 8898.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFNMSUB213SD1left, VFNMSUB213SD1right), rest671)
end
|  ( 1085, ( ( _, ( _, VFNMSUB231SD1left, VFNMSUB231SD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 599.18 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfnmsub231sd)(*#line 8902.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFNMSUB231SD1left, VFNMSUB231SD1right), rest671)
end
|  ( 1086, ( ( _, ( _, VFNMSUB132SS1left, VFNMSUB132SS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 599.66 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfnmsub132ss)(*#line 8906.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFNMSUB132SS1left, VFNMSUB132SS1right), rest671)
end
|  ( 1087, ( ( _, ( _, VFNMSUB213SS1left, VFNMSUB213SS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 599.114 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfnmsub213ss)(*#line 8910.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFNMSUB213SS1left, VFNMSUB213SS1right), rest671)
end
|  ( 1088, ( ( _, ( _, VFNMSUB231SS1left, VFNMSUB231SS1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 599.162 "InstructionSemantics.grm"*)(IMF_FMA, IS_FMA Vfnmsub231ss)(*#line 8914.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VFNMSUB231SS1left, VFNMSUB231SS1right), rest671)
end
|  ( 1089, ( ( _, ( _, ANDN1left, ANDN1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 601.9 "InstructionSemantics.grm"*)(IMF_BM1_BM2, IS_BM1_BM2 Andn)(*#line 8918.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, ANDN1left, ANDN1right), rest671)
end
|  ( 1090, ( ( _, ( _, BEXTR1left, BEXTR1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 601.50 "InstructionSemantics.grm"*)(IMF_BM1_BM2, IS_BM1_BM2 Bextr)(*#line 8922.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, BEXTR1left, BEXTR1right), rest671)
end
|  ( 1091, ( ( _, ( _, BLSI1left, BLSI1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 601.91 "InstructionSemantics.grm"*)(IMF_BM1_BM2, IS_BM1_BM2 Blsi)(*#line 8926.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, BLSI1left, BLSI1right), rest671)
end
|  ( 1092, ( ( _, ( _, BLSMSK1left, BLSMSK1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 601.133 "InstructionSemantics.grm"*)(IMF_BM1_BM2, IS_BM1_BM2 Blsmsk)(*#line 8930.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, BLSMSK1left, BLSMSK1right), rest671)
end
|  ( 1093, ( ( _, ( _, BLSR1left, BLSR1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 601.175 "InstructionSemantics.grm"*)(IMF_BM1_BM2, IS_BM1_BM2 Blsr)(*#line 8934.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, BLSR1left, BLSR1right), rest671)
end
|  ( 1094, ( ( _, ( _, BZHI1left, BZHI1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 602.10 "InstructionSemantics.grm"*)(IMF_BM1_BM2, IS_BM1_BM2 Bzhi)(*#line 8938.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, BZHI1left, BZHI1right), rest671)
end
|  ( 1095, ( ( _, ( _, LZCNT1left, LZCNT1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 602.51 "InstructionSemantics.grm"*)(IMF_BM1_BM2, IS_BM1_BM2 Lzcnt)(*#line 8942.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, LZCNT1left, LZCNT1right), rest671)
end
|  ( 1096, ( ( _, ( _, MULX1left, MULX1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 602.92 "InstructionSemantics.grm"*)(IMF_BM1_BM2, IS_BM1_BM2 Mulx)(*#line 8946.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, MULX1left, MULX1right), rest671)
end
|  ( 1097, ( ( _, ( _, PDEP1left, PDEP1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 602.132 "InstructionSemantics.grm"*)(IMF_BM1_BM2, IS_BM1_BM2 Pdep)(*#line 8950.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PDEP1left, PDEP1right), rest671)
end
|  ( 1098, ( ( _, ( _, PEXT1left, PEXT1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 602.172 "InstructionSemantics.grm"*)(IMF_BM1_BM2, IS_BM1_BM2 Pext)(*#line 8954.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, PEXT1left, PEXT1right), rest671)
end
|  ( 1099, ( ( _, ( _, RORX1left, RORX1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 602.212 "InstructionSemantics.grm"*)(IMF_BM1_BM2, IS_BM1_BM2 Rorx)(*#line 8958.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, RORX1left, RORX1right), rest671)
end
|  ( 1100, ( ( _, ( _, SARX1left, SARX1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 603.10 "InstructionSemantics.grm"*)(IMF_BM1_BM2, IS_BM1_BM2 Sarx)(*#line 8962.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SARX1left, SARX1right), rest671)
end
|  ( 1101, ( ( _, ( _, SHLX1left, SHLX1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 603.50 "InstructionSemantics.grm"*)(IMF_BM1_BM2, IS_BM1_BM2 Shlx)(*#line 8966.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SHLX1left, SHLX1right), rest671)
end
|  ( 1102, ( ( _, ( _, SHRX1left, SHRX1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 603.90 "InstructionSemantics.grm"*)(IMF_BM1_BM2, IS_BM1_BM2 Shrx)(*#line 8970.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, SHRX1left, SHRX1right), rest671)
end
|  ( 1103, ( ( _, ( _, TZCNT1left, TZCNT1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 603.131 "InstructionSemantics.grm"*)(IMF_BM1_BM2, IS_BM1_BM2 Tzcnt)(*#line 8974.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, TZCNT1left, TZCNT1right), rest671)
end
|  ( 1104, ( ( _, ( _, VPBROADCASTB1left, VPBROADCASTB1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 605.17 "InstructionSemantics.grm"*)(IMF_AVX_512_VL_DQ_BW, IS_AVX_512_VL_DQ_BW Vpbroadcastb)(*#line 8978.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPBROADCASTB1left, VPBROADCASTB1right), rest671)
end
|  ( 1105, ( ( _, ( _, VPBROADCASTD1left, VPBROADCASTD1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 605.91 "InstructionSemantics.grm"*)(IMF_AVX_512_VL_DQ_BW, IS_AVX_512_VL_DQ_BW Vpbroadcastd)(*#line 8982.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPBROADCASTD1left, VPBROADCASTD1right), rest671)
end
|  ( 1106, ( ( _, ( _, VPBROADCASTQ1left, VPBROADCASTQ1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 605.165 "InstructionSemantics.grm"*)(IMF_AVX_512_VL_DQ_BW, IS_AVX_512_VL_DQ_BW Vpbroadcastq)(*#line 8986.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPBROADCASTQ1left, VPBROADCASTQ1right), rest671)
end
|  ( 1107, ( ( _, ( _, VPBROADCASTW1left, VPBROADCASTW1right)) :: rest671)) => let val  result = MlyValue.INSTR_NMENONIC (fn _ => ((*#line 606.18 "InstructionSemantics.grm"*)(IMF_AVX_512_VL_DQ_BW, IS_AVX_512_VL_DQ_BW Vpbroadcastw)(*#line 8990.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 5, ( result, VPBROADCASTW1left, VPBROADCASTW1right), rest671)
end
|  ( 1108, ( ( _, ( _, RH1left, RH1right)) :: rest671)) => let val  result = MlyValue.REG_TYPE (fn _ => ((*#line 609.8 "InstructionSemantics.grm"*)9(*#line 8994.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 6, ( result, RH1left, RH1right), rest671)
end
|  ( 1109, ( ( _, ( _, R81left, R81right)) :: rest671)) => let val  result = MlyValue.REG_TYPE (fn _ => ((*#line 609.17 "InstructionSemantics.grm"*)8(*#line 8998.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 6, ( result, R81left, R81right), rest671)
end
|  ( 1110, ( ( _, ( _, R161left, R161right)) :: rest671)) => let val  result = MlyValue.REG_TYPE (fn _ => ((*#line 609.27 "InstructionSemantics.grm"*)16(*#line 9002.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 6, ( result, R161left, R161right), rest671)
end
|  ( 1111, ( ( _, ( _, R321left, R321right)) :: rest671)) => let val  result = MlyValue.REG_TYPE (fn _ => ((*#line 609.38 "InstructionSemantics.grm"*)32(*#line 9006.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 6, ( result, R321left, R321right), rest671)
end
|  ( 1112, ( ( _, ( _, R641left, R641right)) :: rest671)) => let val  result = MlyValue.REG_TYPE (fn _ => ((*#line 609.49 "InstructionSemantics.grm"*)64(*#line 9010.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 6, ( result, R641left, R641right), rest671)
end
|  ( 1113, ( ( _, ( _, XMM1left, XMM1right)) :: rest671)) => let val  result = MlyValue.REG_TYPE (fn _ => ((*#line 609.60 "InstructionSemantics.grm"*)128(*#line 9014.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 6, ( result, XMM1left, XMM1right), rest671)
end
|  ( 1114, ( ( _, ( _, YMM1left, YMM1right)) :: rest671)) => let val  result = MlyValue.REG_TYPE (fn _ => ((*#line 609.72 "InstructionSemantics.grm"*)256(*#line 9018.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 6, ( result, YMM1left, YMM1right), rest671)
end
|  ( 1115, ( ( _, ( _, ZMM1left, ZMM1right)) :: rest671)) => let val  result = MlyValue.REG_TYPE (fn _ => ((*#line 609.84 "InstructionSemantics.grm"*)512(*#line 9022.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 6, ( result, ZMM1left, ZMM1right), rest671)
end
|  ( 1116, ( ( _, ( _, M81left, M81right)) :: rest671)) => let val  result = MlyValue.MEMORY_SIZE (fn _ => ((*#line 612.8 "InstructionSemantics.grm"*)8(*#line 9026.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 12, ( result, M81left, M81right), rest671)
end
|  ( 1117, ( ( _, ( _, M161left, M161right)) :: rest671)) => let val  result = MlyValue.MEMORY_SIZE (fn _ => ((*#line 612.18 "InstructionSemantics.grm"*)16(*#line 9030.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 12, ( result, M161left, M161right), rest671)
end
|  ( 1118, ( ( _, ( _, M321left, M321right)) :: rest671)) => let val  result = MlyValue.MEMORY_SIZE (fn _ => ((*#line 612.29 "InstructionSemantics.grm"*)32(*#line 9034.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 12, ( result, M321left, M321right), rest671)
end
|  ( 1119, ( ( _, ( _, M641left, M641right)) :: rest671)) => let val  result = MlyValue.MEMORY_SIZE (fn _ => ((*#line 612.40 "InstructionSemantics.grm"*)64(*#line 9038.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 12, ( result, M641left, M641right), rest671)
end
|  ( 1120, ( ( _, ( _, M1281left, M1281right)) :: rest671)) => let val  result = MlyValue.MEMORY_SIZE (fn _ => ((*#line 612.52 "InstructionSemantics.grm"*)128(*#line 9042.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 12, ( result, M1281left, M1281right), rest671)
end
|  ( 1121, ( ( _, ( _, M2561left, M2561right)) :: rest671)) => let val  result = MlyValue.MEMORY_SIZE (fn _ => ((*#line 612.65 "InstructionSemantics.grm"*)256(*#line 9046.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 12, ( result, M2561left, M2561right), rest671)
end
|  ( 1122, ( ( _, ( MlyValue.REG_TYPE REG_TYPE1, REG_TYPE1left, REG_TYPE1right)) :: rest671)) => let val  result = MlyValue.OPERAND_DEST_SIG (fn _ => let val  (REG_TYPE as REG_TYPE1) = REG_TYPE1 ()
 in ((*#line 615.39 "InstructionSemantics.grm"*)Reg_sig REG_TYPE(*#line 9050.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 7, ( result, REG_TYPE1left, REG_TYPE1right), rest671)
end
|  ( 1123, ( ( _, ( MlyValue.MEMORY_SIZE MEMORY_SIZE1, MEMORY_SIZE1left, MEMORY_SIZE1right)) :: rest671)) => let val  result = MlyValue.OPERAND_DEST_SIG (fn _ => let val  (MEMORY_SIZE as MEMORY_SIZE1) = MEMORY_SIZE1 ()
 in ((*#line 616.37 "InstructionSemantics.grm"*)Memory_sig MEMORY_SIZE(*#line 9056.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 7, ( result, MEMORY_SIZE1left, MEMORY_SIZE1right), rest671)
end
|  ( 1124, ( ( _, ( _, IMM81left, IMM81right)) :: rest671)) => let val  result = MlyValue.IMMEDIATE_SIG (fn _ => ((*#line 619.12 "InstructionSemantics.grm"*)8(*#line 9062.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 11, ( result, IMM81left, IMM81right), rest671)
end
|  ( 1125, ( ( _, ( _, IMM161left, IMM161right)) :: rest671)) => let val  result = MlyValue.IMMEDIATE_SIG (fn _ => ((*#line 619.24 "InstructionSemantics.grm"*)16(*#line 9066.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 11, ( result, IMM161left, IMM161right), rest671)
end
|  ( 1126, ( ( _, ( _, IMM321left, IMM321right)) :: rest671)) => let val  result = MlyValue.IMMEDIATE_SIG (fn _ => ((*#line 620.12 "InstructionSemantics.grm"*)32(*#line 9070.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 11, ( result, IMM321left, IMM321right), rest671)
end
|  ( 1127, ( ( _, ( _, IMM641left, IMM641right)) :: rest671)) => let val  result = MlyValue.IMMEDIATE_SIG (fn _ => ((*#line 620.25 "InstructionSemantics.grm"*)64(*#line 9074.1 "InstructionSemantics.grm.sml"*)
))
 in ( LrTable.NT 11, ( result, IMM641left, IMM641right), rest671)
end
|  ( 1128, ( ( _, ( MlyValue.OPERAND_DEST_SIG OPERAND_DEST_SIG1, OPERAND_DEST_SIG1left, OPERAND_DEST_SIG1right)) :: rest671)) => let val  result = MlyValue.OPERAND_SRC_SIG (fn _ => let val  (OPERAND_DEST_SIG as OPERAND_DEST_SIG1) = OPERAND_DEST_SIG1 ()
 in ((*#line 623.25 "InstructionSemantics.grm"*)Storage_sig OPERAND_DEST_SIG(*#line 9078.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 8, ( result, OPERAND_DEST_SIG1left, OPERAND_DEST_SIG1right), rest671)
end
|  ( 1129, ( ( _, ( MlyValue.IMMEDIATE_SIG IMMEDIATE_SIG1, IMMEDIATE_SIG1left, IMMEDIATE_SIG1right)) :: rest671)) => let val  result = MlyValue.OPERAND_SRC_SIG (fn _ => let val  IMMEDIATE_SIG1 = IMMEDIATE_SIG1 ()
 in ((*#line 624.39 "InstructionSemantics.grm"*)Immediate_sig(*#line 9084.1 "InstructionSemantics.grm.sml"*)
)
end)
 in ( LrTable.NT 8, ( result, IMMEDIATE_SIG1left, IMMEDIATE_SIG1right), rest671)
end
| _ => raise (mlyAction i392)
end
val void = MlyValue.VOID
val extract = fn a => (fn MlyValue.START x => x
| _ => let exception ParseInternal
	in raise ParseInternal end) a ()
end
end
structure Tokens : InstructionSemantics_TOKENS =
struct
type svalue = ParserData.svalue
type ('a,'b) token = ('a,'b) Token.token
fun NAT (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 0,(ParserData.MlyValue.NAT (fn () => i),p1,p2))
fun AAA (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1,(ParserData.MlyValue.VOID,p1,p2))
fun AAD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 2,(ParserData.MlyValue.VOID,p1,p2))
fun AAM (p1,p2) = Token.TOKEN (ParserData.LrTable.T 3,(ParserData.MlyValue.VOID,p1,p2))
fun AAS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 4,(ParserData.MlyValue.VOID,p1,p2))
fun ADC (p1,p2) = Token.TOKEN (ParserData.LrTable.T 5,(ParserData.MlyValue.VOID,p1,p2))
fun ADD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 6,(ParserData.MlyValue.VOID,p1,p2))
fun AND (p1,p2) = Token.TOKEN (ParserData.LrTable.T 7,(ParserData.MlyValue.VOID,p1,p2))
fun CALL (p1,p2) = Token.TOKEN (ParserData.LrTable.T 8,(ParserData.MlyValue.VOID,p1,p2))
fun CBW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 9,(ParserData.MlyValue.VOID,p1,p2))
fun CLC (p1,p2) = Token.TOKEN (ParserData.LrTable.T 10,(ParserData.MlyValue.VOID,p1,p2))
fun CLD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 11,(ParserData.MlyValue.VOID,p1,p2))
fun CLI (p1,p2) = Token.TOKEN (ParserData.LrTable.T 12,(ParserData.MlyValue.VOID,p1,p2))
fun CMC (p1,p2) = Token.TOKEN (ParserData.LrTable.T 13,(ParserData.MlyValue.VOID,p1,p2))
fun CMP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 14,(ParserData.MlyValue.VOID,p1,p2))
fun CMPSB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 15,(ParserData.MlyValue.VOID,p1,p2))
fun CWD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 16,(ParserData.MlyValue.VOID,p1,p2))
fun DAA (p1,p2) = Token.TOKEN (ParserData.LrTable.T 17,(ParserData.MlyValue.VOID,p1,p2))
fun DAS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 18,(ParserData.MlyValue.VOID,p1,p2))
fun DEC (p1,p2) = Token.TOKEN (ParserData.LrTable.T 19,(ParserData.MlyValue.VOID,p1,p2))
fun DIV (p1,p2) = Token.TOKEN (ParserData.LrTable.T 20,(ParserData.MlyValue.VOID,p1,p2))
fun ESC (p1,p2) = Token.TOKEN (ParserData.LrTable.T 21,(ParserData.MlyValue.VOID,p1,p2))
fun HLT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 22,(ParserData.MlyValue.VOID,p1,p2))
fun IDIV (p1,p2) = Token.TOKEN (ParserData.LrTable.T 23,(ParserData.MlyValue.VOID,p1,p2))
fun IMUL (p1,p2) = Token.TOKEN (ParserData.LrTable.T 24,(ParserData.MlyValue.VOID,p1,p2))
fun IN (p1,p2) = Token.TOKEN (ParserData.LrTable.T 25,(ParserData.MlyValue.VOID,p1,p2))
fun INC (p1,p2) = Token.TOKEN (ParserData.LrTable.T 26,(ParserData.MlyValue.VOID,p1,p2))
fun INT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 27,(ParserData.MlyValue.VOID,p1,p2))
fun INTO (p1,p2) = Token.TOKEN (ParserData.LrTable.T 28,(ParserData.MlyValue.VOID,p1,p2))
fun IRET (p1,p2) = Token.TOKEN (ParserData.LrTable.T 29,(ParserData.MlyValue.VOID,p1,p2))
fun JA (p1,p2) = Token.TOKEN (ParserData.LrTable.T 30,(ParserData.MlyValue.VOID,p1,p2))
fun JAE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 31,(ParserData.MlyValue.VOID,p1,p2))
fun JB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 32,(ParserData.MlyValue.VOID,p1,p2))
fun JBE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 33,(ParserData.MlyValue.VOID,p1,p2))
fun JC (p1,p2) = Token.TOKEN (ParserData.LrTable.T 34,(ParserData.MlyValue.VOID,p1,p2))
fun JE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 35,(ParserData.MlyValue.VOID,p1,p2))
fun JG (p1,p2) = Token.TOKEN (ParserData.LrTable.T 36,(ParserData.MlyValue.VOID,p1,p2))
fun JGE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 37,(ParserData.MlyValue.VOID,p1,p2))
fun JL (p1,p2) = Token.TOKEN (ParserData.LrTable.T 38,(ParserData.MlyValue.VOID,p1,p2))
fun JLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 39,(ParserData.MlyValue.VOID,p1,p2))
fun JNA (p1,p2) = Token.TOKEN (ParserData.LrTable.T 40,(ParserData.MlyValue.VOID,p1,p2))
fun JNAE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 41,(ParserData.MlyValue.VOID,p1,p2))
fun JNB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 42,(ParserData.MlyValue.VOID,p1,p2))
fun JNBE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 43,(ParserData.MlyValue.VOID,p1,p2))
fun JNC (p1,p2) = Token.TOKEN (ParserData.LrTable.T 44,(ParserData.MlyValue.VOID,p1,p2))
fun JNE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 45,(ParserData.MlyValue.VOID,p1,p2))
fun JNG (p1,p2) = Token.TOKEN (ParserData.LrTable.T 46,(ParserData.MlyValue.VOID,p1,p2))
fun JNGE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 47,(ParserData.MlyValue.VOID,p1,p2))
fun JNL (p1,p2) = Token.TOKEN (ParserData.LrTable.T 48,(ParserData.MlyValue.VOID,p1,p2))
fun JNLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 49,(ParserData.MlyValue.VOID,p1,p2))
fun JNO (p1,p2) = Token.TOKEN (ParserData.LrTable.T 50,(ParserData.MlyValue.VOID,p1,p2))
fun JNP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 51,(ParserData.MlyValue.VOID,p1,p2))
fun JNS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 52,(ParserData.MlyValue.VOID,p1,p2))
fun JNZ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 53,(ParserData.MlyValue.VOID,p1,p2))
fun JO (p1,p2) = Token.TOKEN (ParserData.LrTable.T 54,(ParserData.MlyValue.VOID,p1,p2))
fun JP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 55,(ParserData.MlyValue.VOID,p1,p2))
fun JPE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 56,(ParserData.MlyValue.VOID,p1,p2))
fun JPO (p1,p2) = Token.TOKEN (ParserData.LrTable.T 57,(ParserData.MlyValue.VOID,p1,p2))
fun JS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 58,(ParserData.MlyValue.VOID,p1,p2))
fun JZ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 59,(ParserData.MlyValue.VOID,p1,p2))
fun JMP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 60,(ParserData.MlyValue.VOID,p1,p2))
fun LAHF (p1,p2) = Token.TOKEN (ParserData.LrTable.T 61,(ParserData.MlyValue.VOID,p1,p2))
fun LDS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 62,(ParserData.MlyValue.VOID,p1,p2))
fun LEA (p1,p2) = Token.TOKEN (ParserData.LrTable.T 63,(ParserData.MlyValue.VOID,p1,p2))
fun LES (p1,p2) = Token.TOKEN (ParserData.LrTable.T 64,(ParserData.MlyValue.VOID,p1,p2))
fun LOCK (p1,p2) = Token.TOKEN (ParserData.LrTable.T 65,(ParserData.MlyValue.VOID,p1,p2))
fun LODSB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 66,(ParserData.MlyValue.VOID,p1,p2))
fun LODSW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 67,(ParserData.MlyValue.VOID,p1,p2))
fun LOOP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 68,(ParserData.MlyValue.VOID,p1,p2))
fun LOOPE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 69,(ParserData.MlyValue.VOID,p1,p2))
fun LOOPNE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 70,(ParserData.MlyValue.VOID,p1,p2))
fun LOOPNZ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 71,(ParserData.MlyValue.VOID,p1,p2))
fun LOOPZ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 72,(ParserData.MlyValue.VOID,p1,p2))
fun MOV (p1,p2) = Token.TOKEN (ParserData.LrTable.T 73,(ParserData.MlyValue.VOID,p1,p2))
fun MOVSB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 74,(ParserData.MlyValue.VOID,p1,p2))
fun MOVSW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 75,(ParserData.MlyValue.VOID,p1,p2))
fun MUL (p1,p2) = Token.TOKEN (ParserData.LrTable.T 76,(ParserData.MlyValue.VOID,p1,p2))
fun NEG (p1,p2) = Token.TOKEN (ParserData.LrTable.T 77,(ParserData.MlyValue.VOID,p1,p2))
fun NOP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 78,(ParserData.MlyValue.VOID,p1,p2))
fun NOT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 79,(ParserData.MlyValue.VOID,p1,p2))
fun OR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 80,(ParserData.MlyValue.VOID,p1,p2))
fun OUT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 81,(ParserData.MlyValue.VOID,p1,p2))
fun POP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 82,(ParserData.MlyValue.VOID,p1,p2))
fun POPF (p1,p2) = Token.TOKEN (ParserData.LrTable.T 83,(ParserData.MlyValue.VOID,p1,p2))
fun PUSH (p1,p2) = Token.TOKEN (ParserData.LrTable.T 84,(ParserData.MlyValue.VOID,p1,p2))
fun PUSHF (p1,p2) = Token.TOKEN (ParserData.LrTable.T 85,(ParserData.MlyValue.VOID,p1,p2))
fun RCL (p1,p2) = Token.TOKEN (ParserData.LrTable.T 86,(ParserData.MlyValue.VOID,p1,p2))
fun RCR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 87,(ParserData.MlyValue.VOID,p1,p2))
fun RET (p1,p2) = Token.TOKEN (ParserData.LrTable.T 88,(ParserData.MlyValue.VOID,p1,p2))
fun RETN (p1,p2) = Token.TOKEN (ParserData.LrTable.T 89,(ParserData.MlyValue.VOID,p1,p2))
fun RETF (p1,p2) = Token.TOKEN (ParserData.LrTable.T 90,(ParserData.MlyValue.VOID,p1,p2))
fun ROL (p1,p2) = Token.TOKEN (ParserData.LrTable.T 91,(ParserData.MlyValue.VOID,p1,p2))
fun ROR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 92,(ParserData.MlyValue.VOID,p1,p2))
fun SAHF (p1,p2) = Token.TOKEN (ParserData.LrTable.T 93,(ParserData.MlyValue.VOID,p1,p2))
fun SAL (p1,p2) = Token.TOKEN (ParserData.LrTable.T 94,(ParserData.MlyValue.VOID,p1,p2))
fun SAR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 95,(ParserData.MlyValue.VOID,p1,p2))
fun SBB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 96,(ParserData.MlyValue.VOID,p1,p2))
fun SCASB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 97,(ParserData.MlyValue.VOID,p1,p2))
fun SCASW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 98,(ParserData.MlyValue.VOID,p1,p2))
fun SHL (p1,p2) = Token.TOKEN (ParserData.LrTable.T 99,(ParserData.MlyValue.VOID,p1,p2))
fun SHR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 100,(ParserData.MlyValue.VOID,p1,p2))
fun STC (p1,p2) = Token.TOKEN (ParserData.LrTable.T 101,(ParserData.MlyValue.VOID,p1,p2))
fun STD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 102,(ParserData.MlyValue.VOID,p1,p2))
fun STI (p1,p2) = Token.TOKEN (ParserData.LrTable.T 103,(ParserData.MlyValue.VOID,p1,p2))
fun STOSB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 104,(ParserData.MlyValue.VOID,p1,p2))
fun STOSW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 105,(ParserData.MlyValue.VOID,p1,p2))
fun SUB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 106,(ParserData.MlyValue.VOID,p1,p2))
fun TEST (p1,p2) = Token.TOKEN (ParserData.LrTable.T 107,(ParserData.MlyValue.VOID,p1,p2))
fun WAIT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 108,(ParserData.MlyValue.VOID,p1,p2))
fun XCHG (p1,p2) = Token.TOKEN (ParserData.LrTable.T 109,(ParserData.MlyValue.VOID,p1,p2))
fun XLAT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 110,(ParserData.MlyValue.VOID,p1,p2))
fun XOR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 111,(ParserData.MlyValue.VOID,p1,p2))
fun F2XM1 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 112,(ParserData.MlyValue.VOID,p1,p2))
fun FABS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 113,(ParserData.MlyValue.VOID,p1,p2))
fun FADD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 114,(ParserData.MlyValue.VOID,p1,p2))
fun FADDP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 115,(ParserData.MlyValue.VOID,p1,p2))
fun FBLD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 116,(ParserData.MlyValue.VOID,p1,p2))
fun FBSTP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 117,(ParserData.MlyValue.VOID,p1,p2))
fun FCHS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 118,(ParserData.MlyValue.VOID,p1,p2))
fun FCLEX (p1,p2) = Token.TOKEN (ParserData.LrTable.T 119,(ParserData.MlyValue.VOID,p1,p2))
fun FCOM (p1,p2) = Token.TOKEN (ParserData.LrTable.T 120,(ParserData.MlyValue.VOID,p1,p2))
fun FCOMP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 121,(ParserData.MlyValue.VOID,p1,p2))
fun FCOMPP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 122,(ParserData.MlyValue.VOID,p1,p2))
fun DECSTP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 123,(ParserData.MlyValue.VOID,p1,p2))
fun FDISI (p1,p2) = Token.TOKEN (ParserData.LrTable.T 124,(ParserData.MlyValue.VOID,p1,p2))
fun FDIV (p1,p2) = Token.TOKEN (ParserData.LrTable.T 125,(ParserData.MlyValue.VOID,p1,p2))
fun FDIVP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 126,(ParserData.MlyValue.VOID,p1,p2))
fun FDIVR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 127,(ParserData.MlyValue.VOID,p1,p2))
fun FDIVRP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 128,(ParserData.MlyValue.VOID,p1,p2))
fun FENI (p1,p2) = Token.TOKEN (ParserData.LrTable.T 129,(ParserData.MlyValue.VOID,p1,p2))
fun FFREE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 130,(ParserData.MlyValue.VOID,p1,p2))
fun FIADD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 131,(ParserData.MlyValue.VOID,p1,p2))
fun FICOM (p1,p2) = Token.TOKEN (ParserData.LrTable.T 132,(ParserData.MlyValue.VOID,p1,p2))
fun FICOMP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 133,(ParserData.MlyValue.VOID,p1,p2))
fun FIDIV (p1,p2) = Token.TOKEN (ParserData.LrTable.T 134,(ParserData.MlyValue.VOID,p1,p2))
fun FIDIVR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 135,(ParserData.MlyValue.VOID,p1,p2))
fun FILD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 136,(ParserData.MlyValue.VOID,p1,p2))
fun FIMUL (p1,p2) = Token.TOKEN (ParserData.LrTable.T 137,(ParserData.MlyValue.VOID,p1,p2))
fun FINCSTP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 138,(ParserData.MlyValue.VOID,p1,p2))
fun FINIT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 139,(ParserData.MlyValue.VOID,p1,p2))
fun FIST (p1,p2) = Token.TOKEN (ParserData.LrTable.T 140,(ParserData.MlyValue.VOID,p1,p2))
fun FISTP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 141,(ParserData.MlyValue.VOID,p1,p2))
fun FISUB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 142,(ParserData.MlyValue.VOID,p1,p2))
fun ISUBR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 143,(ParserData.MlyValue.VOID,p1,p2))
fun FLD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 144,(ParserData.MlyValue.VOID,p1,p2))
fun FLD1 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 145,(ParserData.MlyValue.VOID,p1,p2))
fun FLDCW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 146,(ParserData.MlyValue.VOID,p1,p2))
fun FLDENV (p1,p2) = Token.TOKEN (ParserData.LrTable.T 147,(ParserData.MlyValue.VOID,p1,p2))
fun FLDENVW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 148,(ParserData.MlyValue.VOID,p1,p2))
fun FLDL2E (p1,p2) = Token.TOKEN (ParserData.LrTable.T 149,(ParserData.MlyValue.VOID,p1,p2))
fun FLDL2T (p1,p2) = Token.TOKEN (ParserData.LrTable.T 150,(ParserData.MlyValue.VOID,p1,p2))
fun FLDLG2 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 151,(ParserData.MlyValue.VOID,p1,p2))
fun FLDLN2 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 152,(ParserData.MlyValue.VOID,p1,p2))
fun LDPI (p1,p2) = Token.TOKEN (ParserData.LrTable.T 153,(ParserData.MlyValue.VOID,p1,p2))
fun FLDZ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 154,(ParserData.MlyValue.VOID,p1,p2))
fun FMUL (p1,p2) = Token.TOKEN (ParserData.LrTable.T 155,(ParserData.MlyValue.VOID,p1,p2))
fun FMULP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 156,(ParserData.MlyValue.VOID,p1,p2))
fun FNCLEX (p1,p2) = Token.TOKEN (ParserData.LrTable.T 157,(ParserData.MlyValue.VOID,p1,p2))
fun FNDISI (p1,p2) = Token.TOKEN (ParserData.LrTable.T 158,(ParserData.MlyValue.VOID,p1,p2))
fun FNENI (p1,p2) = Token.TOKEN (ParserData.LrTable.T 159,(ParserData.MlyValue.VOID,p1,p2))
fun FNINIT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 160,(ParserData.MlyValue.VOID,p1,p2))
fun FNOP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 161,(ParserData.MlyValue.VOID,p1,p2))
fun FNSAVE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 162,(ParserData.MlyValue.VOID,p1,p2))
fun FNSAVEW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 163,(ParserData.MlyValue.VOID,p1,p2))
fun FNSTCW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 164,(ParserData.MlyValue.VOID,p1,p2))
fun FNSTENV (p1,p2) = Token.TOKEN (ParserData.LrTable.T 165,(ParserData.MlyValue.VOID,p1,p2))
fun FNSTENVW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 166,(ParserData.MlyValue.VOID,p1,p2))
fun FNSTSW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 167,(ParserData.MlyValue.VOID,p1,p2))
fun FPATAN (p1,p2) = Token.TOKEN (ParserData.LrTable.T 168,(ParserData.MlyValue.VOID,p1,p2))
fun FPREM (p1,p2) = Token.TOKEN (ParserData.LrTable.T 169,(ParserData.MlyValue.VOID,p1,p2))
fun FPTAN (p1,p2) = Token.TOKEN (ParserData.LrTable.T 170,(ParserData.MlyValue.VOID,p1,p2))
fun FRNDINT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 171,(ParserData.MlyValue.VOID,p1,p2))
fun FRSTOR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 172,(ParserData.MlyValue.VOID,p1,p2))
fun FRSTORW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 173,(ParserData.MlyValue.VOID,p1,p2))
fun SAVE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 174,(ParserData.MlyValue.VOID,p1,p2))
fun FSAVEW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 175,(ParserData.MlyValue.VOID,p1,p2))
fun FSCALE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 176,(ParserData.MlyValue.VOID,p1,p2))
fun FSQRT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 177,(ParserData.MlyValue.VOID,p1,p2))
fun FST (p1,p2) = Token.TOKEN (ParserData.LrTable.T 178,(ParserData.MlyValue.VOID,p1,p2))
fun FSTCW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 179,(ParserData.MlyValue.VOID,p1,p2))
fun FSTENV (p1,p2) = Token.TOKEN (ParserData.LrTable.T 180,(ParserData.MlyValue.VOID,p1,p2))
fun FSTENVW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 181,(ParserData.MlyValue.VOID,p1,p2))
fun FSTP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 182,(ParserData.MlyValue.VOID,p1,p2))
fun FSTSW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 183,(ParserData.MlyValue.VOID,p1,p2))
fun FSUB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 184,(ParserData.MlyValue.VOID,p1,p2))
fun FSUBP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 185,(ParserData.MlyValue.VOID,p1,p2))
fun FSUBR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 186,(ParserData.MlyValue.VOID,p1,p2))
fun FSUBRP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 187,(ParserData.MlyValue.VOID,p1,p2))
fun FTST (p1,p2) = Token.TOKEN (ParserData.LrTable.T 188,(ParserData.MlyValue.VOID,p1,p2))
fun FWAIT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 189,(ParserData.MlyValue.VOID,p1,p2))
fun FXAM (p1,p2) = Token.TOKEN (ParserData.LrTable.T 190,(ParserData.MlyValue.VOID,p1,p2))
fun FXCH (p1,p2) = Token.TOKEN (ParserData.LrTable.T 191,(ParserData.MlyValue.VOID,p1,p2))
fun FXTRACT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 192,(ParserData.MlyValue.VOID,p1,p2))
fun FYL2X (p1,p2) = Token.TOKEN (ParserData.LrTable.T 193,(ParserData.MlyValue.VOID,p1,p2))
fun FYL2XP1 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 194,(ParserData.MlyValue.VOID,p1,p2))
fun BOUND (p1,p2) = Token.TOKEN (ParserData.LrTable.T 195,(ParserData.MlyValue.VOID,p1,p2))
fun ENTER (p1,p2) = Token.TOKEN (ParserData.LrTable.T 196,(ParserData.MlyValue.VOID,p1,p2))
fun INS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 197,(ParserData.MlyValue.VOID,p1,p2))
fun LEAVE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 198,(ParserData.MlyValue.VOID,p1,p2))
fun OUTS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 199,(ParserData.MlyValue.VOID,p1,p2))
fun POPA (p1,p2) = Token.TOKEN (ParserData.LrTable.T 200,(ParserData.MlyValue.VOID,p1,p2))
fun PUSHA (p1,p2) = Token.TOKEN (ParserData.LrTable.T 201,(ParserData.MlyValue.VOID,p1,p2))
fun ARPL (p1,p2) = Token.TOKEN (ParserData.LrTable.T 202,(ParserData.MlyValue.VOID,p1,p2))
fun CLTS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 203,(ParserData.MlyValue.VOID,p1,p2))
fun LAR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 204,(ParserData.MlyValue.VOID,p1,p2))
fun LGDT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 205,(ParserData.MlyValue.VOID,p1,p2))
fun LIDT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 206,(ParserData.MlyValue.VOID,p1,p2))
fun LLDT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 207,(ParserData.MlyValue.VOID,p1,p2))
fun LMSW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 208,(ParserData.MlyValue.VOID,p1,p2))
fun LOADALL (p1,p2) = Token.TOKEN (ParserData.LrTable.T 209,(ParserData.MlyValue.VOID,p1,p2))
fun LSL (p1,p2) = Token.TOKEN (ParserData.LrTable.T 210,(ParserData.MlyValue.VOID,p1,p2))
fun LTR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 211,(ParserData.MlyValue.VOID,p1,p2))
fun SGDT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 212,(ParserData.MlyValue.VOID,p1,p2))
fun SIDT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 213,(ParserData.MlyValue.VOID,p1,p2))
fun SLDT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 214,(ParserData.MlyValue.VOID,p1,p2))
fun SMSW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 215,(ParserData.MlyValue.VOID,p1,p2))
fun STR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 216,(ParserData.MlyValue.VOID,p1,p2))
fun VERR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 217,(ParserData.MlyValue.VOID,p1,p2))
fun VERW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 218,(ParserData.MlyValue.VOID,p1,p2))
fun FSETPM (p1,p2) = Token.TOKEN (ParserData.LrTable.T 219,(ParserData.MlyValue.VOID,p1,p2))
fun BSF (p1,p2) = Token.TOKEN (ParserData.LrTable.T 220,(ParserData.MlyValue.VOID,p1,p2))
fun BSR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 221,(ParserData.MlyValue.VOID,p1,p2))
fun BT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 222,(ParserData.MlyValue.VOID,p1,p2))
fun BTC (p1,p2) = Token.TOKEN (ParserData.LrTable.T 223,(ParserData.MlyValue.VOID,p1,p2))
fun BTR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 224,(ParserData.MlyValue.VOID,p1,p2))
fun BTS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 225,(ParserData.MlyValue.VOID,p1,p2))
fun CDQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 226,(ParserData.MlyValue.VOID,p1,p2))
fun CWDE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 227,(ParserData.MlyValue.VOID,p1,p2))
fun IBTS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 228,(ParserData.MlyValue.VOID,p1,p2))
fun INSD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 229,(ParserData.MlyValue.VOID,p1,p2))
fun IRETD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 230,(ParserData.MlyValue.VOID,p1,p2))
fun IRETF (p1,p2) = Token.TOKEN (ParserData.LrTable.T 231,(ParserData.MlyValue.VOID,p1,p2))
fun JECXZ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 232,(ParserData.MlyValue.VOID,p1,p2))
fun LFS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 233,(ParserData.MlyValue.VOID,p1,p2))
fun LGS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 234,(ParserData.MlyValue.VOID,p1,p2))
fun LSS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 235,(ParserData.MlyValue.VOID,p1,p2))
fun LODSD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 236,(ParserData.MlyValue.VOID,p1,p2))
fun LOOPW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 237,(ParserData.MlyValue.VOID,p1,p2))
fun LOOPZW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 238,(ParserData.MlyValue.VOID,p1,p2))
fun LOOPEW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 239,(ParserData.MlyValue.VOID,p1,p2))
fun LOOPNZW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 240,(ParserData.MlyValue.VOID,p1,p2))
fun LOOPNEW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 241,(ParserData.MlyValue.VOID,p1,p2))
fun LOOPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 242,(ParserData.MlyValue.VOID,p1,p2))
fun LOOPZD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 243,(ParserData.MlyValue.VOID,p1,p2))
fun LOOPED (p1,p2) = Token.TOKEN (ParserData.LrTable.T 244,(ParserData.MlyValue.VOID,p1,p2))
fun LOOPNZD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 245,(ParserData.MlyValue.VOID,p1,p2))
fun LOOPNED (p1,p2) = Token.TOKEN (ParserData.LrTable.T 246,(ParserData.MlyValue.VOID,p1,p2))
fun MOVSX (p1,p2) = Token.TOKEN (ParserData.LrTable.T 247,(ParserData.MlyValue.VOID,p1,p2))
fun MOVZX (p1,p2) = Token.TOKEN (ParserData.LrTable.T 248,(ParserData.MlyValue.VOID,p1,p2))
fun OUTSD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 249,(ParserData.MlyValue.VOID,p1,p2))
fun POPAD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 250,(ParserData.MlyValue.VOID,p1,p2))
fun POPFD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 251,(ParserData.MlyValue.VOID,p1,p2))
fun PUSHAD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 252,(ParserData.MlyValue.VOID,p1,p2))
fun PUSHFD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 253,(ParserData.MlyValue.VOID,p1,p2))
fun SCASD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 254,(ParserData.MlyValue.VOID,p1,p2))
fun SETA (p1,p2) = Token.TOKEN (ParserData.LrTable.T 255,(ParserData.MlyValue.VOID,p1,p2))
fun SETAE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 256,(ParserData.MlyValue.VOID,p1,p2))
fun SETB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 257,(ParserData.MlyValue.VOID,p1,p2))
fun SETBE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 258,(ParserData.MlyValue.VOID,p1,p2))
fun SETC (p1,p2) = Token.TOKEN (ParserData.LrTable.T 259,(ParserData.MlyValue.VOID,p1,p2))
fun SETE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 260,(ParserData.MlyValue.VOID,p1,p2))
fun SETG (p1,p2) = Token.TOKEN (ParserData.LrTable.T 261,(ParserData.MlyValue.VOID,p1,p2))
fun SETGE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 262,(ParserData.MlyValue.VOID,p1,p2))
fun SETL (p1,p2) = Token.TOKEN (ParserData.LrTable.T 263,(ParserData.MlyValue.VOID,p1,p2))
fun SETLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 264,(ParserData.MlyValue.VOID,p1,p2))
fun SETNA (p1,p2) = Token.TOKEN (ParserData.LrTable.T 265,(ParserData.MlyValue.VOID,p1,p2))
fun SETNAE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 266,(ParserData.MlyValue.VOID,p1,p2))
fun SETNB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 267,(ParserData.MlyValue.VOID,p1,p2))
fun SETNBE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 268,(ParserData.MlyValue.VOID,p1,p2))
fun SETNC (p1,p2) = Token.TOKEN (ParserData.LrTable.T 269,(ParserData.MlyValue.VOID,p1,p2))
fun SETNE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 270,(ParserData.MlyValue.VOID,p1,p2))
fun SETNG (p1,p2) = Token.TOKEN (ParserData.LrTable.T 271,(ParserData.MlyValue.VOID,p1,p2))
fun SETNGE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 272,(ParserData.MlyValue.VOID,p1,p2))
fun SETNL (p1,p2) = Token.TOKEN (ParserData.LrTable.T 273,(ParserData.MlyValue.VOID,p1,p2))
fun SETNLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 274,(ParserData.MlyValue.VOID,p1,p2))
fun SETNO (p1,p2) = Token.TOKEN (ParserData.LrTable.T 275,(ParserData.MlyValue.VOID,p1,p2))
fun SETNP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 276,(ParserData.MlyValue.VOID,p1,p2))
fun SETNS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 277,(ParserData.MlyValue.VOID,p1,p2))
fun SETNZ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 278,(ParserData.MlyValue.VOID,p1,p2))
fun SETO (p1,p2) = Token.TOKEN (ParserData.LrTable.T 279,(ParserData.MlyValue.VOID,p1,p2))
fun SETP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 280,(ParserData.MlyValue.VOID,p1,p2))
fun SETPE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 281,(ParserData.MlyValue.VOID,p1,p2))
fun SETPO (p1,p2) = Token.TOKEN (ParserData.LrTable.T 282,(ParserData.MlyValue.VOID,p1,p2))
fun SETS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 283,(ParserData.MlyValue.VOID,p1,p2))
fun SETZ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 284,(ParserData.MlyValue.VOID,p1,p2))
fun FCOS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 285,(ParserData.MlyValue.VOID,p1,p2))
fun FLDENVD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 286,(ParserData.MlyValue.VOID,p1,p2))
fun FSAVED (p1,p2) = Token.TOKEN (ParserData.LrTable.T 287,(ParserData.MlyValue.VOID,p1,p2))
fun FSTENVD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 288,(ParserData.MlyValue.VOID,p1,p2))
fun FPREM1 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 289,(ParserData.MlyValue.VOID,p1,p2))
fun FRSTORD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 290,(ParserData.MlyValue.VOID,p1,p2))
fun FSIN (p1,p2) = Token.TOKEN (ParserData.LrTable.T 291,(ParserData.MlyValue.VOID,p1,p2))
fun FSINCOS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 292,(ParserData.MlyValue.VOID,p1,p2))
fun FUCOM (p1,p2) = Token.TOKEN (ParserData.LrTable.T 293,(ParserData.MlyValue.VOID,p1,p2))
fun FUCOMP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 294,(ParserData.MlyValue.VOID,p1,p2))
fun FUCOMPP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 295,(ParserData.MlyValue.VOID,p1,p2))
fun BSWAP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 296,(ParserData.MlyValue.VOID,p1,p2))
fun CMPXCHG (p1,p2) = Token.TOKEN (ParserData.LrTable.T 297,(ParserData.MlyValue.VOID,p1,p2))
fun INVD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 298,(ParserData.MlyValue.VOID,p1,p2))
fun INVLPG (p1,p2) = Token.TOKEN (ParserData.LrTable.T 299,(ParserData.MlyValue.VOID,p1,p2))
fun WBINVD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 300,(ParserData.MlyValue.VOID,p1,p2))
fun XADD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 301,(ParserData.MlyValue.VOID,p1,p2))
fun CPUID (p1,p2) = Token.TOKEN (ParserData.LrTable.T 302,(ParserData.MlyValue.VOID,p1,p2))
fun CMPXCHG8B (p1,p2) = Token.TOKEN (ParserData.LrTable.T 303,(ParserData.MlyValue.VOID,p1,p2))
fun RDMSR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 304,(ParserData.MlyValue.VOID,p1,p2))
fun RDTSC (p1,p2) = Token.TOKEN (ParserData.LrTable.T 305,(ParserData.MlyValue.VOID,p1,p2))
fun WRMSR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 306,(ParserData.MlyValue.VOID,p1,p2))
fun RSM (p1,p2) = Token.TOKEN (ParserData.LrTable.T 307,(ParserData.MlyValue.VOID,p1,p2))
fun RDPMC (p1,p2) = Token.TOKEN (ParserData.LrTable.T 308,(ParserData.MlyValue.VOID,p1,p2))
fun EMMS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 309,(ParserData.MlyValue.VOID,p1,p2))
fun MOVD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 310,(ParserData.MlyValue.VOID,p1,p2))
fun MOVQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 311,(ParserData.MlyValue.VOID,p1,p2))
fun PACKSSDW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 312,(ParserData.MlyValue.VOID,p1,p2))
fun PACKSSWB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 313,(ParserData.MlyValue.VOID,p1,p2))
fun PACKUSWB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 314,(ParserData.MlyValue.VOID,p1,p2))
fun PADDB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 315,(ParserData.MlyValue.VOID,p1,p2))
fun PADDW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 316,(ParserData.MlyValue.VOID,p1,p2))
fun PADDD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 317,(ParserData.MlyValue.VOID,p1,p2))
fun PADDQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 318,(ParserData.MlyValue.VOID,p1,p2))
fun PADDSB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 319,(ParserData.MlyValue.VOID,p1,p2))
fun PADDSW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 320,(ParserData.MlyValue.VOID,p1,p2))
fun PADDUSB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 321,(ParserData.MlyValue.VOID,p1,p2))
fun PADDUSW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 322,(ParserData.MlyValue.VOID,p1,p2))
fun PAND (p1,p2) = Token.TOKEN (ParserData.LrTable.T 323,(ParserData.MlyValue.VOID,p1,p2))
fun PANDN (p1,p2) = Token.TOKEN (ParserData.LrTable.T 324,(ParserData.MlyValue.VOID,p1,p2))
fun POR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 325,(ParserData.MlyValue.VOID,p1,p2))
fun PXOR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 326,(ParserData.MlyValue.VOID,p1,p2))
fun PCMPEQB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 327,(ParserData.MlyValue.VOID,p1,p2))
fun PCMPEQW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 328,(ParserData.MlyValue.VOID,p1,p2))
fun PCMPEQD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 329,(ParserData.MlyValue.VOID,p1,p2))
fun PCMPGTB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 330,(ParserData.MlyValue.VOID,p1,p2))
fun PCMPGTW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 331,(ParserData.MlyValue.VOID,p1,p2))
fun PCMPGTD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 332,(ParserData.MlyValue.VOID,p1,p2))
fun PMADDWD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 333,(ParserData.MlyValue.VOID,p1,p2))
fun PMULHW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 334,(ParserData.MlyValue.VOID,p1,p2))
fun PMULLW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 335,(ParserData.MlyValue.VOID,p1,p2))
fun PSLLW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 336,(ParserData.MlyValue.VOID,p1,p2))
fun PSLLD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 337,(ParserData.MlyValue.VOID,p1,p2))
fun PSLLQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 338,(ParserData.MlyValue.VOID,p1,p2))
fun PSRAD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 339,(ParserData.MlyValue.VOID,p1,p2))
fun PSRAW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 340,(ParserData.MlyValue.VOID,p1,p2))
fun PSRLW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 341,(ParserData.MlyValue.VOID,p1,p2))
fun PSRLD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 342,(ParserData.MlyValue.VOID,p1,p2))
fun PSRLQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 343,(ParserData.MlyValue.VOID,p1,p2))
fun PSUBB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 344,(ParserData.MlyValue.VOID,p1,p2))
fun PSUBW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 345,(ParserData.MlyValue.VOID,p1,p2))
fun PSUBD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 346,(ParserData.MlyValue.VOID,p1,p2))
fun PSUBSB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 347,(ParserData.MlyValue.VOID,p1,p2))
fun PSUBSW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 348,(ParserData.MlyValue.VOID,p1,p2))
fun PSUBUSB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 349,(ParserData.MlyValue.VOID,p1,p2))
fun PSUBUSW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 350,(ParserData.MlyValue.VOID,p1,p2))
fun PUNPCKHBW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 351,(ParserData.MlyValue.VOID,p1,p2))
fun PUNPCKHWD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 352,(ParserData.MlyValue.VOID,p1,p2))
fun PUNPCKHDQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 353,(ParserData.MlyValue.VOID,p1,p2))
fun PUNPCKLBW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 354,(ParserData.MlyValue.VOID,p1,p2))
fun PUNPCKLWD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 355,(ParserData.MlyValue.VOID,p1,p2))
fun PUNPCKLDQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 356,(ParserData.MlyValue.VOID,p1,p2))
fun CMOVA (p1,p2) = Token.TOKEN (ParserData.LrTable.T 357,(ParserData.MlyValue.VOID,p1,p2))
fun CMOVAE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 358,(ParserData.MlyValue.VOID,p1,p2))
fun CMOVB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 359,(ParserData.MlyValue.VOID,p1,p2))
fun CMOVBE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 360,(ParserData.MlyValue.VOID,p1,p2))
fun CMOVC (p1,p2) = Token.TOKEN (ParserData.LrTable.T 361,(ParserData.MlyValue.VOID,p1,p2))
fun CMOVE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 362,(ParserData.MlyValue.VOID,p1,p2))
fun CMOVG (p1,p2) = Token.TOKEN (ParserData.LrTable.T 363,(ParserData.MlyValue.VOID,p1,p2))
fun CMOVGE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 364,(ParserData.MlyValue.VOID,p1,p2))
fun CMOVL (p1,p2) = Token.TOKEN (ParserData.LrTable.T 365,(ParserData.MlyValue.VOID,p1,p2))
fun CMOVLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 366,(ParserData.MlyValue.VOID,p1,p2))
fun CMOVNA (p1,p2) = Token.TOKEN (ParserData.LrTable.T 367,(ParserData.MlyValue.VOID,p1,p2))
fun CMOVNAE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 368,(ParserData.MlyValue.VOID,p1,p2))
fun CMOVNB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 369,(ParserData.MlyValue.VOID,p1,p2))
fun CMOVNBE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 370,(ParserData.MlyValue.VOID,p1,p2))
fun CMOVNC (p1,p2) = Token.TOKEN (ParserData.LrTable.T 371,(ParserData.MlyValue.VOID,p1,p2))
fun CMOVNE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 372,(ParserData.MlyValue.VOID,p1,p2))
fun CMOVNG (p1,p2) = Token.TOKEN (ParserData.LrTable.T 373,(ParserData.MlyValue.VOID,p1,p2))
fun CMOVNGE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 374,(ParserData.MlyValue.VOID,p1,p2))
fun CMOVNL (p1,p2) = Token.TOKEN (ParserData.LrTable.T 375,(ParserData.MlyValue.VOID,p1,p2))
fun CMOVNLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 376,(ParserData.MlyValue.VOID,p1,p2))
fun CMOVNO (p1,p2) = Token.TOKEN (ParserData.LrTable.T 377,(ParserData.MlyValue.VOID,p1,p2))
fun CMOVNP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 378,(ParserData.MlyValue.VOID,p1,p2))
fun CMOVNS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 379,(ParserData.MlyValue.VOID,p1,p2))
fun CMOVNZ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 380,(ParserData.MlyValue.VOID,p1,p2))
fun CMOVO (p1,p2) = Token.TOKEN (ParserData.LrTable.T 381,(ParserData.MlyValue.VOID,p1,p2))
fun CMOVP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 382,(ParserData.MlyValue.VOID,p1,p2))
fun CMOVPE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 383,(ParserData.MlyValue.VOID,p1,p2))
fun CMOVPO (p1,p2) = Token.TOKEN (ParserData.LrTable.T 384,(ParserData.MlyValue.VOID,p1,p2))
fun CMOVS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 385,(ParserData.MlyValue.VOID,p1,p2))
fun CMOVZ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 386,(ParserData.MlyValue.VOID,p1,p2))
fun UD2 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 387,(ParserData.MlyValue.VOID,p1,p2))
fun FCMOVB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 388,(ParserData.MlyValue.VOID,p1,p2))
fun FCMOVBE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 389,(ParserData.MlyValue.VOID,p1,p2))
fun FCMOVE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 390,(ParserData.MlyValue.VOID,p1,p2))
fun FCMOVNB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 391,(ParserData.MlyValue.VOID,p1,p2))
fun FCMOVNBE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 392,(ParserData.MlyValue.VOID,p1,p2))
fun FCMOVNE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 393,(ParserData.MlyValue.VOID,p1,p2))
fun FCMOVNU (p1,p2) = Token.TOKEN (ParserData.LrTable.T 394,(ParserData.MlyValue.VOID,p1,p2))
fun FCMOVU (p1,p2) = Token.TOKEN (ParserData.LrTable.T 395,(ParserData.MlyValue.VOID,p1,p2))
fun FCOMI (p1,p2) = Token.TOKEN (ParserData.LrTable.T 396,(ParserData.MlyValue.VOID,p1,p2))
fun FCOMIP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 397,(ParserData.MlyValue.VOID,p1,p2))
fun FUCOMI (p1,p2) = Token.TOKEN (ParserData.LrTable.T 398,(ParserData.MlyValue.VOID,p1,p2))
fun FUCOMIP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 399,(ParserData.MlyValue.VOID,p1,p2))
fun SYSENTER (p1,p2) = Token.TOKEN (ParserData.LrTable.T 400,(ParserData.MlyValue.VOID,p1,p2))
fun SYSEXIT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 401,(ParserData.MlyValue.VOID,p1,p2))
fun MASKMOVQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 402,(ParserData.MlyValue.VOID,p1,p2))
fun MOVNTQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 403,(ParserData.MlyValue.VOID,p1,p2))
fun PREFETCHT0 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 404,(ParserData.MlyValue.VOID,p1,p2))
fun PREFETCHT1 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 405,(ParserData.MlyValue.VOID,p1,p2))
fun PREFETCHT2 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 406,(ParserData.MlyValue.VOID,p1,p2))
fun PREFETCHNTA (p1,p2) = Token.TOKEN (ParserData.LrTable.T 407,(ParserData.MlyValue.VOID,p1,p2))
fun SFENCE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 408,(ParserData.MlyValue.VOID,p1,p2))
fun FXRSTOR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 409,(ParserData.MlyValue.VOID,p1,p2))
fun FXSAVE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 410,(ParserData.MlyValue.VOID,p1,p2))
fun PSHUFW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 411,(ParserData.MlyValue.VOID,p1,p2))
fun PINSRW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 412,(ParserData.MlyValue.VOID,p1,p2))
fun PEXTRW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 413,(ParserData.MlyValue.VOID,p1,p2))
fun PMOVMSKB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 414,(ParserData.MlyValue.VOID,p1,p2))
fun PMINUB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 415,(ParserData.MlyValue.VOID,p1,p2))
fun PMAXUB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 416,(ParserData.MlyValue.VOID,p1,p2))
fun PAVGB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 417,(ParserData.MlyValue.VOID,p1,p2))
fun PAVGW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 418,(ParserData.MlyValue.VOID,p1,p2))
fun PMULHUW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 419,(ParserData.MlyValue.VOID,p1,p2))
fun PMINSW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 420,(ParserData.MlyValue.VOID,p1,p2))
fun PMAXSW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 421,(ParserData.MlyValue.VOID,p1,p2))
fun PSADBW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 422,(ParserData.MlyValue.VOID,p1,p2))
fun ANDPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 423,(ParserData.MlyValue.VOID,p1,p2))
fun ANDNPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 424,(ParserData.MlyValue.VOID,p1,p2))
fun ORPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 425,(ParserData.MlyValue.VOID,p1,p2))
fun XORPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 426,(ParserData.MlyValue.VOID,p1,p2))
fun MOVUPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 427,(ParserData.MlyValue.VOID,p1,p2))
fun MOVSS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 428,(ParserData.MlyValue.VOID,p1,p2))
fun MOVHLPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 429,(ParserData.MlyValue.VOID,p1,p2))
fun MOVLPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 430,(ParserData.MlyValue.VOID,p1,p2))
fun UNPCKLPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 431,(ParserData.MlyValue.VOID,p1,p2))
fun UNPCKHPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 432,(ParserData.MlyValue.VOID,p1,p2))
fun MOVLHPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 433,(ParserData.MlyValue.VOID,p1,p2))
fun MOVHPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 434,(ParserData.MlyValue.VOID,p1,p2))
fun MOVAPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 435,(ParserData.MlyValue.VOID,p1,p2))
fun MOVMSKPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 436,(ParserData.MlyValue.VOID,p1,p2))
fun CVTPI2PS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 437,(ParserData.MlyValue.VOID,p1,p2))
fun CVTSI2SS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 438,(ParserData.MlyValue.VOID,p1,p2))
fun MOVNTPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 439,(ParserData.MlyValue.VOID,p1,p2))
fun CVTTPS2PI (p1,p2) = Token.TOKEN (ParserData.LrTable.T 440,(ParserData.MlyValue.VOID,p1,p2))
fun CVTTSS2SI (p1,p2) = Token.TOKEN (ParserData.LrTable.T 441,(ParserData.MlyValue.VOID,p1,p2))
fun CVTPS2PI (p1,p2) = Token.TOKEN (ParserData.LrTable.T 442,(ParserData.MlyValue.VOID,p1,p2))
fun CVTSS2SI (p1,p2) = Token.TOKEN (ParserData.LrTable.T 443,(ParserData.MlyValue.VOID,p1,p2))
fun UCOMISS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 444,(ParserData.MlyValue.VOID,p1,p2))
fun COMISS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 445,(ParserData.MlyValue.VOID,p1,p2))
fun SQRTPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 446,(ParserData.MlyValue.VOID,p1,p2))
fun SQRTSS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 447,(ParserData.MlyValue.VOID,p1,p2))
fun RSQRTPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 448,(ParserData.MlyValue.VOID,p1,p2))
fun RSQRTSS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 449,(ParserData.MlyValue.VOID,p1,p2))
fun RCPPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 450,(ParserData.MlyValue.VOID,p1,p2))
fun RCPSS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 451,(ParserData.MlyValue.VOID,p1,p2))
fun ADDPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 452,(ParserData.MlyValue.VOID,p1,p2))
fun ADDSS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 453,(ParserData.MlyValue.VOID,p1,p2))
fun MULPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 454,(ParserData.MlyValue.VOID,p1,p2))
fun MULSS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 455,(ParserData.MlyValue.VOID,p1,p2))
fun SUBPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 456,(ParserData.MlyValue.VOID,p1,p2))
fun SUBSS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 457,(ParserData.MlyValue.VOID,p1,p2))
fun MINPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 458,(ParserData.MlyValue.VOID,p1,p2))
fun MINSS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 459,(ParserData.MlyValue.VOID,p1,p2))
fun DIVPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 460,(ParserData.MlyValue.VOID,p1,p2))
fun DIVSS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 461,(ParserData.MlyValue.VOID,p1,p2))
fun MAXPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 462,(ParserData.MlyValue.VOID,p1,p2))
fun MAXSS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 463,(ParserData.MlyValue.VOID,p1,p2))
fun LDMXCSR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 464,(ParserData.MlyValue.VOID,p1,p2))
fun STMXCSR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 465,(ParserData.MlyValue.VOID,p1,p2))
fun CMPPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 466,(ParserData.MlyValue.VOID,p1,p2))
fun CMPSS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 467,(ParserData.MlyValue.VOID,p1,p2))
fun SHUFPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 468,(ParserData.MlyValue.VOID,p1,p2))
fun CLFLUSH (p1,p2) = Token.TOKEN (ParserData.LrTable.T 469,(ParserData.MlyValue.VOID,p1,p2))
fun LFENCE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 470,(ParserData.MlyValue.VOID,p1,p2))
fun MFENCE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 471,(ParserData.MlyValue.VOID,p1,p2))
fun MOVNTI (p1,p2) = Token.TOKEN (ParserData.LrTable.T 472,(ParserData.MlyValue.VOID,p1,p2))
fun PAUSE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 473,(ParserData.MlyValue.VOID,p1,p2))
fun PSUBQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 474,(ParserData.MlyValue.VOID,p1,p2))
fun PMULUDQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 475,(ParserData.MlyValue.VOID,p1,p2))
fun MOVAPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 476,(ParserData.MlyValue.VOID,p1,p2))
fun MOVNTPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 477,(ParserData.MlyValue.VOID,p1,p2))
fun MOVHPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 478,(ParserData.MlyValue.VOID,p1,p2))
fun MOVLPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 479,(ParserData.MlyValue.VOID,p1,p2))
fun MOVUPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 480,(ParserData.MlyValue.VOID,p1,p2))
fun MOVMSKPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 481,(ParserData.MlyValue.VOID,p1,p2))
fun MOVSD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 482,(ParserData.MlyValue.VOID,p1,p2))
fun ADDPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 483,(ParserData.MlyValue.VOID,p1,p2))
fun ADDSD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 484,(ParserData.MlyValue.VOID,p1,p2))
fun DIVPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 485,(ParserData.MlyValue.VOID,p1,p2))
fun DIVSD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 486,(ParserData.MlyValue.VOID,p1,p2))
fun MAXPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 487,(ParserData.MlyValue.VOID,p1,p2))
fun MAXSD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 488,(ParserData.MlyValue.VOID,p1,p2))
fun MINPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 489,(ParserData.MlyValue.VOID,p1,p2))
fun MINSD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 490,(ParserData.MlyValue.VOID,p1,p2))
fun MULPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 491,(ParserData.MlyValue.VOID,p1,p2))
fun MULSD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 492,(ParserData.MlyValue.VOID,p1,p2))
fun SQRTPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 493,(ParserData.MlyValue.VOID,p1,p2))
fun SQRTSD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 494,(ParserData.MlyValue.VOID,p1,p2))
fun SUBPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 495,(ParserData.MlyValue.VOID,p1,p2))
fun SUBSD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 496,(ParserData.MlyValue.VOID,p1,p2))
fun ANDPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 497,(ParserData.MlyValue.VOID,p1,p2))
fun ANDNPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 498,(ParserData.MlyValue.VOID,p1,p2))
fun ORPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 499,(ParserData.MlyValue.VOID,p1,p2))
fun XORPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 500,(ParserData.MlyValue.VOID,p1,p2))
fun CMPPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 501,(ParserData.MlyValue.VOID,p1,p2))
fun CMPSD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 502,(ParserData.MlyValue.VOID,p1,p2))
fun COMISD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 503,(ParserData.MlyValue.VOID,p1,p2))
fun UCOMISD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 504,(ParserData.MlyValue.VOID,p1,p2))
fun SHUFPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 505,(ParserData.MlyValue.VOID,p1,p2))
fun UNPCKHPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 506,(ParserData.MlyValue.VOID,p1,p2))
fun UNPCKLPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 507,(ParserData.MlyValue.VOID,p1,p2))
fun CVTDQ2PD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 508,(ParserData.MlyValue.VOID,p1,p2))
fun CVTDQ2PS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 509,(ParserData.MlyValue.VOID,p1,p2))
fun CVTPD2DQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 510,(ParserData.MlyValue.VOID,p1,p2))
fun CVTPD2PI (p1,p2) = Token.TOKEN (ParserData.LrTable.T 511,(ParserData.MlyValue.VOID,p1,p2))
fun CVTPD2PS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 512,(ParserData.MlyValue.VOID,p1,p2))
fun CVTPI2PD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 513,(ParserData.MlyValue.VOID,p1,p2))
fun CVTPS2DQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 514,(ParserData.MlyValue.VOID,p1,p2))
fun CVTPS2PD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 515,(ParserData.MlyValue.VOID,p1,p2))
fun CVTSD2SI (p1,p2) = Token.TOKEN (ParserData.LrTable.T 516,(ParserData.MlyValue.VOID,p1,p2))
fun CVTSD2SS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 517,(ParserData.MlyValue.VOID,p1,p2))
fun CVTSI2SD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 518,(ParserData.MlyValue.VOID,p1,p2))
fun CVTSS2SD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 519,(ParserData.MlyValue.VOID,p1,p2))
fun CVTTPD2DQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 520,(ParserData.MlyValue.VOID,p1,p2))
fun CVTTPD2PI (p1,p2) = Token.TOKEN (ParserData.LrTable.T 521,(ParserData.MlyValue.VOID,p1,p2))
fun CVTTPS2DQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 522,(ParserData.MlyValue.VOID,p1,p2))
fun CVTTSD2SI (p1,p2) = Token.TOKEN (ParserData.LrTable.T 523,(ParserData.MlyValue.VOID,p1,p2))
fun MASKMOVDQU (p1,p2) = Token.TOKEN (ParserData.LrTable.T 524,(ParserData.MlyValue.VOID,p1,p2))
fun MOVDQ2Q (p1,p2) = Token.TOKEN (ParserData.LrTable.T 525,(ParserData.MlyValue.VOID,p1,p2))
fun MOVDQA (p1,p2) = Token.TOKEN (ParserData.LrTable.T 526,(ParserData.MlyValue.VOID,p1,p2))
fun MOVDQU (p1,p2) = Token.TOKEN (ParserData.LrTable.T 527,(ParserData.MlyValue.VOID,p1,p2))
fun MOVQ2DQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 528,(ParserData.MlyValue.VOID,p1,p2))
fun MOVNTDQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 529,(ParserData.MlyValue.VOID,p1,p2))
fun PSHUFHW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 530,(ParserData.MlyValue.VOID,p1,p2))
fun PSHUFLW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 531,(ParserData.MlyValue.VOID,p1,p2))
fun PSHUFD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 532,(ParserData.MlyValue.VOID,p1,p2))
fun PSLLDQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 533,(ParserData.MlyValue.VOID,p1,p2))
fun PSRLDQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 534,(ParserData.MlyValue.VOID,p1,p2))
fun PUNPCKHQDQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 535,(ParserData.MlyValue.VOID,p1,p2))
fun PUNPCKLQDQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 536,(ParserData.MlyValue.VOID,p1,p2))
fun CDQE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 537,(ParserData.MlyValue.VOID,p1,p2))
fun CQO (p1,p2) = Token.TOKEN (ParserData.LrTable.T 538,(ParserData.MlyValue.VOID,p1,p2))
fun CMPSQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 539,(ParserData.MlyValue.VOID,p1,p2))
fun CMPXCHG16B (p1,p2) = Token.TOKEN (ParserData.LrTable.T 540,(ParserData.MlyValue.VOID,p1,p2))
fun IRETQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 541,(ParserData.MlyValue.VOID,p1,p2))
fun JRCXZ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 542,(ParserData.MlyValue.VOID,p1,p2))
fun LODSQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 543,(ParserData.MlyValue.VOID,p1,p2))
fun MOVSXD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 544,(ParserData.MlyValue.VOID,p1,p2))
fun POPFQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 545,(ParserData.MlyValue.VOID,p1,p2))
fun PUSHFQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 546,(ParserData.MlyValue.VOID,p1,p2))
fun RDTSCP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 547,(ParserData.MlyValue.VOID,p1,p2))
fun SCASQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 548,(ParserData.MlyValue.VOID,p1,p2))
fun STOSQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 549,(ParserData.MlyValue.VOID,p1,p2))
fun SWAPGS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 550,(ParserData.MlyValue.VOID,p1,p2))
fun MONITOR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 551,(ParserData.MlyValue.VOID,p1,p2))
fun MWAIT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 552,(ParserData.MlyValue.VOID,p1,p2))
fun FISTTP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 553,(ParserData.MlyValue.VOID,p1,p2))
fun ADDSUBPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 554,(ParserData.MlyValue.VOID,p1,p2))
fun ADDSUBPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 555,(ParserData.MlyValue.VOID,p1,p2))
fun MOVDDUP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 556,(ParserData.MlyValue.VOID,p1,p2))
fun MOVSLDUP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 557,(ParserData.MlyValue.VOID,p1,p2))
fun MOVSHDUP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 558,(ParserData.MlyValue.VOID,p1,p2))
fun HADDPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 559,(ParserData.MlyValue.VOID,p1,p2))
fun HADDPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 560,(ParserData.MlyValue.VOID,p1,p2))
fun HSUBPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 561,(ParserData.MlyValue.VOID,p1,p2))
fun HSUBPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 562,(ParserData.MlyValue.VOID,p1,p2))
fun LDDQU (p1,p2) = Token.TOKEN (ParserData.LrTable.T 563,(ParserData.MlyValue.VOID,p1,p2))
fun PSIGNB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 564,(ParserData.MlyValue.VOID,p1,p2))
fun PSIGNW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 565,(ParserData.MlyValue.VOID,p1,p2))
fun PSIGND (p1,p2) = Token.TOKEN (ParserData.LrTable.T 566,(ParserData.MlyValue.VOID,p1,p2))
fun PSHUFB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 567,(ParserData.MlyValue.VOID,p1,p2))
fun PMULHRSW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 568,(ParserData.MlyValue.VOID,p1,p2))
fun PMADDUBSW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 569,(ParserData.MlyValue.VOID,p1,p2))
fun PHSUBW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 570,(ParserData.MlyValue.VOID,p1,p2))
fun PHSUBSW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 571,(ParserData.MlyValue.VOID,p1,p2))
fun PHSUBD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 572,(ParserData.MlyValue.VOID,p1,p2))
fun PHADDSW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 573,(ParserData.MlyValue.VOID,p1,p2))
fun PHADDW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 574,(ParserData.MlyValue.VOID,p1,p2))
fun PHADDD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 575,(ParserData.MlyValue.VOID,p1,p2))
fun PALIGNR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 576,(ParserData.MlyValue.VOID,p1,p2))
fun PABSB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 577,(ParserData.MlyValue.VOID,p1,p2))
fun PABSW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 578,(ParserData.MlyValue.VOID,p1,p2))
fun PABSD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 579,(ParserData.MlyValue.VOID,p1,p2))
fun DPPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 580,(ParserData.MlyValue.VOID,p1,p2))
fun DPPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 581,(ParserData.MlyValue.VOID,p1,p2))
fun BLENDPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 582,(ParserData.MlyValue.VOID,p1,p2))
fun BLENDVPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 583,(ParserData.MlyValue.VOID,p1,p2))
fun BLENDPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 584,(ParserData.MlyValue.VOID,p1,p2))
fun BLENDVPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 585,(ParserData.MlyValue.VOID,p1,p2))
fun ROUNDPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 586,(ParserData.MlyValue.VOID,p1,p2))
fun ROUNDSS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 587,(ParserData.MlyValue.VOID,p1,p2))
fun ROUNDPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 588,(ParserData.MlyValue.VOID,p1,p2))
fun ROUNDSD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 589,(ParserData.MlyValue.VOID,p1,p2))
fun INSERTPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 590,(ParserData.MlyValue.VOID,p1,p2))
fun EXTRACTPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 591,(ParserData.MlyValue.VOID,p1,p2))
fun MPSADBW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 592,(ParserData.MlyValue.VOID,p1,p2))
fun PHMINPOSUW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 593,(ParserData.MlyValue.VOID,p1,p2))
fun PMULLD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 594,(ParserData.MlyValue.VOID,p1,p2))
fun PMULDQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 595,(ParserData.MlyValue.VOID,p1,p2))
fun PBLENDVB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 596,(ParserData.MlyValue.VOID,p1,p2))
fun PBLENDW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 597,(ParserData.MlyValue.VOID,p1,p2))
fun PMINSB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 598,(ParserData.MlyValue.VOID,p1,p2))
fun PMINUW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 599,(ParserData.MlyValue.VOID,p1,p2))
fun PMINSD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 600,(ParserData.MlyValue.VOID,p1,p2))
fun PMINUD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 601,(ParserData.MlyValue.VOID,p1,p2))
fun PMAXSB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 602,(ParserData.MlyValue.VOID,p1,p2))
fun PMAXUW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 603,(ParserData.MlyValue.VOID,p1,p2))
fun PMAXSD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 604,(ParserData.MlyValue.VOID,p1,p2))
fun PMAXUD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 605,(ParserData.MlyValue.VOID,p1,p2))
fun PINSRB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 606,(ParserData.MlyValue.VOID,p1,p2))
fun PINSRD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 607,(ParserData.MlyValue.VOID,p1,p2))
fun PINSRQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 608,(ParserData.MlyValue.VOID,p1,p2))
fun PEXTRB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 609,(ParserData.MlyValue.VOID,p1,p2))
fun PEXTRD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 610,(ParserData.MlyValue.VOID,p1,p2))
fun PEXTRQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 611,(ParserData.MlyValue.VOID,p1,p2))
fun PMOVSXBW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 612,(ParserData.MlyValue.VOID,p1,p2))
fun PMOVZXBW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 613,(ParserData.MlyValue.VOID,p1,p2))
fun PMOVSXBD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 614,(ParserData.MlyValue.VOID,p1,p2))
fun PMOVZXBD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 615,(ParserData.MlyValue.VOID,p1,p2))
fun PMOVSXBQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 616,(ParserData.MlyValue.VOID,p1,p2))
fun PMOVZXBQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 617,(ParserData.MlyValue.VOID,p1,p2))
fun PMOVSXWD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 618,(ParserData.MlyValue.VOID,p1,p2))
fun PMOVZXWD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 619,(ParserData.MlyValue.VOID,p1,p2))
fun PMOVSXWQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 620,(ParserData.MlyValue.VOID,p1,p2))
fun PMOVZXWQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 621,(ParserData.MlyValue.VOID,p1,p2))
fun PMOVSXDQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 622,(ParserData.MlyValue.VOID,p1,p2))
fun PMOVZXDQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 623,(ParserData.MlyValue.VOID,p1,p2))
fun PTEST (p1,p2) = Token.TOKEN (ParserData.LrTable.T 624,(ParserData.MlyValue.VOID,p1,p2))
fun PCMPEQQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 625,(ParserData.MlyValue.VOID,p1,p2))
fun PACKUSDW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 626,(ParserData.MlyValue.VOID,p1,p2))
fun MOVNTDQA (p1,p2) = Token.TOKEN (ParserData.LrTable.T 627,(ParserData.MlyValue.VOID,p1,p2))
fun VMPTRLD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 628,(ParserData.MlyValue.VOID,p1,p2))
fun VMPTRST (p1,p2) = Token.TOKEN (ParserData.LrTable.T 629,(ParserData.MlyValue.VOID,p1,p2))
fun VMCLEAR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 630,(ParserData.MlyValue.VOID,p1,p2))
fun VMREAD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 631,(ParserData.MlyValue.VOID,p1,p2))
fun VMWRITE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 632,(ParserData.MlyValue.VOID,p1,p2))
fun VMCALL (p1,p2) = Token.TOKEN (ParserData.LrTable.T 633,(ParserData.MlyValue.VOID,p1,p2))
fun VMLAUNCH (p1,p2) = Token.TOKEN (ParserData.LrTable.T 634,(ParserData.MlyValue.VOID,p1,p2))
fun VMRESUME (p1,p2) = Token.TOKEN (ParserData.LrTable.T 635,(ParserData.MlyValue.VOID,p1,p2))
fun VMXOFF (p1,p2) = Token.TOKEN (ParserData.LrTable.T 636,(ParserData.MlyValue.VOID,p1,p2))
fun VMXON (p1,p2) = Token.TOKEN (ParserData.LrTable.T 637,(ParserData.MlyValue.VOID,p1,p2))
fun VMFUNC (p1,p2) = Token.TOKEN (ParserData.LrTable.T 638,(ParserData.MlyValue.VOID,p1,p2))
fun INVVPID (p1,p2) = Token.TOKEN (ParserData.LrTable.T 639,(ParserData.MlyValue.VOID,p1,p2))
fun INVEPT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 640,(ParserData.MlyValue.VOID,p1,p2))
fun CRC32 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 641,(ParserData.MlyValue.VOID,p1,p2))
fun POPCNT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 642,(ParserData.MlyValue.VOID,p1,p2))
fun PCMPESTRI (p1,p2) = Token.TOKEN (ParserData.LrTable.T 643,(ParserData.MlyValue.VOID,p1,p2))
fun PCMPESTRM (p1,p2) = Token.TOKEN (ParserData.LrTable.T 644,(ParserData.MlyValue.VOID,p1,p2))
fun PCMPISTRI (p1,p2) = Token.TOKEN (ParserData.LrTable.T 645,(ParserData.MlyValue.VOID,p1,p2))
fun PCMPISTRM (p1,p2) = Token.TOKEN (ParserData.LrTable.T 646,(ParserData.MlyValue.VOID,p1,p2))
fun PCMPGTQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 647,(ParserData.MlyValue.VOID,p1,p2))
fun VSQRTPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 648,(ParserData.MlyValue.VOID,p1,p2))
fun VSQRTPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 649,(ParserData.MlyValue.VOID,p1,p2))
fun VRSQRTPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 650,(ParserData.MlyValue.VOID,p1,p2))
fun VRCPPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 651,(ParserData.MlyValue.VOID,p1,p2))
fun VADDPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 652,(ParserData.MlyValue.VOID,p1,p2))
fun VADDPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 653,(ParserData.MlyValue.VOID,p1,p2))
fun VSUBPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 654,(ParserData.MlyValue.VOID,p1,p2))
fun VSUBPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 655,(ParserData.MlyValue.VOID,p1,p2))
fun VMULPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 656,(ParserData.MlyValue.VOID,p1,p2))
fun VMULPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 657,(ParserData.MlyValue.VOID,p1,p2))
fun VDIVPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 658,(ParserData.MlyValue.VOID,p1,p2))
fun VDIVPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 659,(ParserData.MlyValue.VOID,p1,p2))
fun VCVTPS2PD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 660,(ParserData.MlyValue.VOID,p1,p2))
fun VCVTPD2PS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 661,(ParserData.MlyValue.VOID,p1,p2))
fun VCVTDQ2PS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 662,(ParserData.MlyValue.VOID,p1,p2))
fun VCVTPS2DQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 663,(ParserData.MlyValue.VOID,p1,p2))
fun VCVTTPS2DQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 664,(ParserData.MlyValue.VOID,p1,p2))
fun VCVTTPD2DQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 665,(ParserData.MlyValue.VOID,p1,p2))
fun VCVTPD2DQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 666,(ParserData.MlyValue.VOID,p1,p2))
fun VCVTDQ2PD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 667,(ParserData.MlyValue.VOID,p1,p2))
fun VMINPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 668,(ParserData.MlyValue.VOID,p1,p2))
fun VMINPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 669,(ParserData.MlyValue.VOID,p1,p2))
fun VMAXPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 670,(ParserData.MlyValue.VOID,p1,p2))
fun VMAXPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 671,(ParserData.MlyValue.VOID,p1,p2))
fun VHADDPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 672,(ParserData.MlyValue.VOID,p1,p2))
fun VHADDPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 673,(ParserData.MlyValue.VOID,p1,p2))
fun VHSUBPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 674,(ParserData.MlyValue.VOID,p1,p2))
fun VHSUBPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 675,(ParserData.MlyValue.VOID,p1,p2))
fun VCMPPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 676,(ParserData.MlyValue.VOID,p1,p2))
fun VCMPPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 677,(ParserData.MlyValue.VOID,p1,p2))
fun VADDSUBPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 678,(ParserData.MlyValue.VOID,p1,p2))
fun VADDSUBPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 679,(ParserData.MlyValue.VOID,p1,p2))
fun VDPPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 680,(ParserData.MlyValue.VOID,p1,p2))
fun VROUNDPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 681,(ParserData.MlyValue.VOID,p1,p2))
fun VROUNDPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 682,(ParserData.MlyValue.VOID,p1,p2))
fun VMOVAPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 683,(ParserData.MlyValue.VOID,p1,p2))
fun VMOVAPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 684,(ParserData.MlyValue.VOID,p1,p2))
fun VMOVDQA (p1,p2) = Token.TOKEN (ParserData.LrTable.T 685,(ParserData.MlyValue.VOID,p1,p2))
fun VMOVUPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 686,(ParserData.MlyValue.VOID,p1,p2))
fun VMOVUPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 687,(ParserData.MlyValue.VOID,p1,p2))
fun VMOVDQU (p1,p2) = Token.TOKEN (ParserData.LrTable.T 688,(ParserData.MlyValue.VOID,p1,p2))
fun VMOVMSKPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 689,(ParserData.MlyValue.VOID,p1,p2))
fun VMOVMSKPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 690,(ParserData.MlyValue.VOID,p1,p2))
fun VLDDQU (p1,p2) = Token.TOKEN (ParserData.LrTable.T 691,(ParserData.MlyValue.VOID,p1,p2))
fun VMOVNTPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 692,(ParserData.MlyValue.VOID,p1,p2))
fun VMOVNTPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 693,(ParserData.MlyValue.VOID,p1,p2))
fun VMOVNTDQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 694,(ParserData.MlyValue.VOID,p1,p2))
fun VMOVNTDQA (p1,p2) = Token.TOKEN (ParserData.LrTable.T 695,(ParserData.MlyValue.VOID,p1,p2))
fun VMOVSHDUP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 696,(ParserData.MlyValue.VOID,p1,p2))
fun VMOVSLDUP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 697,(ParserData.MlyValue.VOID,p1,p2))
fun VMOVDDUP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 698,(ParserData.MlyValue.VOID,p1,p2))
fun VUNPCKHPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 699,(ParserData.MlyValue.VOID,p1,p2))
fun VUNPCKHPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 700,(ParserData.MlyValue.VOID,p1,p2))
fun VUNPCKLPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 701,(ParserData.MlyValue.VOID,p1,p2))
fun VBLENDPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 702,(ParserData.MlyValue.VOID,p1,p2))
fun VBLENDPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 703,(ParserData.MlyValue.VOID,p1,p2))
fun VSHUFPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 704,(ParserData.MlyValue.VOID,p1,p2))
fun VSHUFPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 705,(ParserData.MlyValue.VOID,p1,p2))
fun VUNPCKLPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 706,(ParserData.MlyValue.VOID,p1,p2))
fun VBLENDVPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 707,(ParserData.MlyValue.VOID,p1,p2))
fun VBLENDVPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 708,(ParserData.MlyValue.VOID,p1,p2))
fun VPTEST (p1,p2) = Token.TOKEN (ParserData.LrTable.T 709,(ParserData.MlyValue.VOID,p1,p2))
fun VXORPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 710,(ParserData.MlyValue.VOID,p1,p2))
fun VXORPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 711,(ParserData.MlyValue.VOID,p1,p2))
fun VORPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 712,(ParserData.MlyValue.VOID,p1,p2))
fun VORPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 713,(ParserData.MlyValue.VOID,p1,p2))
fun VANDNPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 714,(ParserData.MlyValue.VOID,p1,p2))
fun VANDNPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 715,(ParserData.MlyValue.VOID,p1,p2))
fun VANDPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 716,(ParserData.MlyValue.VOID,p1,p2))
fun VANDPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 717,(ParserData.MlyValue.VOID,p1,p2))
fun VBROADCASTF128 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 718,(ParserData.MlyValue.VOID,p1,p2))
fun VBROADCASTSD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 719,(ParserData.MlyValue.VOID,p1,p2))
fun VBROADCASTSS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 720,(ParserData.MlyValue.VOID,p1,p2))
fun VEXTRACTF128 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 721,(ParserData.MlyValue.VOID,p1,p2))
fun VINSERTF128 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 722,(ParserData.MlyValue.VOID,p1,p2))
fun VMASKMOVPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 723,(ParserData.MlyValue.VOID,p1,p2))
fun VMASKMOVPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 724,(ParserData.MlyValue.VOID,p1,p2))
fun VPERMILPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 725,(ParserData.MlyValue.VOID,p1,p2))
fun VPERMILPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 726,(ParserData.MlyValue.VOID,p1,p2))
fun VPERM2F128 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 727,(ParserData.MlyValue.VOID,p1,p2))
fun VTESTPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 728,(ParserData.MlyValue.VOID,p1,p2))
fun VTESTPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 729,(ParserData.MlyValue.VOID,p1,p2))
fun VZEROALL (p1,p2) = Token.TOKEN (ParserData.LrTable.T 730,(ParserData.MlyValue.VOID,p1,p2))
fun VZEROUPPER (p1,p2) = Token.TOKEN (ParserData.LrTable.T 731,(ParserData.MlyValue.VOID,p1,p2))
fun VCVTSI2SS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 732,(ParserData.MlyValue.VOID,p1,p2))
fun VCVTSI2SD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 733,(ParserData.MlyValue.VOID,p1,p2))
fun VCVTSD2SI (p1,p2) = Token.TOKEN (ParserData.LrTable.T 734,(ParserData.MlyValue.VOID,p1,p2))
fun VCVTTSS2SI (p1,p2) = Token.TOKEN (ParserData.LrTable.T 735,(ParserData.MlyValue.VOID,p1,p2))
fun VCVTTSD2SI (p1,p2) = Token.TOKEN (ParserData.LrTable.T 736,(ParserData.MlyValue.VOID,p1,p2))
fun VCVTSS2SI (p1,p2) = Token.TOKEN (ParserData.LrTable.T 737,(ParserData.MlyValue.VOID,p1,p2))
fun VCOMISD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 738,(ParserData.MlyValue.VOID,p1,p2))
fun VRSQRTSS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 739,(ParserData.MlyValue.VOID,p1,p2))
fun VRCPSS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 740,(ParserData.MlyValue.VOID,p1,p2))
fun VUCOMISS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 741,(ParserData.MlyValue.VOID,p1,p2))
fun VUCOMISD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 742,(ParserData.MlyValue.VOID,p1,p2))
fun VCOMISS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 743,(ParserData.MlyValue.VOID,p1,p2))
fun VADDSS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 744,(ParserData.MlyValue.VOID,p1,p2))
fun VADDSD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 745,(ParserData.MlyValue.VOID,p1,p2))
fun VSUBSS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 746,(ParserData.MlyValue.VOID,p1,p2))
fun VSUBSD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 747,(ParserData.MlyValue.VOID,p1,p2))
fun VMULSS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 748,(ParserData.MlyValue.VOID,p1,p2))
fun VMULSD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 749,(ParserData.MlyValue.VOID,p1,p2))
fun VDIVSS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 750,(ParserData.MlyValue.VOID,p1,p2))
fun VDIVSD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 751,(ParserData.MlyValue.VOID,p1,p2))
fun VSQRTSS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 752,(ParserData.MlyValue.VOID,p1,p2))
fun VSQRTSD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 753,(ParserData.MlyValue.VOID,p1,p2))
fun VCVTSS2SD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 754,(ParserData.MlyValue.VOID,p1,p2))
fun VCVTSD2SS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 755,(ParserData.MlyValue.VOID,p1,p2))
fun VMINSS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 756,(ParserData.MlyValue.VOID,p1,p2))
fun VMINSD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 757,(ParserData.MlyValue.VOID,p1,p2))
fun VMAXSS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 758,(ParserData.MlyValue.VOID,p1,p2))
fun VMAXSD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 759,(ParserData.MlyValue.VOID,p1,p2))
fun VPAND (p1,p2) = Token.TOKEN (ParserData.LrTable.T 760,(ParserData.MlyValue.VOID,p1,p2))
fun VPANDN (p1,p2) = Token.TOKEN (ParserData.LrTable.T 761,(ParserData.MlyValue.VOID,p1,p2))
fun VPOR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 762,(ParserData.MlyValue.VOID,p1,p2))
fun VPXOR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 763,(ParserData.MlyValue.VOID,p1,p2))
fun VPCMPGTB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 764,(ParserData.MlyValue.VOID,p1,p2))
fun VPCMPGTW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 765,(ParserData.MlyValue.VOID,p1,p2))
fun VPCMPGTD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 766,(ParserData.MlyValue.VOID,p1,p2))
fun VPMADDWD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 767,(ParserData.MlyValue.VOID,p1,p2))
fun VPMADDUBSW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 768,(ParserData.MlyValue.VOID,p1,p2))
fun VPAVGB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 769,(ParserData.MlyValue.VOID,p1,p2))
fun VPAVGW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 770,(ParserData.MlyValue.VOID,p1,p2))
fun VPMULUDQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 771,(ParserData.MlyValue.VOID,p1,p2))
fun VPCMPEQB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 772,(ParserData.MlyValue.VOID,p1,p2))
fun VPCMPEQW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 773,(ParserData.MlyValue.VOID,p1,p2))
fun VPCMPEQD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 774,(ParserData.MlyValue.VOID,p1,p2))
fun VPMULLW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 775,(ParserData.MlyValue.VOID,p1,p2))
fun VPMULHUW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 776,(ParserData.MlyValue.VOID,p1,p2))
fun VPMULHW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 777,(ParserData.MlyValue.VOID,p1,p2))
fun VPSUBSW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 778,(ParserData.MlyValue.VOID,p1,p2))
fun VPADDSW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 779,(ParserData.MlyValue.VOID,p1,p2))
fun VPSADBW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 780,(ParserData.MlyValue.VOID,p1,p2))
fun VPADDUSB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 781,(ParserData.MlyValue.VOID,p1,p2))
fun VPADDUSW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 782,(ParserData.MlyValue.VOID,p1,p2))
fun VPADDSB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 783,(ParserData.MlyValue.VOID,p1,p2))
fun VPSUBUSB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 784,(ParserData.MlyValue.VOID,p1,p2))
fun VPSUBUSW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 785,(ParserData.MlyValue.VOID,p1,p2))
fun VPSUBSB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 786,(ParserData.MlyValue.VOID,p1,p2))
fun VPMINUB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 787,(ParserData.MlyValue.VOID,p1,p2))
fun VPMINSW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 788,(ParserData.MlyValue.VOID,p1,p2))
fun VPMAXUB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 789,(ParserData.MlyValue.VOID,p1,p2))
fun VPMAXSW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 790,(ParserData.MlyValue.VOID,p1,p2))
fun VPADDB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 791,(ParserData.MlyValue.VOID,p1,p2))
fun VPADDW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 792,(ParserData.MlyValue.VOID,p1,p2))
fun VPADDD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 793,(ParserData.MlyValue.VOID,p1,p2))
fun VPADDQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 794,(ParserData.MlyValue.VOID,p1,p2))
fun VPSUBB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 795,(ParserData.MlyValue.VOID,p1,p2))
fun VPSUBW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 796,(ParserData.MlyValue.VOID,p1,p2))
fun VPSUBD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 797,(ParserData.MlyValue.VOID,p1,p2))
fun VPSUBQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 798,(ParserData.MlyValue.VOID,p1,p2))
fun VPSLLW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 799,(ParserData.MlyValue.VOID,p1,p2))
fun VPSLLD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 800,(ParserData.MlyValue.VOID,p1,p2))
fun VPSLLQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 801,(ParserData.MlyValue.VOID,p1,p2))
fun VPSRAW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 802,(ParserData.MlyValue.VOID,p1,p2))
fun VPSRLW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 803,(ParserData.MlyValue.VOID,p1,p2))
fun VPSRLD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 804,(ParserData.MlyValue.VOID,p1,p2))
fun VPSRLQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 805,(ParserData.MlyValue.VOID,p1,p2))
fun VPSRAD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 806,(ParserData.MlyValue.VOID,p1,p2))
fun VPHSUBW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 807,(ParserData.MlyValue.VOID,p1,p2))
fun VPHSUBD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 808,(ParserData.MlyValue.VOID,p1,p2))
fun VPHSUBSW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 809,(ParserData.MlyValue.VOID,p1,p2))
fun VPHADDW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 810,(ParserData.MlyValue.VOID,p1,p2))
fun VPHADDD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 811,(ParserData.MlyValue.VOID,p1,p2))
fun VPHADDSW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 812,(ParserData.MlyValue.VOID,p1,p2))
fun VPMULHRSW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 813,(ParserData.MlyValue.VOID,p1,p2))
fun VPSIGNB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 814,(ParserData.MlyValue.VOID,p1,p2))
fun VPSIGNW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 815,(ParserData.MlyValue.VOID,p1,p2))
fun VPSIGND (p1,p2) = Token.TOKEN (ParserData.LrTable.T 816,(ParserData.MlyValue.VOID,p1,p2))
fun VPABSB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 817,(ParserData.MlyValue.VOID,p1,p2))
fun VPABSW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 818,(ParserData.MlyValue.VOID,p1,p2))
fun VPABSD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 819,(ParserData.MlyValue.VOID,p1,p2))
fun VDPPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 820,(ParserData.MlyValue.VOID,p1,p2))
fun VPHMINPOSUW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 821,(ParserData.MlyValue.VOID,p1,p2))
fun VMPSADBW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 822,(ParserData.MlyValue.VOID,p1,p2))
fun VPMAXSB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 823,(ParserData.MlyValue.VOID,p1,p2))
fun VPMAXSD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 824,(ParserData.MlyValue.VOID,p1,p2))
fun VPMAXUD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 825,(ParserData.MlyValue.VOID,p1,p2))
fun VPMINSB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 826,(ParserData.MlyValue.VOID,p1,p2))
fun VPMINSD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 827,(ParserData.MlyValue.VOID,p1,p2))
fun VPMINUD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 828,(ParserData.MlyValue.VOID,p1,p2))
fun VPMAXUW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 829,(ParserData.MlyValue.VOID,p1,p2))
fun VPMINUW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 830,(ParserData.MlyValue.VOID,p1,p2))
fun VPMOVSXBW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 831,(ParserData.MlyValue.VOID,p1,p2))
fun VPMOVZXBW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 832,(ParserData.MlyValue.VOID,p1,p2))
fun VPMOVSXBD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 833,(ParserData.MlyValue.VOID,p1,p2))
fun VPMOVZXBD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 834,(ParserData.MlyValue.VOID,p1,p2))
fun VPMOVSXBQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 835,(ParserData.MlyValue.VOID,p1,p2))
fun VPMOVZXBQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 836,(ParserData.MlyValue.VOID,p1,p2))
fun VPMOVSXWD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 837,(ParserData.MlyValue.VOID,p1,p2))
fun VPMOVZXWD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 838,(ParserData.MlyValue.VOID,p1,p2))
fun VPMOVSXWQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 839,(ParserData.MlyValue.VOID,p1,p2))
fun VPMOVZXWQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 840,(ParserData.MlyValue.VOID,p1,p2))
fun VPMOVSXDQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 841,(ParserData.MlyValue.VOID,p1,p2))
fun VPMOVZXDQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 842,(ParserData.MlyValue.VOID,p1,p2))
fun VPMULDQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 843,(ParserData.MlyValue.VOID,p1,p2))
fun VPMULLD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 844,(ParserData.MlyValue.VOID,p1,p2))
fun VROUNDSD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 845,(ParserData.MlyValue.VOID,p1,p2))
fun VROUNDSS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 846,(ParserData.MlyValue.VOID,p1,p2))
fun VPOPCNT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 847,(ParserData.MlyValue.VOID,p1,p2))
fun VPCMPGTQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 848,(ParserData.MlyValue.VOID,p1,p2))
fun VPCMPESTRI (p1,p2) = Token.TOKEN (ParserData.LrTable.T 849,(ParserData.MlyValue.VOID,p1,p2))
fun VPCMPESTRM (p1,p2) = Token.TOKEN (ParserData.LrTable.T 850,(ParserData.MlyValue.VOID,p1,p2))
fun VPCMPISTRI (p1,p2) = Token.TOKEN (ParserData.LrTable.T 851,(ParserData.MlyValue.VOID,p1,p2))
fun VPCMPISTRM (p1,p2) = Token.TOKEN (ParserData.LrTable.T 852,(ParserData.MlyValue.VOID,p1,p2))
fun VPCLMULQDQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 853,(ParserData.MlyValue.VOID,p1,p2))
fun VAESDEC (p1,p2) = Token.TOKEN (ParserData.LrTable.T 854,(ParserData.MlyValue.VOID,p1,p2))
fun VAESDECLAST (p1,p2) = Token.TOKEN (ParserData.LrTable.T 855,(ParserData.MlyValue.VOID,p1,p2))
fun VAESENC (p1,p2) = Token.TOKEN (ParserData.LrTable.T 856,(ParserData.MlyValue.VOID,p1,p2))
fun VAESENCLAST (p1,p2) = Token.TOKEN (ParserData.LrTable.T 857,(ParserData.MlyValue.VOID,p1,p2))
fun VAESIMX (p1,p2) = Token.TOKEN (ParserData.LrTable.T 858,(ParserData.MlyValue.VOID,p1,p2))
fun VAESKEYGENASSIST (p1,p2) = Token.TOKEN (ParserData.LrTable.T 859,(ParserData.MlyValue.VOID,p1,p2))
fun VSTMXCSR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 860,(ParserData.MlyValue.VOID,p1,p2))
fun VMOVSS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 861,(ParserData.MlyValue.VOID,p1,p2))
fun VMOVSD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 862,(ParserData.MlyValue.VOID,p1,p2))
fun VCMPSS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 863,(ParserData.MlyValue.VOID,p1,p2))
fun VCMPSD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 864,(ParserData.MlyValue.VOID,p1,p2))
fun VMOVHPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 865,(ParserData.MlyValue.VOID,p1,p2))
fun VMOVHPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 866,(ParserData.MlyValue.VOID,p1,p2))
fun VMOVLPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 867,(ParserData.MlyValue.VOID,p1,p2))
fun VMOVLPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 868,(ParserData.MlyValue.VOID,p1,p2))
fun VMOVLHPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 869,(ParserData.MlyValue.VOID,p1,p2))
fun VMOVHLPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 870,(ParserData.MlyValue.VOID,p1,p2))
fun VMOVQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 871,(ParserData.MlyValue.VOID,p1,p2))
fun VMOVD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 872,(ParserData.MlyValue.VOID,p1,p2))
fun VPACKUSWB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 873,(ParserData.MlyValue.VOID,p1,p2))
fun VPACKSSDW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 874,(ParserData.MlyValue.VOID,p1,p2))
fun VPACKSSWB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 875,(ParserData.MlyValue.VOID,p1,p2))
fun VPUNPCKHBW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 876,(ParserData.MlyValue.VOID,p1,p2))
fun VPUNPCKHWD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 877,(ParserData.MlyValue.VOID,p1,p2))
fun VPUNPCKLBW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 878,(ParserData.MlyValue.VOID,p1,p2))
fun VPUNPCKLWD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 879,(ParserData.MlyValue.VOID,p1,p2))
fun VPUNPCKHDQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 880,(ParserData.MlyValue.VOID,p1,p2))
fun VPUNPCKLDQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 881,(ParserData.MlyValue.VOID,p1,p2))
fun VPUNPCKLQDQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 882,(ParserData.MlyValue.VOID,p1,p2))
fun VPUNPCKHQDQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 883,(ParserData.MlyValue.VOID,p1,p2))
fun VPSHUFHW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 884,(ParserData.MlyValue.VOID,p1,p2))
fun VPSHUFLW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 885,(ParserData.MlyValue.VOID,p1,p2))
fun VPSHUFD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 886,(ParserData.MlyValue.VOID,p1,p2))
fun VPMOVMSKB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 887,(ParserData.MlyValue.VOID,p1,p2))
fun VMASKMOVDQU (p1,p2) = Token.TOKEN (ParserData.LrTable.T 888,(ParserData.MlyValue.VOID,p1,p2))
fun VPINSRW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 889,(ParserData.MlyValue.VOID,p1,p2))
fun VPEXTRW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 890,(ParserData.MlyValue.VOID,p1,p2))
fun VPALIGNR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 891,(ParserData.MlyValue.VOID,p1,p2))
fun VPSHUFB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 892,(ParserData.MlyValue.VOID,p1,p2))
fun VEXTRACTPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 893,(ParserData.MlyValue.VOID,p1,p2))
fun VINSERTPS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 894,(ParserData.MlyValue.VOID,p1,p2))
fun VPACKUSDW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 895,(ParserData.MlyValue.VOID,p1,p2))
fun VPCMPEQQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 896,(ParserData.MlyValue.VOID,p1,p2))
fun VPBLENDVB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 897,(ParserData.MlyValue.VOID,p1,p2))
fun VPBLENDW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 898,(ParserData.MlyValue.VOID,p1,p2))
fun VPEXTRB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 899,(ParserData.MlyValue.VOID,p1,p2))
fun VPEXTRD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 900,(ParserData.MlyValue.VOID,p1,p2))
fun VPEXTRQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 901,(ParserData.MlyValue.VOID,p1,p2))
fun VPINSRB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 902,(ParserData.MlyValue.VOID,p1,p2))
fun VPINSRD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 903,(ParserData.MlyValue.VOID,p1,p2))
fun VPINSRQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 904,(ParserData.MlyValue.VOID,p1,p2))
fun VFMADD132PD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 905,(ParserData.MlyValue.VOID,p1,p2))
fun VFMADD213PD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 906,(ParserData.MlyValue.VOID,p1,p2))
fun VFMADD231PD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 907,(ParserData.MlyValue.VOID,p1,p2))
fun VFMADD132PS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 908,(ParserData.MlyValue.VOID,p1,p2))
fun VFMADD213PS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 909,(ParserData.MlyValue.VOID,p1,p2))
fun VFMADD231PS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 910,(ParserData.MlyValue.VOID,p1,p2))
fun VFMADD132SD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 911,(ParserData.MlyValue.VOID,p1,p2))
fun VFMADD213SD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 912,(ParserData.MlyValue.VOID,p1,p2))
fun VFMADD231SD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 913,(ParserData.MlyValue.VOID,p1,p2))
fun VFMADD132SS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 914,(ParserData.MlyValue.VOID,p1,p2))
fun VFMADD213SS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 915,(ParserData.MlyValue.VOID,p1,p2))
fun VFMADD231SS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 916,(ParserData.MlyValue.VOID,p1,p2))
fun VFMADDSUB132PD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 917,(ParserData.MlyValue.VOID,p1,p2))
fun VFMADDSUB213PD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 918,(ParserData.MlyValue.VOID,p1,p2))
fun VFMADDSUB231PD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 919,(ParserData.MlyValue.VOID,p1,p2))
fun VFMADDSUB132PS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 920,(ParserData.MlyValue.VOID,p1,p2))
fun VFMADDSUB213PS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 921,(ParserData.MlyValue.VOID,p1,p2))
fun VFMADDSUB231PS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 922,(ParserData.MlyValue.VOID,p1,p2))
fun VFMSUBADD132PD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 923,(ParserData.MlyValue.VOID,p1,p2))
fun VFMSUBADD213PD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 924,(ParserData.MlyValue.VOID,p1,p2))
fun VFMSUBADD231PD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 925,(ParserData.MlyValue.VOID,p1,p2))
fun VFMSUBADD132PS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 926,(ParserData.MlyValue.VOID,p1,p2))
fun VFMSUBADD213PS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 927,(ParserData.MlyValue.VOID,p1,p2))
fun VFMSUBADD231PS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 928,(ParserData.MlyValue.VOID,p1,p2))
fun VFMSUB132PD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 929,(ParserData.MlyValue.VOID,p1,p2))
fun VFMSUB213PD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 930,(ParserData.MlyValue.VOID,p1,p2))
fun VFMSUB231PD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 931,(ParserData.MlyValue.VOID,p1,p2))
fun VFMSUB132PS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 932,(ParserData.MlyValue.VOID,p1,p2))
fun VFMSUB213PS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 933,(ParserData.MlyValue.VOID,p1,p2))
fun VFMSUB231PS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 934,(ParserData.MlyValue.VOID,p1,p2))
fun VFMSUB132SD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 935,(ParserData.MlyValue.VOID,p1,p2))
fun VFMSUB213SD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 936,(ParserData.MlyValue.VOID,p1,p2))
fun VFMSUB231SD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 937,(ParserData.MlyValue.VOID,p1,p2))
fun VFMSUB132SS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 938,(ParserData.MlyValue.VOID,p1,p2))
fun VFMSUB213SS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 939,(ParserData.MlyValue.VOID,p1,p2))
fun VFMSUB231SS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 940,(ParserData.MlyValue.VOID,p1,p2))
fun VFNMADD132PD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 941,(ParserData.MlyValue.VOID,p1,p2))
fun VFNMADD213PD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 942,(ParserData.MlyValue.VOID,p1,p2))
fun VFNMADD231PD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 943,(ParserData.MlyValue.VOID,p1,p2))
fun VFNMADD132PS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 944,(ParserData.MlyValue.VOID,p1,p2))
fun VFNMADD213PS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 945,(ParserData.MlyValue.VOID,p1,p2))
fun VFNMADD231PS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 946,(ParserData.MlyValue.VOID,p1,p2))
fun VFNMADD132SD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 947,(ParserData.MlyValue.VOID,p1,p2))
fun VFNMADD213SD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 948,(ParserData.MlyValue.VOID,p1,p2))
fun VFNMADD231SD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 949,(ParserData.MlyValue.VOID,p1,p2))
fun VFNMADD132SS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 950,(ParserData.MlyValue.VOID,p1,p2))
fun VFNMADD213SS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 951,(ParserData.MlyValue.VOID,p1,p2))
fun VFNMADD231SS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 952,(ParserData.MlyValue.VOID,p1,p2))
fun VFNMSUB132PD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 953,(ParserData.MlyValue.VOID,p1,p2))
fun VFNMSUB213PD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 954,(ParserData.MlyValue.VOID,p1,p2))
fun VFNMSUB231PD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 955,(ParserData.MlyValue.VOID,p1,p2))
fun VFNMSUB132PS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 956,(ParserData.MlyValue.VOID,p1,p2))
fun VFNMSUB213PS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 957,(ParserData.MlyValue.VOID,p1,p2))
fun VFNMSUB231PS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 958,(ParserData.MlyValue.VOID,p1,p2))
fun VFNMSUB132SD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 959,(ParserData.MlyValue.VOID,p1,p2))
fun VFNMSUB213SD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 960,(ParserData.MlyValue.VOID,p1,p2))
fun VFNMSUB231SD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 961,(ParserData.MlyValue.VOID,p1,p2))
fun VFNMSUB132SS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 962,(ParserData.MlyValue.VOID,p1,p2))
fun VFNMSUB213SS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 963,(ParserData.MlyValue.VOID,p1,p2))
fun VFNMSUB231SS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 964,(ParserData.MlyValue.VOID,p1,p2))
fun ANDN (p1,p2) = Token.TOKEN (ParserData.LrTable.T 965,(ParserData.MlyValue.VOID,p1,p2))
fun BEXTR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 966,(ParserData.MlyValue.VOID,p1,p2))
fun BLSI (p1,p2) = Token.TOKEN (ParserData.LrTable.T 967,(ParserData.MlyValue.VOID,p1,p2))
fun BLSMSK (p1,p2) = Token.TOKEN (ParserData.LrTable.T 968,(ParserData.MlyValue.VOID,p1,p2))
fun BLSR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 969,(ParserData.MlyValue.VOID,p1,p2))
fun BZHI (p1,p2) = Token.TOKEN (ParserData.LrTable.T 970,(ParserData.MlyValue.VOID,p1,p2))
fun LZCNT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 971,(ParserData.MlyValue.VOID,p1,p2))
fun MULX (p1,p2) = Token.TOKEN (ParserData.LrTable.T 972,(ParserData.MlyValue.VOID,p1,p2))
fun PDEP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 973,(ParserData.MlyValue.VOID,p1,p2))
fun PEXT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 974,(ParserData.MlyValue.VOID,p1,p2))
fun RORX (p1,p2) = Token.TOKEN (ParserData.LrTable.T 975,(ParserData.MlyValue.VOID,p1,p2))
fun SARX (p1,p2) = Token.TOKEN (ParserData.LrTable.T 976,(ParserData.MlyValue.VOID,p1,p2))
fun SHLX (p1,p2) = Token.TOKEN (ParserData.LrTable.T 977,(ParserData.MlyValue.VOID,p1,p2))
fun SHRX (p1,p2) = Token.TOKEN (ParserData.LrTable.T 978,(ParserData.MlyValue.VOID,p1,p2))
fun TZCNT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 979,(ParserData.MlyValue.VOID,p1,p2))
fun VPBROADCASTB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 980,(ParserData.MlyValue.VOID,p1,p2))
fun VPBROADCASTD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 981,(ParserData.MlyValue.VOID,p1,p2))
fun VPBROADCASTQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 982,(ParserData.MlyValue.VOID,p1,p2))
fun VPBROADCASTW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 983,(ParserData.MlyValue.VOID,p1,p2))
fun R8 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 984,(ParserData.MlyValue.VOID,p1,p2))
fun RH (p1,p2) = Token.TOKEN (ParserData.LrTable.T 985,(ParserData.MlyValue.VOID,p1,p2))
fun R16 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 986,(ParserData.MlyValue.VOID,p1,p2))
fun R32 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 987,(ParserData.MlyValue.VOID,p1,p2))
fun R64 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 988,(ParserData.MlyValue.VOID,p1,p2))
fun XMM (p1,p2) = Token.TOKEN (ParserData.LrTable.T 989,(ParserData.MlyValue.VOID,p1,p2))
fun YMM (p1,p2) = Token.TOKEN (ParserData.LrTable.T 990,(ParserData.MlyValue.VOID,p1,p2))
fun ZMM (p1,p2) = Token.TOKEN (ParserData.LrTable.T 991,(ParserData.MlyValue.VOID,p1,p2))
fun SPECIFICREG (p1,p2) = Token.TOKEN (ParserData.LrTable.T 992,(ParserData.MlyValue.VOID,p1,p2))
fun REG_TYPE_TERMINAL (p1,p2) = Token.TOKEN (ParserData.LrTable.T 993,(ParserData.MlyValue.VOID,p1,p2))
fun M8 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 994,(ParserData.MlyValue.VOID,p1,p2))
fun M16 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 995,(ParserData.MlyValue.VOID,p1,p2))
fun M32 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 996,(ParserData.MlyValue.VOID,p1,p2))
fun M64 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 997,(ParserData.MlyValue.VOID,p1,p2))
fun M128 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 998,(ParserData.MlyValue.VOID,p1,p2))
fun M256 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 999,(ParserData.MlyValue.VOID,p1,p2))
fun MEM_TERMINAL (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1000,(ParserData.MlyValue.VOID,p1,p2))
fun IMMONE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1001,(ParserData.MlyValue.VOID,p1,p2))
fun IMM8 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1002,(ParserData.MlyValue.VOID,p1,p2))
fun IMM16 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1003,(ParserData.MlyValue.VOID,p1,p2))
fun IMM32 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1004,(ParserData.MlyValue.VOID,p1,p2))
fun IMM64 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1005,(ParserData.MlyValue.VOID,p1,p2))
fun IMM_TERMINAL (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1006,(ParserData.MlyValue.VOID,p1,p2))
fun ZF (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1007,(ParserData.MlyValue.VOID,p1,p2))
fun PF (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1008,(ParserData.MlyValue.VOID,p1,p2))
fun SF (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1009,(ParserData.MlyValue.VOID,p1,p2))
fun CF (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1010,(ParserData.MlyValue.VOID,p1,p2))
fun OF (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1011,(ParserData.MlyValue.VOID,p1,p2))
fun AF (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1012,(ParserData.MlyValue.VOID,p1,p2))
fun OP1 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1013,(ParserData.MlyValue.VOID,p1,p2))
fun OP2 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1014,(ParserData.MlyValue.VOID,p1,p2))
fun OP3 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1015,(ParserData.MlyValue.VOID,p1,p2))
fun OP1_W3 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1016,(ParserData.MlyValue.VOID,p1,p2))
fun OP1_W2 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1017,(ParserData.MlyValue.VOID,p1,p2))
fun OP1_W1 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1018,(ParserData.MlyValue.VOID,p1,p2))
fun OP1_W0 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1019,(ParserData.MlyValue.VOID,p1,p2))
fun OP2_W3 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1020,(ParserData.MlyValue.VOID,p1,p2))
fun OP2_W2 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1021,(ParserData.MlyValue.VOID,p1,p2))
fun OP2_W1 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1022,(ParserData.MlyValue.VOID,p1,p2))
fun OP2_W0 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1023,(ParserData.MlyValue.VOID,p1,p2))
fun OP3_W3 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1024,(ParserData.MlyValue.VOID,p1,p2))
fun OP3_W2 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1025,(ParserData.MlyValue.VOID,p1,p2))
fun OP3_W1 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1026,(ParserData.MlyValue.VOID,p1,p2))
fun OP3_W0 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1027,(ParserData.MlyValue.VOID,p1,p2))
fun RAX (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1028,(ParserData.MlyValue.VOID,p1,p2))
fun RBX (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1029,(ParserData.MlyValue.VOID,p1,p2))
fun RCX (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1030,(ParserData.MlyValue.VOID,p1,p2))
fun RDX (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1031,(ParserData.MlyValue.VOID,p1,p2))
fun COMMA (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1032,(ParserData.MlyValue.VOID,p1,p2))
fun EMPTY_FORMULA (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1033,(ParserData.MlyValue.VOID,p1,p2))
fun COLON (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1034,(ParserData.MlyValue.VOID,p1,p2))
fun LBRACKET (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1035,(ParserData.MlyValue.VOID,p1,p2))
fun RBRACKET (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1036,(ParserData.MlyValue.VOID,p1,p2))
fun LPAREN (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1037,(ParserData.MlyValue.VOID,p1,p2))
fun RPAREN (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1038,(ParserData.MlyValue.VOID,p1,p2))
fun SEMI_COLON (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1039,(ParserData.MlyValue.VOID,p1,p2))
fun OP_PLUS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1040,(ParserData.MlyValue.VOID,p1,p2))
fun EQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1041,(ParserData.MlyValue.VOID,p1,p2))
fun ARROW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1042,(ParserData.MlyValue.VOID,p1,p2))
fun EOF (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1043,(ParserData.MlyValue.VOID,p1,p2))
fun UNDERSCORE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1044,(ParserData.MlyValue.VOID,p1,p2))
fun NEWLINE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1045,(ParserData.MlyValue.VOID,p1,p2))
fun QMARK (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1046,(ParserData.MlyValue.VOID,p1,p2))
fun FEQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1047,(ParserData.MlyValue.VOID,p1,p2))
fun BEQ (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1048,(ParserData.MlyValue.VOID,p1,p2))
fun TRUE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1049,(ParserData.MlyValue.VOID,p1,p2))
fun FALSE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1050,(ParserData.MlyValue.VOID,p1,p2))
fun B_BINOP_AND (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1051,(ParserData.MlyValue.VOID,p1,p2))
fun B_BINOP_OR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1052,(ParserData.MlyValue.VOID,p1,p2))
fun B_BINOP_XOR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1053,(ParserData.MlyValue.VOID,p1,p2))
fun B_BINOP_IFF (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1054,(ParserData.MlyValue.VOID,p1,p2))
fun B_BINOP_IMPLIES (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1055,(ParserData.MlyValue.VOID,p1,p2))
fun TERNOP_VFMADD132_SINGLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1056,(ParserData.MlyValue.VOID,p1,p2))
fun TERNOP_VFMADD132_DOUBLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1057,(ParserData.MlyValue.VOID,p1,p2))
fun TERNOP_VFMSUB132_SINGLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1058,(ParserData.MlyValue.VOID,p1,p2))
fun TERNOP_VFMSUB132_DOUBLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1059,(ParserData.MlyValue.VOID,p1,p2))
fun TERNOP_VFNMADD132_SINGLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1060,(ParserData.MlyValue.VOID,p1,p2))
fun TERNOP_VFNMADD132_DOUBLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1061,(ParserData.MlyValue.VOID,p1,p2))
fun TERNOP_VFNMSUB132_SINGLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1062,(ParserData.MlyValue.VOID,p1,p2))
fun TERNOP_VNFMSUB132_DOUBLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1063,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_AND (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1064,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_CONCAT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1065,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_DIV (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1066,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_MINUS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1067,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_MODULUS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1068,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_MULT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1069,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_OR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1070,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_PLUS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1071,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_ROT_LEFT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1072,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_ROT_RIGHT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1073,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_SHIFT_LEFT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1074,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_SHIFT_RIGHT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1075,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_SIGNED_DIV (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1076,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_SIGNED_MOD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1077,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_SIGN_SHIFT_RIGHT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1078,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_XOR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1079,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_ADD_SINGLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1080,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_SUB_SINGLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1081,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_DIV_SINGLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1082,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_MUL_SINGLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1083,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_ADD_DOUBLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1084,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_SUB_DOUBLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1085,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_DIV_DOUBLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1086,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_MUL_DOUBLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1087,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_CMPF (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1088,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_CMPD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1089,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_MINCMP_SINGLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1090,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_MAXCMP_SINGLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1091,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_MAXCMP_DOUBLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1092,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_MINCMP_DOUBLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1093,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_IDIV_QUOTIENT_INT8 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1094,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_IDIV_REMAINDER_INT8 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1095,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_DIV_QUOTIENT_INT8 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1096,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_DIV_REMAINDER_INT8 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1097,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_IDIV_QUOTIENT_INT16 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1098,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_IDIV_REMAINDER_INT16 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1099,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_DIV_QUOTIENT_INT16 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1100,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_DIV_REMAINDER_INT16 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1101,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_IDIV_QUOTIENT_INT32 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1102,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_IDIV_REMAINDER_INT32 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1103,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_DIV_QUOTIENT_INT32 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1104,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_DIV_REMAINDER_INT32 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1105,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_DIV_QUOTIENT_INT64 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1106,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_DIV_REMAINDER_INT64 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1107,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_IDIV_QUOTIENT_INT64 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1108,(ParserData.MlyValue.VOID,p1,p2))
fun BINOP_IDIV_REMAINDER_INT64 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1109,(ParserData.MlyValue.VOID,p1,p2))
fun UNOP_SEXTEND16 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1110,(ParserData.MlyValue.VOID,p1,p2))
fun UNOP_SEXTEND32 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1111,(ParserData.MlyValue.VOID,p1,p2))
fun UNOP_SEXTEND64 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1112,(ParserData.MlyValue.VOID,p1,p2))
fun UNOP_SEXTEND128 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1113,(ParserData.MlyValue.VOID,p1,p2))
fun UNOP_SEXTEND256 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1114,(ParserData.MlyValue.VOID,p1,p2))
fun UNOP_NOT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1115,(ParserData.MlyValue.VOID,p1,p2))
fun UNOP_NEG (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1116,(ParserData.MlyValue.VOID,p1,p2))
fun UNOP_CVT_INT32_TO_DOUBLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1117,(ParserData.MlyValue.VOID,p1,p2))
fun UNOP_CVT_INT32_TO_SINGLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1118,(ParserData.MlyValue.VOID,p1,p2))
fun UNOP_CVT_DOUBLE_TO_INT32 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1119,(ParserData.MlyValue.VOID,p1,p2))
fun UNOP_CVT_DOUBLE_TO_SINGLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1120,(ParserData.MlyValue.VOID,p1,p2))
fun UNOP_CVT_SINGLE_TO_INT32 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1121,(ParserData.MlyValue.VOID,p1,p2))
fun UNOP_CVT_SINGLE_TO_DOUBLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1122,(ParserData.MlyValue.VOID,p1,p2))
fun UNOP_CVT_DOUBLE_TO_INT64 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1123,(ParserData.MlyValue.VOID,p1,p2))
fun UNOP_CVT_INT64_TO_DOUBLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1124,(ParserData.MlyValue.VOID,p1,p2))
fun UNOP_CVT_INT64_TO_SINGLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1125,(ParserData.MlyValue.VOID,p1,p2))
fun UNOP_CVT_SINGLE_TO_INT64 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1126,(ParserData.MlyValue.VOID,p1,p2))
fun UNOP_CVT_DOUBLE_TO_INT32_TRUNCATE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1127,(ParserData.MlyValue.VOID,p1,p2))
fun UNOP_CVT_SINGLE_TO_INT32_TRUNCATE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1128,(ParserData.MlyValue.VOID,p1,p2))
fun UNOP_CVT_DOUBLE_TO_INT64_TRUNCATE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1129,(ParserData.MlyValue.VOID,p1,p2))
fun UNOP_CVT_SINGLE_TO_INT64_TRUNCATE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1130,(ParserData.MlyValue.VOID,p1,p2))
fun UNOP_APPROX_RECIPROCAL_SINGLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1131,(ParserData.MlyValue.VOID,p1,p2))
fun UNOP_APPROX_RECIPROCAL_SQRT_SINGLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1132,(ParserData.MlyValue.VOID,p1,p2))
fun UNOP_SQRT_DOUBLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1133,(ParserData.MlyValue.VOID,p1,p2))
fun UNOP_SQRT_SINGLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1134,(ParserData.MlyValue.VOID,p1,p2))
fun UNDEF (p1,p2) = Token.TOKEN (ParserData.LrTable.T 1135,(ParserData.MlyValue.VOID,p1,p2))
end
end
